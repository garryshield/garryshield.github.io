<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Garry Shield</title>
  
  <subtitle>Stay Hungry Stay Foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://garryshield.github.com/"/>
  <updated>2018-08-17T13:07:07.000Z</updated>
  <id>http://garryshield.github.com/</id>
  
  <author>
    <name>Garryshield</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Shadowsocks 安装及配置</title>
    <link href="http://garryshield.github.com/2018/08/17/shadowsocks/"/>
    <id>http://garryshield.github.com/2018/08/17/shadowsocks/</id>
    <published>2018-08-17T13:07:07.000Z</published>
    <updated>2018-08-17T13:07:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1.-%E5%AE%89%E8%A3%85">1. 安装</h2><p>使用 pip 安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br><span class="line">pip install shadowsocks</span><br></pre></td></tr></table></figure><h2 id="2.-%E5%90%AF%E5%8A%A8">2. 启动</h2><h4 id="2.1.-%E6%96%B9%E5%BC%8F%E4%B8%80">2.1. 方式一</h4><p>直接启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -p 8388 -k 123456 -m aes-256-cfb --<span class="built_in">log</span>-file /root/shadowsocks.log --user nobody -d start</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="2.1.-%E6%96%B9%E5%BC%8F%E4%BA%8C">2.1. 方式二</h4><p>通过配置文件启动。<br>单用户：</p><figure class="highlight json"><figcaption><span>/root/shadowsocks.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line">  <span class="attr">"server_port"</span>:<span class="number">8388</span>,</span><br><span class="line">  <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">  <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">  <span class="attr">"password"</span>:<span class="string">"123456"</span>,</span><br><span class="line">  <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">  <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">  <span class="attr">"fast_open"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多用户：</p><figure class="highlight json"><figcaption><span>/root/shadowsocks.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line">  <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">  <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">  <span class="attr">"port_password"</span>: &#123;</span><br><span class="line">    <span class="attr">"8388"</span>:<span class="string">"123456"</span>,</span><br><span class="line">    <span class="attr">"8389"</span>:<span class="string">"123456"</span>,</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="string">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">  <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">  <span class="attr">"fast_open"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssserver -c /root/shadowsocks.json --<span class="built_in">log</span>-file /root/shadowsocks.log --user nobody -d start</span><br></pre></td></tr></table></figure><p><code>-d start</code> 启动。<br><code>-d stop</code> 停止。<br><code>-d restart</code> 重启。</p><p><strong>注：一般我们都需要运程访问 Shadowsocks 服务，因此需要设置防火墙开启相应端口。</strong></p><h2 id="3.-%E4%BC%98%E5%8C%96">3. 优化</h2><h4 id="3.1.-%E5%A2%9E%E5%8A%A0%E6%9C%80%E5%A4%A7%E5%8F%AF%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6">3.1. 增加最大可打开文件描述符</h4><p><code>vi /etc/security/limits.conf</code><br>添加如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* soft nofile 51200</span><br><span class="line">* hard nofile 51200</span><br></pre></td></tr></table></figure><p>启动前先运行 <code>ulimit -n 51200</code>。</p><h4 id="3.2.-%E4%BC%98%E5%8C%96%E5%86%85%E6%A0%B8%E5%8F%82%E6%95%B0">3.2. 优化内核参数</h4><p><code>vi /etc/sysctl.conf</code><br>添加如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">fs.file-max = 51200</span><br><span class="line"></span><br><span class="line">net.core.rmem_max = 67108864</span><br><span class="line">net.core.wmem_max = 67108864</span><br><span class="line">net.core.netdev_max_backlog = 250000</span><br><span class="line">net.core.somaxconn = 4096</span><br><span class="line"></span><br><span class="line">net.ipv4.tcp_syncookies = 1</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_tw_recycle = 0</span><br><span class="line">net.ipv4.tcp_fin_timeout = 30</span><br><span class="line">net.ipv4.tcp_keepalive_time = 1200</span><br><span class="line">net.ipv4.ip_local_port_range = 10000 65000</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 8192</span><br><span class="line">net.ipv4.tcp_max_tw_buckets = 5000</span><br><span class="line">net.ipv4.tcp_fastopen = 3</span><br><span class="line">net.ipv4.tcp_mem = 25600 51200 102400</span><br><span class="line">net.ipv4.tcp_rmem = 4096 87380 67108864</span><br><span class="line">net.ipv4.tcp_wmem = 4096 65536 67108864</span><br><span class="line">net.ipv4.tcp_mtu_probing = 1</span><br><span class="line">net.ipv4.tcp_congestion_control = hybla</span><br></pre></td></tr></table></figure><p>运行 <code>sysctl -p</code> 使其生效。</p><h2 id="4.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">4. 参考链接</h2><p>· <a href="http://shadowsocks.org/en/index.html" target="_blank" rel="noopener">Shadowsocks</a><br>· <a href="https://github.com/shadowsocks/shadowsocks/wiki" target="_blank" rel="noopener">Shadowsocks GitHub</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1.-%E5%AE%89%E8%A3%85&quot;&gt;1. 安装&lt;/h2&gt;
&lt;p&gt;使用 pip 安装。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;python --version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip install shadowsocks&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2.-%E5%90%AF%E5%8A%A8&quot;&gt;2. 启动&lt;/h2&gt;
&lt;h4 id=&quot;2.1.-%E6%96%B9%E5%BC%8F%E4%B8%80&quot;&gt;2.1. 方式一&lt;/h4&gt;
&lt;p&gt;直接启动。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssserver -p 8388 -k 123456 -m aes-256-cfb --&lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;-file /root/shadowsocks.log --user nobody -d start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Python" scheme="http://garryshield.github.com/categories/Python/"/>
    
    
      <category term="Shadowsocks" scheme="http://garryshield.github.com/tags/Shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>Yii PHP Framework</title>
    <link href="http://garryshield.github.com/2018/08/16/yii/"/>
    <id>http://garryshield.github.com/2018/08/16/yii/</id>
    <published>2018-08-16T08:08:13.000Z</published>
    <updated>2018-08-16T08:08:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1.-%E5%AE%89%E8%A3%85">1. 安装</h2><p>通过 <a href="http://getcomposer.org/" target="_blank" rel="noopener">Composer</a> 安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -sS https://getcomposer.org/installer | php</span><br><span class="line">mv composer.phar /usr/<span class="built_in">local</span>/bin/composer</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project --prefer-dist yiisoft/yii2-app-advanced yii-application</span><br></pre></td></tr></table></figure><h2 id="2.-%E5%88%9D%E5%A7%8B%E5%8C%96">2. 初始化</h2><p>初始化应用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> yii-application</span><br><span class="line">php ./init</span><br></pre></td></tr></table></figure><h2 id="3.-%E6%95%B0%E6%8D%AE%E5%BA%93">3. 数据库</h2><p>初始化数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php ./yii migrate</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1.-%E5%AE%89%E8%A3%85&quot;&gt;1. 安装&lt;/h2&gt;
&lt;p&gt;通过 &lt;a href=&quot;http://getcomposer.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Composer&lt;/a&gt; 安装。&lt;/p&gt;
&lt;figur
      
    
    </summary>
    
      <category term="Php" scheme="http://garryshield.github.com/categories/Php/"/>
    
      <category term="Yii" scheme="http://garryshield.github.com/categories/Php/Yii/"/>
    
    
      <category term="Yii" scheme="http://garryshield.github.com/tags/Yii/"/>
    
  </entry>
  
  <entry>
    <title>自动化运维工具 - Ansible</title>
    <link href="http://garryshield.github.com/2018/08/15/ansible/"/>
    <id>http://garryshield.github.com/2018/08/15/ansible/</id>
    <published>2018-08-15T08:57:02.000Z</published>
    <updated>2018-08-15T08:57:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible</a> 是一个轻量级的IT自动化工具，集合了众多运维工具（puppet、cfengine、chef、func、fabric）的优点，实现了批量系统配置、批量程序部署、批量运行命令等功能。</p><p><a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible</a> 是基于模块工作的，本身没有批量部署的能力。真正具有批量部署的是 <a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible</a> 所运行的模块，包括：<br>1、连接插件 connection plugins：负责和被监控端实现通信；<br>2、host inventory：指定操作的主机，是一个配置文件里面定义监控的主机；<br>3、各种模块核心模块、command 模块、自定义模块；<br>4、借助于插件完成记录日志邮件等功能；<br>5、playbook：剧本执行多个任务时，非必需可以让节点一次性运行多个任务。</p><a id="more"></a><h2 id="1.-%E5%AE%89%E8%A3%85">1. 安装</h2><p><a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible</a> 基于 Python，可以通过 pip 安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python --version</span><br><span class="line">pip install ansible</span><br><span class="line">ansible --version</span><br></pre></td></tr></table></figure><h2 id="2.-%E9%85%8D%E7%BD%AE">2. 配置</h2><p><a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible</a> 按以下顺序加载第一个找到的配置文件：<br>1、<code>ANSIBLE_CONFIG</code> 环境变量<br>2、<code>ansible.cfg</code> 当前目录下<br>3、<code>~/.ansible.cfg</code> 家目录下<br>4、<code>/etc/ansible/ansible.cfg</code></p><p>通过 pip 安装需要手动创建配置文件，配置文件的格式可以参考 <a href="https://raw.githubusercontent.com/ansible/ansible/devel/examples/ansible.cfg" target="_blank" rel="noopener">官方样例</a>。</p><h2 id="3.-inventory">3. inventory</h2><p>在大规模的配置管理工作中需要管理不同业务的机器，这些机器的信息都存放在 <a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible</a> 的 inventory 组件里。配置部署针对的主机必须先存放在 inventory 里，这样才能使用 <a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible</a> 对它进行操作。默认 <a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible</a> 的 inventory 是一个静态的 ini 文件 <code>/etc/ansible/hosts</code>。亦可通过 <code>ANSIBLE_HOSTS</code> 环境变量指定或者命令运行时用 <code>-i</code> 参数临时设置。<br>参考示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1、100.0.0.1 ansible_ssh_pass=<span class="string">'123456'</span></span><br><span class="line">2、100.0.0.2 ansible_ssh_pass=<span class="string">'123456'</span></span><br><span class="line">3、[webserver]</span><br><span class="line">4、100.0.0.1[1:3]</span><br><span class="line">5、[webserver:vars]</span><br><span class="line">6、ansible_ssh_pass=<span class="string">'123456'</span></span><br><span class="line">7、[dbserver:children]</span><br><span class="line">8、webserver</span><br></pre></td></tr></table></figure><p>第一、二行定义一个主机，指定 ssh 登录密码<br>第三行定义了一个叫 webserver 的组<br>第四行定义了 webserver 组下面四个主机从100.0.0.11-100.0.0.13<br>第五、六行定义了 webserver 组的 ssh 登录密码<br>第七、八行定义了 dbserver dbserver 组包含 webserver 组</p><h2 id="4.-ad-hoc">4. ad-hoc</h2><p>一般来说，我们可以用 Ad-Hoc command 和 Playbook 两种方式来操作 <a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible</a>。前者是透过一次次简短的指令来操作 <a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible</a>，而后者则是先把任务写好，然后再一次执行。两者的关系就好比我们在 Linux Shell 里打指令和先写个 Shell Script 再执行一样。</p><p>使用 <code>ansible-doc -l</code> 可以查看所有自带模块，还可以使用 <code>ansible-doc 模块名</code>，查看模块的介绍以及案例。</p><p>命令用法：<code>ansible &lt;host-pattern&gt; [options]</code>。</p><p>例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m ping</span><br><span class="line">ansible all -m <span class="built_in">command</span> -a <span class="string">"echo Hello World"</span></span><br></pre></td></tr></table></figure><p>从以上的例子中可以看到 Ad-Hoc commands 一次只能处理一件事情。</p><h2 id="5.-playbook">5. Playbook</h2><p>Playbook 即剧本。通过事先写好的剧本让被管理主机进行指定的动作 (Plays) 和任务 (Tasks)。 Playbook 文件使用 YAML 编写。</p><p>例如：</p><figure class="highlight yaml"><figcaption><span>test.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">- name:</span> <span class="string">test</span> <span class="string">playbook</span></span><br><span class="line"><span class="attr">  hosts:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">  tasks:</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">get</span> <span class="string">hostname</span></span><br><span class="line"><span class="attr">      shell:</span> <span class="string">hostname</span></span><br><span class="line"><span class="attr">      register:</span> <span class="string">hostname</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    - debug:</span> <span class="string">var=hostname</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">echo</span> <span class="string">'hello world'</span></span><br><span class="line"><span class="attr">      command:</span> <span class="string">echo</span> <span class="string">'hello world'</span></span><br><span class="line"><span class="attr">      register:</span> <span class="string">echo</span></span><br><span class="line"></span><br><span class="line"><span class="attr">    - debug:</span> <span class="string">var=echo</span></span><br></pre></td></tr></table></figure><h2 id="6.-%E6%A8%A1%E5%9D%97">6. 模块</h2><p>在 <a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible</a> 里，其实都是通过现成的模块 (Modules) 在操作 <a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible</a>，掌握了如何使用模块 (Modules)就可以快速上手，其余都只是延伸使用。</p><p><a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible</a> 中模块 (Modules) 的总数已来到 836 个之多，其种类约有 12 种，从套件 (Packaging)、资料库 (Database)、通知 (Notification)、云端 (Cloud)、Windows 到网络 (Network) 等。要是找不到想要的功能，我们还可以透过 command 和 shell 等 Modules 自行扩充。详情查看<a href="https://docs.ansible.com/ansible/latest/modules/modules_by_category.html" target="_blank" rel="noopener">官方模块</a>。</p><h4 id="6.1.-command">6.1. command</h4><p>command 模块用于运行系统命令。不支持管道符和变量等（&quot;&lt;&quot;, &quot;&gt;&quot;, &quot;|&quot;, and &quot;&amp;&quot;等），如果要使用这些，那么可以使用 shell 模块。</p><p>常用参数：<br><code>argv</code>：使用一个列表形式代替字符串形式的 command。<br><code>chdir</code>：执行前切换目录。<br><code>creates</code>：指定一个文件名，如果文件存在则不执行。<br><code>removes</code>：指定一个文件名，如果文件存在才执行。</p><p>示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">- name:</span> <span class="string">Reboot</span> <span class="string">at</span> <span class="string">now</span></span><br><span class="line"><span class="attr">  command:</span> <span class="string">/usr/sbin/shutdown</span> <span class="bullet">-r</span> <span class="string">now</span></span><br><span class="line"></span><br><span class="line"><span class="attr">- name:</span> <span class="string">return</span> <span class="string">motd</span> <span class="string">to</span> <span class="string">registered</span> <span class="string">var</span></span><br><span class="line"><span class="attr">  command:</span> <span class="string">cat</span> <span class="string">/etc/motd</span></span><br><span class="line"><span class="attr">  register:</span> <span class="string">mymotd</span></span><br><span class="line"></span><br><span class="line"><span class="attr">- name:</span> <span class="string">Run</span> <span class="string">the</span> <span class="string">command</span> <span class="string">if</span> <span class="string">the</span> <span class="string">specified</span> <span class="string">file</span> <span class="string">does</span> <span class="string">not</span> <span class="string">exist.</span></span><br><span class="line"><span class="attr">  command:</span> <span class="string">/usr/bin/make_database.sh</span> <span class="string">arg1</span> <span class="string">arg2</span></span><br><span class="line"><span class="attr">  args:</span></span><br><span class="line"><span class="attr">    creates:</span> <span class="string">/path/to/database</span></span><br><span class="line"></span><br><span class="line"><span class="attr">- name:</span> <span class="string">This</span> <span class="string">command</span> <span class="string">will</span> <span class="string">change</span> <span class="string">the</span> <span class="string">working</span> <span class="string">directory</span> <span class="string">to</span> <span class="string">somedir/</span> <span class="string">and</span> <span class="string">will</span> <span class="string">only</span> <span class="string">run</span> <span class="string">when</span> <span class="string">/path/to/database</span> <span class="string">doesn't</span> <span class="string">exist.</span></span><br><span class="line"><span class="attr">  command:</span> <span class="string">/usr/bin/make_database.sh</span> <span class="string">arg1</span> <span class="string">arg2</span></span><br><span class="line"><span class="attr">  args:</span></span><br><span class="line"><span class="attr">    chdir:</span> <span class="string">somedir/</span></span><br><span class="line"><span class="attr">    creates:</span> <span class="string">/path/to/database</span></span><br><span class="line"></span><br><span class="line"><span class="attr">- name:</span> <span class="string">use</span> <span class="string">argv</span> <span class="string">to</span> <span class="string">send</span> <span class="string">the</span> <span class="string">command</span> <span class="string">as</span> <span class="string">a</span> <span class="string">list.</span>  <span class="string">Be</span> <span class="string">sure</span> <span class="string">to</span> <span class="string">leave</span> <span class="string">command</span> <span class="string">empty</span></span><br><span class="line"><span class="attr">  command:</span></span><br><span class="line"><span class="attr">  args:</span></span><br><span class="line"><span class="attr">    argv:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">echo</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">testing</span></span><br><span class="line"></span><br><span class="line"><span class="attr">- name:</span> <span class="string">safely</span> <span class="string">use</span> <span class="string">templated</span> <span class="string">variable</span> <span class="string">to</span> <span class="string">run</span> <span class="string">command.</span> <span class="string">Always</span> <span class="string">use</span> <span class="string">the</span> <span class="string">quote</span> <span class="string">filter</span> <span class="string">to</span> <span class="string">avoid</span> <span class="string">injection</span> <span class="string">issues.</span></span><br><span class="line"><span class="attr">  command:</span> <span class="string">cat</span> <span class="string">&#123;&#123;</span> <span class="string">myfile|quote</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">  register:</span> <span class="string">myoutput</span></span><br></pre></td></tr></table></figure><h4 id="6.2.-copy">6.2. copy</h4><p>copy 模块用于从本地或者远程节点复制文件到远程节点，fetch 模块用于从远程节点复制文件到本地，如果要复制同时使用变量修改文件应该使用 template 模块。</p><p>常用参数：<br><code>src</code>：要复制到远程节点的本地文件，可以是相对或者绝对路径，如果拷贝的是文件夹，那么文件夹会整体拷贝，如果结尾是 <code>/</code>，那么只有文件夹内的东西被考过去。<br><code>content</code>：用来替代src，用于将指定文件的内容，拷贝到远程节点文件内。<br><code>dest</code>：指定远程节点上的文件，需要绝对路径。如果 src 指向的是文件夹，这个参数也必须是指向文件夹。<br><code>remote_src</code>：默认为 no，指定是否 <code>src</code> 是本地还是远程节点。<br><code>backup</code>：是否备份远程节点上的原始文件，在拷贝之前。如果发生什么意外，原始文件还能使用。<br><code>follow</code>：默认为 no，当拷贝的文件夹内有符号链接时，复制后是否同时建立符号链接。<br><code>force</code>：默认为 yes，是否覆盖远程的同名文件。<br><code>group</code>：复制后的文件所属组。<br><code>owner</code>：复制后的文件权所属用户。<br><code>mode</code>：复制后的文件权限。<br><code>validate</code>：复制前执行的验证命令，验证通过则复制。通过 <code>%s</code> 变量代替复制的文件。</p><p>示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">- name:</span> <span class="string">example</span> <span class="string">copying</span> <span class="string">file</span> <span class="string">with</span> <span class="string">owner</span> <span class="string">and</span> <span class="string">permissions</span></span><br><span class="line"><span class="attr">  copy:</span></span><br><span class="line"><span class="attr">    src:</span> <span class="string">/srv/myfiles/foo.conf</span></span><br><span class="line"><span class="attr">    dest:</span> <span class="string">/etc/foo.conf</span></span><br><span class="line"><span class="attr">    owner:</span> <span class="string">foo</span></span><br><span class="line"><span class="attr">    group:</span> <span class="string">foo</span></span><br><span class="line"><span class="attr">    mode:</span> <span class="number">0644</span></span><br><span class="line"></span><br><span class="line"><span class="attr">- name:</span> <span class="string">The</span> <span class="string">same</span> <span class="string">example</span> <span class="string">as</span> <span class="string">above,</span> <span class="string">but</span> <span class="string">using</span> <span class="string">a</span> <span class="string">symbolic</span> <span class="string">mode</span> <span class="string">equivalent</span> <span class="string">to</span> <span class="number">0644</span></span><br><span class="line"><span class="attr">  copy:</span></span><br><span class="line"><span class="attr">    src:</span> <span class="string">/srv/myfiles/foo.conf</span></span><br><span class="line"><span class="attr">    dest:</span> <span class="string">/etc/foo.conf</span></span><br><span class="line"><span class="attr">    owner:</span> <span class="string">foo</span></span><br><span class="line"><span class="attr">    group:</span> <span class="string">foo</span></span><br><span class="line"><span class="attr">    mode:</span> <span class="string">u=rw,g=r,o=r</span></span><br><span class="line"></span><br><span class="line"><span class="attr">- name:</span> <span class="string">Another</span> <span class="string">symbolic</span> <span class="string">mode</span> <span class="string">example,</span> <span class="string">adding</span> <span class="string">some</span> <span class="string">permissions</span> <span class="string">and</span> <span class="string">removing</span> <span class="string">others</span></span><br><span class="line"><span class="attr">  copy:</span></span><br><span class="line"><span class="attr">    src:</span> <span class="string">/srv/myfiles/foo.conf</span></span><br><span class="line"><span class="attr">    dest:</span> <span class="string">/etc/foo.conf</span></span><br><span class="line"><span class="attr">    owner:</span> <span class="string">foo</span></span><br><span class="line"><span class="attr">    group:</span> <span class="string">foo</span></span><br><span class="line"><span class="attr">    mode:</span> <span class="string">u+rw,g-wx,o-rwx</span></span><br><span class="line"></span><br><span class="line"><span class="attr">- name:</span> <span class="string">Copy</span> <span class="string">a</span> <span class="string">new</span> <span class="string">"ntp.conf file into place, backing up the original if it differs from the copied version</span></span><br><span class="line"><span class="string">  copy:</span></span><br><span class="line"><span class="string">    src: /mine/ntp.conf</span></span><br><span class="line"><span class="string">    dest: /etc/ntp.conf</span></span><br><span class="line"><span class="string">    owner: root</span></span><br><span class="line"><span class="string">    group: root</span></span><br><span class="line"><span class="string">    mode: 0644</span></span><br><span class="line"><span class="string">    backup: yes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- name: Copy a new "</span><span class="string">sudoers"</span> <span class="string">file</span> <span class="string">into</span> <span class="string">place,</span> <span class="string">after</span> <span class="string">passing</span> <span class="string">validation</span> <span class="string">with</span> <span class="string">visudo</span></span><br><span class="line"><span class="attr">  copy:</span></span><br><span class="line"><span class="attr">    src:</span> <span class="string">/mine/sudoers</span></span><br><span class="line"><span class="attr">    dest:</span> <span class="string">/etc/sudoers</span></span><br><span class="line"><span class="attr">    validate:</span> <span class="string">/usr/sbin/visudo</span> <span class="bullet">-cf</span> <span class="string">%s</span></span><br><span class="line"></span><br><span class="line"><span class="attr">- name:</span> <span class="string">Copy</span> <span class="string">a</span> <span class="string">"sudoers"</span> <span class="string">file</span> <span class="string">on</span> <span class="string">the</span> <span class="string">remote</span> <span class="string">machine</span> <span class="string">for</span> <span class="string">editing</span></span><br><span class="line"><span class="attr">  copy:</span></span><br><span class="line"><span class="attr">    src:</span> <span class="string">/etc/sudoers</span></span><br><span class="line"><span class="attr">    dest:</span> <span class="string">/etc/sudoers.edit</span></span><br><span class="line"><span class="attr">    remote_src:</span> <span class="literal">yes</span></span><br><span class="line"><span class="attr">    validate:</span> <span class="string">/usr/sbin/visudo</span> <span class="bullet">-cf</span> <span class="string">%s</span></span><br><span class="line"></span><br><span class="line"><span class="attr">- name:</span> <span class="string">Copy</span> <span class="string">using</span> <span class="string">the</span> <span class="string">'content'</span> <span class="string">for</span> <span class="string">inline</span> <span class="string">data</span></span><br><span class="line"><span class="attr">  copy:</span></span><br><span class="line"><span class="attr">    content:</span> <span class="string">'# This file was moved to /etc/other.conf'</span></span><br><span class="line"><span class="attr">    dest:</span> <span class="string">/etc/mine.conf'</span></span><br></pre></td></tr></table></figure><h4 id="6.3.-fetch">6.3. fetch</h4><p>fetch 模块用于从远程节点复制文件到本地<br>示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Store file into /tmp/fetched/host.example.com/tmp/somefile</span></span><br><span class="line"><span class="attr">- fetch:</span></span><br><span class="line"><span class="attr">    src:</span> <span class="string">/tmp/somefile</span></span><br><span class="line"><span class="attr">    dest:</span> <span class="string">/tmp/fetched</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specifying a path directly</span></span><br><span class="line"><span class="attr">- fetch:</span></span><br><span class="line"><span class="attr">    src:</span> <span class="string">/tmp/somefile</span></span><br><span class="line"><span class="attr">    dest:</span> <span class="string">/tmp/prefix-&#123;&#123;</span> <span class="string">inventory_hostname</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">    flat:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specifying a destination path</span></span><br><span class="line"><span class="attr">- fetch:</span></span><br><span class="line"><span class="attr">    src:</span> <span class="string">/tmp/uniquefile</span></span><br><span class="line"><span class="attr">    dest:</span> <span class="string">/tmp/special/</span></span><br><span class="line"><span class="attr">    flat:</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Storing in a path relative to the playbook</span></span><br><span class="line"><span class="attr">- fetch:</span></span><br><span class="line"><span class="attr">    src:</span> <span class="string">/tmp/uniquefile</span></span><br><span class="line"><span class="attr">    dest:</span> <span class="string">special/prefix-&#123;&#123;</span> <span class="string">inventory_hostname</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">    flat:</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure><h4 id="6.4.-file">6.4. file</h4><p>file 模块用来设置文件、链接、目录的属性，或者移除文件、链接、目录，很多其他的模块也会包含这些作用。</p><p>示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># change file ownership, group and mode. When specifying mode using octal numbers, first digit should always be 0.</span></span><br><span class="line"><span class="attr">- file:</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">/etc/foo.conf</span></span><br><span class="line"><span class="attr">    owner:</span> <span class="string">foo</span></span><br><span class="line"><span class="attr">    group:</span> <span class="string">foo</span></span><br><span class="line"><span class="attr">    mode:</span> <span class="number">0644</span></span><br><span class="line"><span class="attr">- file:</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">/work</span></span><br><span class="line"><span class="attr">    owner:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    group:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    mode:</span> <span class="number">01777</span></span><br><span class="line"><span class="attr">- file:</span></span><br><span class="line"><span class="attr">    src:</span> <span class="string">/file/to/link/to</span></span><br><span class="line"><span class="attr">    dest:</span> <span class="string">/path/to/symlink</span></span><br><span class="line"><span class="attr">    owner:</span> <span class="string">foo</span></span><br><span class="line"><span class="attr">    group:</span> <span class="string">foo</span></span><br><span class="line"><span class="attr">    state:</span> <span class="string">link</span></span><br><span class="line"><span class="attr">- file:</span></span><br><span class="line"><span class="attr">    src:</span> <span class="string">'/tmp/<span class="template-variable">&#123;&#123; item.src &#125;&#125;</span>'</span></span><br><span class="line"><span class="attr">    dest:</span> <span class="string">'<span class="template-variable">&#123;&#123; item.dest &#125;&#125;</span>'</span></span><br><span class="line"><span class="attr">    state:</span> <span class="string">link</span></span><br><span class="line"><span class="attr">  with_items:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">&#123;</span> <span class="attr">src:</span> <span class="string">'x'</span><span class="string">,</span> <span class="attr">dest:</span> <span class="string">'y'</span> <span class="string">&#125;</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">&#123;</span> <span class="attr">src:</span> <span class="string">'z'</span><span class="string">,</span> <span class="attr">dest:</span> <span class="string">'k'</span> <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># touch a file, using symbolic modes to set the permissions (equivalent to 0644)</span></span><br><span class="line"><span class="attr">- file:</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">/etc/foo.conf</span></span><br><span class="line"><span class="attr">    state:</span> <span class="string">touch</span></span><br><span class="line"><span class="attr">    mode:</span> <span class="string">"u=rw,g=r,o=r"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># touch the same file, but add/remove some permissions</span></span><br><span class="line"><span class="attr">- file:</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">/etc/foo.conf</span></span><br><span class="line"><span class="attr">    state:</span> <span class="string">touch</span></span><br><span class="line"><span class="attr">    mode:</span> <span class="string">"u+rw,g-wx,o-rwx"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># create a directory if it doesn't exist</span></span><br><span class="line"><span class="attr">- file:</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">/etc/some_directory</span></span><br><span class="line"><span class="attr">    state:</span> <span class="string">directory</span></span><br><span class="line"><span class="attr">    mode:</span> <span class="number">0755</span></span><br></pre></td></tr></table></figure><h2 id="7.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">7. 参考链接</h2><p>· <a href="https://www.ansible.com/" target="_blank" rel="noopener">Ansible</a><br>· <a href="https://docs.ansible.com/" target="_blank" rel="noopener">Ansible Docuement</a><br>· <a href="https://galaxy.ansible.com/" target="_blank" rel="noopener">Ansible Galaxy</a><br>· <a href="https://docs.ansible.com/ansible/latest/modules/modules_by_category.html" target="_blank" rel="noopener">Ansible Module Index</a><br>· <a href="https://raw.githubusercontent.com/ansible/ansible/devel/examples/ansible.cfg" target="_blank" rel="noopener">ansible.cfg</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.ansible.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ansible&lt;/a&gt; 是一个轻量级的IT自动化工具，集合了众多运维工具（puppet、cfengine、chef、func、fabric）的优点，实现了批量系统配置、批量程序部署、批量运行命令等功能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.ansible.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ansible&lt;/a&gt; 是基于模块工作的，本身没有批量部署的能力。真正具有批量部署的是 &lt;a href=&quot;https://www.ansible.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ansible&lt;/a&gt; 所运行的模块，包括：&lt;br&gt;
1、连接插件 connection plugins：负责和被监控端实现通信；&lt;br&gt;
2、host inventory：指定操作的主机，是一个配置文件里面定义监控的主机；&lt;br&gt;
3、各种模块核心模块、command 模块、自定义模块；&lt;br&gt;
4、借助于插件完成记录日志邮件等功能；&lt;br&gt;
5、playbook：剧本执行多个任务时，非必需可以让节点一次性运行多个任务。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://garryshield.github.com/categories/Python/"/>
    
      <category term="Ansible" scheme="http://garryshield.github.com/categories/Python/Ansible/"/>
    
    
      <category term="Ansible" scheme="http://garryshield.github.com/tags/Ansible/"/>
    
  </entry>
  
  <entry>
    <title>使用 Electron 构建跨平台桌面应用</title>
    <link href="http://garryshield.github.com/2018/08/10/electronjs/"/>
    <id>http://garryshield.github.com/2018/08/10/electronjs/</id>
    <published>2018-08-10T05:08:43.000Z</published>
    <updated>2018-08-10T05:08:43.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2018/08/10/electronjs/assets/logo.svg" width="400"></p><p><a href="https://electronjs.org/" target="_blank" rel="noopener">Electron</a> 最早由 Github 开发用于构建文本编辑器 Atom，通过整合 Chromium 和 Node.js 能够直接使用 HTML，CSS，JavaScript 进行开发。</p><h2 id="1.-%E5%BA%94%E7%94%A8%E7%BB%93%E6%9E%84">1. 应用结构</h2><p><a href="https://electronjs.org/" target="_blank" rel="noopener">Electron</a> 基于 Node.js ，安装之前先确保系统已经安装好 Node.js。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Node.js/electron</span><br><span class="line">mkdir 01 &amp;&amp; <span class="built_in">cd</span> 01</span><br><span class="line">npm init</span><br><span class="line">npm install --save-dev electron <span class="comment"># 安装 electron</span></span><br><span class="line">touch main.js <span class="comment"># 主进程文件</span></span><br><span class="line">touch index.html <span class="comment"># 页面文件</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>一个最基本的 Electron 应用目录结构如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── index.html</span><br><span class="line">├── main.js</span><br><span class="line">├── node_modules</span><br><span class="line">├── package-lock.json</span><br><span class="line">└── package.json</span><br><span class="line"></span><br><span class="line">1 directory, 4 files</span><br></pre></td></tr></table></figure><p>修改 <code>package.json</code> 文件如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"01"</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="string">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"main"</span>: <span class="string">"main.js"</span>, <span class="comment">// 指向 main.js</span></span><br><span class="line">  <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="string">"start"</span>: <span class="string">"electron ."</span> <span class="comment">// 启动命令</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="string">"dependencies"</span>: &#123;&#125;,</span><br><span class="line">  <span class="string">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"electron"</span>: <span class="string">"^2.0.7"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2.-main.js">2. main.js</h2><p>Electron 通过执行 <code>main.js</code> 创建主进程。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Modules to control application life and create native browser window</span></span><br><span class="line"><span class="keyword">const</span> &#123;app, BrowserWindow&#125; = <span class="built_in">require</span>(<span class="string">'electron'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Keep a global reference of the window object, if you don't, the window will</span></span><br><span class="line"><span class="comment">// be closed automatically when the JavaScript object is garbage collected.</span></span><br><span class="line"><span class="keyword">let</span> mainWindow</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createWindow</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// Create the browser window.</span></span><br><span class="line">  mainWindow = <span class="keyword">new</span> BrowserWindow(&#123;<span class="attr">width</span>: <span class="number">800</span>, <span class="attr">height</span>: <span class="number">600</span>&#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// and load the index.html of the app.</span></span><br><span class="line">  mainWindow.loadFile(<span class="string">'index.html'</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Open the DevTools.</span></span><br><span class="line">  <span class="comment">// mainWindow.webContents.openDevTools()</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Emitted when the window is closed.</span></span><br><span class="line">  mainWindow.on(<span class="string">'closed'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Dereference the window object, usually you would store windows</span></span><br><span class="line">    <span class="comment">// in an array if your app supports multi windows, this is the time</span></span><br><span class="line">    <span class="comment">// when you should delete the corresponding element.</span></span><br><span class="line">    mainWindow = <span class="literal">null</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This method will be called when Electron has finished</span></span><br><span class="line"><span class="comment">// initialization and is ready to create browser windows.</span></span><br><span class="line"><span class="comment">// Some APIs can only be used after this event occurs.</span></span><br><span class="line">app.on(<span class="string">'ready'</span>, createWindow)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Quit when all windows are closed.</span></span><br><span class="line">app.on(<span class="string">'window-all-closed'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// On OS X it is common for applications and their menu bar</span></span><br><span class="line">  <span class="comment">// to stay active until the user quits explicitly with Cmd + Q</span></span><br><span class="line">  <span class="keyword">if</span> (process.platform !== <span class="string">'darwin'</span>) &#123;</span><br><span class="line">    app.quit()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.on(<span class="string">'activate'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// On OS X it's common to re-create a window in the app when the</span></span><br><span class="line">  <span class="comment">// dock icon is clicked and there are no other windows open.</span></span><br><span class="line">  <span class="keyword">if</span> (mainWindow === <span class="literal">null</span>) &#123;</span><br><span class="line">    createWindow()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// In this file you can include the rest of your app's specific main process</span></span><br><span class="line"><span class="comment">// code. You can also put them in separate files and require them here.</span></span><br></pre></td></tr></table></figure><h2 id="3.-index.html">3. index.html</h2><p>主进程通过 <code>win.loadFile('index.html')</code> 加载渲染页面。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- All of the Node.js APIs are available in this renderer process. --&gt;</span></span><br><span class="line">    We are using Node.js <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">document</span>.write(process.versions.node)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>,</span><br><span class="line">    Chromium <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">document</span>.write(process.versions.chrome)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>,</span><br><span class="line">    and Electron <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">document</span>.write(process.versions.electron)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>.</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4.-%E5%90%AF%E5%8A%A8">4. 启动</h2><p>在创建并初始化完成 <code>main.js</code>、 <code>index.html</code> 和 <code>package.json</code> 之后，您就可以在当前工程的根目录执行 <code>npm start</code> 命令来启动刚刚编写好的 Electron 程序了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure><p><a href="/2018/08/10/electronjs/assets/Snipaste_2018-08-10_14-04-47.png" data-fancybox="cju5mcbc9001e2ctpye2tkue6" data-caption="使用 Electron 构建跨平台桌面应用"><img class="border""" src="/2018/08/10/electronjs/assets/Snipaste_2018-08-10_14-04-47.png"></a></p><h2 id="5.-%E6%89%93%E5%8C%85">5. 打包</h2><p>使用 <a href="https://www.electron.build/" target="_blank" rel="noopener">electron-builder</a> 打包应用。</p><h4 id="5.1.-%E5%AE%89%E8%A3%85">5.1. 安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev electron-builder</span><br></pre></td></tr></table></figure><h4 id="5.2.-%E9%85%8D%E7%BD%AE">5.2. 配置</h4><p>1、确认 <code>package.json</code> 中的 <code>name</code>, <code>description</code>, <code>version</code> 和 <code>author</code> 字段。</p><p>2、在 <code>package.json</code> 中添加 <code>build</code> 属性</p><figure class="highlight bash"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">// ...</span><br><span class="line"><span class="string">"build"</span>: &#123;</span><br><span class="line">  <span class="string">"productName"</span>: <span class="string">"helloworld"</span>,</span><br><span class="line">  <span class="string">"appId"</span>: <span class="string">"com.electrom.helloworld"</span>,</span><br><span class="line">  <span class="string">"directories"</span>: &#123;</span><br><span class="line">    <span class="string">"output"</span>: <span class="string">"build"</span> // 打包到 build 目录</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"files"</span>: [</span><br><span class="line">    <span class="string">"./**/*"</span></span><br><span class="line">  ],</span><br><span class="line">  // MacOS DMG</span><br><span class="line">  <span class="string">"dmg"</span>: &#123;</span><br><span class="line">    <span class="string">"contents"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"x"</span>: 410,</span><br><span class="line">        <span class="string">"y"</span>: 150,</span><br><span class="line">        <span class="string">"type"</span>: <span class="string">"link"</span>,</span><br><span class="line">        <span class="string">"path"</span>: <span class="string">"/Applications"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"x"</span>: 130,</span><br><span class="line">        <span class="string">"y"</span>: 150,</span><br><span class="line">        <span class="string">"type"</span>: <span class="string">"file"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  // MacOS </span><br><span class="line">  <span class="string">"mac"</span>: &#123;</span><br><span class="line">    <span class="string">"icon"</span>: <span class="string">"build/icons/icon.icns"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  // Windows</span><br><span class="line">  <span class="string">"win"</span>: &#123;</span><br><span class="line">    <span class="string">"icon"</span>: <span class="string">"build/icons/icon.ico"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  // Linux</span><br><span class="line">  <span class="string">"linux"</span>: &#123;</span><br><span class="line">    <span class="string">"icon"</span>: <span class="string">"build/icons"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">// ...</span><br></pre></td></tr></table></figure><p>3、应用图标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">build/icons/</span><br><span class="line">├── 256x256.png</span><br><span class="line">├── icon.icns</span><br><span class="line">└── icon.ico</span><br><span class="line"></span><br><span class="line">0 directories, 3 files</span><br></pre></td></tr></table></figure><p>4、打包指令</p><figure class="highlight bash"><figcaption><span>package.json</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// ...</span><br><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">  // ...</span><br><span class="line">  // -mwl 同时打包 MacOS，Windows，Linux</span><br><span class="line">  <span class="string">"build:dir"</span>: <span class="string">"electron-builder -mwl --dir"</span>,</span><br><span class="line">  <span class="string">"build"</span>: <span class="string">"electron-builder -mwl"</span></span><br><span class="line">&#125;,</span><br><span class="line">// ...</span><br></pre></td></tr></table></figure><h4 id="5.3.-%E6%89%93%E5%8C%85">5.3. 打包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>打包后文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">build/</span><br><span class="line">├── builder-effective-config.yaml</span><br><span class="line">├── helloworld\ Setup\ 1.0.0.exe</span><br><span class="line">├── helloworld\ Setup\ 1.0.0.exe.blockmap</span><br><span class="line">├── helloworld-1.0.0-mac.zip</span><br><span class="line">├── helloworld-1.0.0-x86_64.AppImage</span><br><span class="line">├── helloworld-1.0.0.dmg</span><br><span class="line">├── helloworld-1.0.0.dmg.blockmap</span><br><span class="line">├── helloworld_1.0.0_amd64.snap</span><br><span class="line">├── icons</span><br><span class="line">├── linux-unpacked</span><br><span class="line">├── mac</span><br><span class="line">└── win-unpacked</span><br><span class="line"></span><br><span class="line">4 directories, 8 files</span><br></pre></td></tr></table></figure><h2 id="6.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">6. 参考链接</h2><p>· <a href="https://electronjs.org/" target="_blank" rel="noopener">Electron</a><br>· <a href="https://www.electron.build/" target="_blank" rel="noopener">electron-builder</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;
&lt;img src=&quot;/2018/08/10/electronjs/assets/logo.svg&quot; width=&quot;400&quot;&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://electronjs.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Electron&lt;/a&gt; 最早由 Github 开发用于构建文本编辑器 Atom，通过整合 Chromium 和 Node.js 能够直接使用 HTML，CSS，JavaScript 进行开发。&lt;/p&gt;
&lt;h2 id=&quot;1.-%E5%BA%94%E7%94%A8%E7%BB%93%E6%9E%84&quot;&gt;1. 应用结构&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://electronjs.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Electron&lt;/a&gt; 基于 Node.js ，安装之前先确保系统已经安装好 Node.js。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/Node.js/electron&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mkdir 01 &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; 01&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install --save-dev electron &lt;span class=&quot;comment&quot;&gt;# 安装 electron&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch main.js &lt;span class=&quot;comment&quot;&gt;# 主进程文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch index.html &lt;span class=&quot;comment&quot;&gt;# 页面文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Node.js" scheme="http://garryshield.github.com/categories/Node-js/"/>
    
    
      <category term="Electron" scheme="http://garryshield.github.com/tags/Electron/"/>
    
  </entry>
  
  <entry>
    <title>Bash</title>
    <link href="http://garryshield.github.com/2018/08/08/bash/"/>
    <id>http://garryshield.github.com/2018/08/08/bash/</id>
    <published>2018-08-08T09:36:09.000Z</published>
    <updated>2018-08-08T09:36:09.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>BASH</code> 即 <code>Bourne Again Shell</code> 的缩写，基于 <code>Bourne shell</code> 并兼容它的大部分特性。</p><p><code>Shell</code> 是命令解释器，通过 <code>Shell</code> 用户可以提供命令与系统交互、或者快速的执行批量的命令。它仅仅是用户和系统功能调用的中间层。</p><p>可以把 <code>Shell</code> 想像成用户和系统交流的一种方式。没有它系统可以照常工作，但是它为用户和系统资源之间提供了一个非常好的接口。通过 <code>Shell</code> 可以执行基本的数学运算、运行测试和执行应用，甚至通过操作整合和应用互连实现复杂的自运行任务。</p><p><code>BASH</code> 并不是操作系统，也不是窗口管理器，它通常运行的用户终端中。它不能控制鼠标和键盘、配置系统、激活屏幕保护或者双击打开文件。它通常也不会参与应用程序的启动。用户只是通过它在交互终端或者通过脚本执行一些用符合 BASH 语法的声明。</p><p><code>BASH</code> 可以以交互模式运行也可以通过执行执行脚本以非交互模式运行。通过脚本能够自动运行特定的逻辑，脚本本质是一些命令的列表，这些命令和在互模式命令行中输入的一样，只不过现在保存在文件里。当一个脚本执行时里面的命令就会逐行执行。</p><p>打开终端会看到提示符，提示符可以个性化设置，通常提示符会以 <code>$</code>、<code>%</code> 或者 <code>#</code> 结尾，它们表明当前具体是哪一种 <code>Shell</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><code>$</code>： 兼容 <code>Bourne shell</code> 的 <code>Shell</code>。如：<code>POSIX shell</code>，<code>Korn shell</code>，<code>Bash</code><br><code>%</code>： <code>C shell</code>（ <code>csh</code> 或者 <code>tcsh</code> ）<br><code>#</code>： 表示当前用户是 <code>root</code> 用户</p><p>通过 <code>man bash</code> 命令可以查看 <code>BASH</code> 使用帮助。</p><h2 id="1.-hello-world!">1. Hello World!</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Hello World!"</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ./hello_world.sh</span><br><span class="line">./hello_world.sh</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">/bin/bash hello_world.sh</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2.-%E6%B3%A8%E9%87%8A">2. 注释</h2><p>以 <code>#</code> 开头的行就是注释，会被解释器忽略，bash 多行注释，只能每一行加一个 <code>#</code> 号。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#--------------------------------------------</span></span><br><span class="line"><span class="comment"># Script Description</span></span><br><span class="line"><span class="comment"># author：Garry Shield</span></span><br><span class="line"><span class="comment"># site：garryshield.github.io</span></span><br><span class="line"><span class="comment"># slogan：stay hungry stay foolish</span></span><br><span class="line"><span class="comment">#--------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##### Block A Start #####</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Block A Description</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">##### Block A End  #####</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:&lt;&lt;EOF</span><br><span class="line">注释内容...</span><br><span class="line">注释内容...</span><br><span class="line">注释内容...</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h2 id="3.-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F">3. 自定义变量</h2><p>在 Bash 中，每一个变量的值最终都是字符串，无论你给变量赋值时有没有使用引号，值都会以字符串的形式存储。</p><p>支持以下定义变量的方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">variable=value</span><br><span class="line">variable=<span class="string">'value'</span></span><br><span class="line">variable=<span class="string">"value"</span></span><br><span class="line">variable=`<span class="built_in">command</span>`</span><br><span class="line">variable=$(<span class="built_in">command</span>)</span><br></pre></td></tr></table></figure><p>注：赋值号 <code>=</code> 两边不能有空格</p><p>变量的命名规范和大部分编程语言都一样：<br>1、变量名由数字、字母、下划线组成；<br>2、必须以字母或者下划线开头；<br>3、不能使用 Shell 里的关键字；</p><p>变量定义示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字符串</span></span><br><span class="line">var_str1=string</span><br><span class="line">var_str2=<span class="string">'this is a string'</span></span><br><span class="line">var_str3=<span class="string">"this is another string"</span></span><br><span class="line">var_str4=<span class="string">"this is another <span class="variable">$&#123;string&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 整数</span></span><br><span class="line">var_int1=2</span><br><span class="line">var_int2=002</span><br><span class="line">var_int3=<span class="string">'2'</span></span><br><span class="line">var_int4=<span class="string">'002'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 浮点数</span></span><br><span class="line">var_float1=3.1425</span><br><span class="line">var_float2=<span class="string">'3.1425'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数组</span></span><br><span class="line">var_array1=(item0 item1 item2 <span class="string">"reset item"</span>)</span><br><span class="line">var_array2=(</span><br><span class="line">  item0</span><br><span class="line">  item1</span><br><span class="line">  item2</span><br><span class="line">  <span class="string">"reset item"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="3.1.-%E4%BD%BF%E7%94%A8%E5%8F%98%E9%87%8F">3.1. 使用变量</h4><p>使用一个定义过的变量，只要在变量名前面加美元符号 <code>$</code> 即可，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">skill=<span class="string">"Java"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$skill</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;skill&#125;</span></span><br></pre></td></tr></table></figure><p>变量名外面的花括号 <code>{ }</code> 是可选的，如果解释器不能有效识别变量的边界，比如下面这种情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">skill=<span class="string">"Java"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;skill&#125;</span>Script</span><br></pre></td></tr></table></figure><p>如果没有 <code>{ }</code> 即 <code>echo $skillScript</code>，解释器就会把 <code>$skillScript</code> 当成一个变量而得到非预期的结果。</p><h4 id="3.2.-%E5%8D%95%E5%BC%95%E5%8F%B7">3.2. 单引号</h4><p>单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'\", \$, \`, \\, `whoami`, $&#123;PWD&#125;'</span> <span class="comment"># \", \$, \`, \\, `whoami`, $&#123;PWD&#125;</span></span><br></pre></td></tr></table></figure><h4 id="3.3.-%E5%8F%8C%E5%BC%95%E5%8F%B7">3.3. 双引号</h4><p>双引号里可以有变量，特殊字符（如：<code>$</code>、<code>`</code>、<code>/</code>）需要使用 <code>/</code> 转义。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"\", \$, \`, \\, `whoami`, <span class="variable">$&#123;PWD&#125;</span>"</span> <span class="comment"># ", $, `, \, root, /root/shell</span></span><br></pre></td></tr></table></figure><p>建议：如果变量的内容是数字，那么可以不加引号；如果真的需要原样输出就加单引号；其他没有特别要求的字符串等最好都加上双引号</p><h4 id="3.4.-%E5%B0%86%E5%91%BD%E4%BB%A4%E7%9A%84%E7%BB%93%E6%9E%9C%E8%B5%8B%E5%80%BC%E7%BB%99%E5%8F%98%E9%87%8F">3.4. 将命令的结果赋值给变量</h4><p><code>$( )</code> 和 <code>` `</code> 都是用来做命令替换用的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">version=`uname -r`</span><br><span class="line">version=$(uname -r)</span><br></pre></td></tr></table></figure><h4 id="3.5.-%E5%8F%AA%E8%AF%BB%E5%8F%98%E9%87%8F">3.5. 只读变量</h4><p>使用 <code>readonly</code> 命令可以将变量定义为只读变量，只读变量的值不能被改变，尝试修改会报错。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">myUrl=<span class="string">"https://garryshield.github.io/"</span></span><br><span class="line"><span class="built_in">readonly</span> myUrl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"><span class="comment"># readonly myUrl="https://garryshield.github.io/"</span></span><br><span class="line"></span><br><span class="line">myUrl=<span class="string">"https://garryshield.github.com/"</span></span><br></pre></td></tr></table></figure><h4 id="3.6.-%E5%88%A0%E9%99%A4%E5%8F%98%E9%87%8F">3.6. 删除变量</h4><p>使用 <code>unset</code> 命令可以删除变量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span> variable_name</span><br></pre></td></tr></table></figure><h2 id="4.-%E7%89%B9%E6%AE%8A%E5%8F%98%E9%87%8F">4. 特殊变量</h2><p><code>$0</code>: 脚本本身<br><code>$1</code>: 第 1 个参数<br><code>$1 .. $9</code>: 前 9 个参数<br><code>$*</code>: 传递给脚本或函数的所有参数<br><code>$@</code>: 传递给脚本或函数的所有参数。被双引号 <code>&quot;</code> 包含时，与 <code>$*</code> 稍有不同<br><code>$#</code>: 传递给脚本或函数的参数个数。<br><code>$$</code>: 进程ID<br><code>$?</code>:上个命令的退出状态，或函数的返回值</p><p>例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"脚本本身 \$0:"</span> <span class="variable">$0</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"参数个数 \$#:"</span> <span class="variable">$#</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"参数1 \$1:"</span> <span class="variable">$1</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"参数2 \$2:"</span> <span class="variable">$2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"所有参数 \$@:"</span> <span class="variable">$@</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"所有参数 \$*:"</span> $*</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost shell]<span class="comment"># ./variable.sh -f config.conf -v --prefix=/home</span></span><br><span class="line">脚本本身 <span class="variable">$0</span>: ./variable.sh</span><br><span class="line">参数个数 <span class="variable">$#</span>: 4</span><br><span class="line">参数1 <span class="variable">$1</span>: -f</span><br><span class="line">参数2 <span class="variable">$2</span>: config.conf</span><br><span class="line">所有参数 <span class="variable">$@</span>: -f config.conf -v --prefix=/home</span><br><span class="line">所有参数 $*: -f config.conf -v --prefix=/home</span><br></pre></td></tr></table></figure><h4 id="4.1.-%24*-%E5%92%8C-%24%40-%E7%9A%84%E5%8C%BA%E5%88%AB">4.1. <code>$*</code> 和 <code>$@</code> 的区别</h4><p><code>$*</code> 和 <code>$@</code> 都表示传递给函数或脚本的所有参数，不被双引号 <code>&quot;</code> 包含时，都以 <code>&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot;</code> 的形式输出所有参数。但是当它们被双引号 <code>&quot;</code> 包含时，<code>&quot;$*&quot;</code> 会将所有的参数作为一个整体，以 <code>&quot;$1 $2 … $n&quot;</code> 的形式输出所有参数；<code>&quot;$@&quot;</code> 会将各个参数分开，以 <code>&quot;$1&quot; &quot;$2&quot; … &quot;$n&quot;</code> 的形式输出所有参数。</p><p>示例：</p><figure class="highlight bash"><figcaption><span>variable_05.sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"\$*="</span> $*</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"\"\$*\"="</span> <span class="string">"$*"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"\$@="</span> <span class="variable">$@</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"\"\$@\"="</span> <span class="string">"<span class="variable">$@</span>"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"循环 \$*"</span></span><br><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> $*</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$var</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"循环 \"\$*\""</span></span><br><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> <span class="string">"$*"</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$var</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"循环 \$@"</span></span><br><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> <span class="variable">$@</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$var</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"循环 \"\$@\""</span></span><br><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> <span class="string">"<span class="variable">$@</span>"</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$var</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost shell]<span class="comment"># ./variable_05.sh -f config.conf -v --prefix=/home</span></span><br><span class="line">$*= -f config.conf -v --prefix=/home</span><br><span class="line"><span class="string">"$*"</span>= -f config.conf -v --prefix=/home</span><br><span class="line"></span><br><span class="line"><span class="variable">$@</span>= -f config.conf -v --prefix=/home</span><br><span class="line"><span class="string">"<span class="variable">$@</span>"</span>= -f config.conf -v --prefix=/home</span><br><span class="line"></span><br><span class="line">循环 $*</span><br><span class="line">-f</span><br><span class="line">config.conf</span><br><span class="line">-v</span><br><span class="line">--prefix=/home</span><br><span class="line"></span><br><span class="line">循环 <span class="string">"$*"</span></span><br><span class="line">-f config.conf -v --prefix=/home</span><br><span class="line"></span><br><span class="line">循环 <span class="variable">$@</span></span><br><span class="line">-f</span><br><span class="line">config.conf</span><br><span class="line">-v</span><br><span class="line">--prefix=/home</span><br><span class="line"></span><br><span class="line">循环 <span class="string">"<span class="variable">$@</span>"</span></span><br><span class="line">-f</span><br><span class="line">config.conf</span><br><span class="line">-v</span><br><span class="line">--prefix=/home</span><br></pre></td></tr></table></figure><h2 id="5.-%E5%8F%98%E9%87%8F%E6%89%A9%E5%B1%95">5. 变量扩展</h2><p>1、Use Default Values <strong>${parameter:-word}</strong><br>如果 parameter 不存在返回 word。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"Your name is : <span class="variable">$&#123;myname:-garry&#125;</span>"</span></span><br></pre></td></tr></table></figure><p>2、Assign Default Values <strong>${parameter:=word}</strong><br>如果 parameter 不存在返回 word，并设置为 parameter 的值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"Your name is : <span class="variable">$&#123;myname:=garry&#125;</span>"</span></span><br></pre></td></tr></table></figure><p>3、Display Error if Null or Unset <strong>${parameter:?word}</strong><br>如果 parameter 不存在报出 word 表示的错误。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"Your name is : <span class="variable">$&#123;myname:?'myname is undefined'&#125;</span>"</span></span><br></pre></td></tr></table></figure><p>4、Use Alternate Value <strong>${parameter:+word}</strong><br>如果 parameter 存在返回 word，否则什么都不返回。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"Your name is : <span class="variable">$&#123;myname:+shield&#125;</span>"</span></span><br></pre></td></tr></table></figure><h2 id="6.-%E6%95%B0%E5%80%BC">6. 数值</h2><h4 id="6.1.-%E6%95%B4%E6%95%B0%E8%BF%90%E7%AE%97">6.1. 整数运算</h4><p><strong><code>$[ ]</code>、<code>$(( ))</code></strong><br>它们是一样的，都是进行数学运算的。支持<code>+</code>、<code>-</code>、<code>*</code>、<code>/</code>、<code>%</code>、<code>++</code>、<code>--</code>：分别为 “加、减、乘、除、取模、自加、自减”。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">a=5</span><br><span class="line">b=3</span><br><span class="line"><span class="built_in">echo</span> $[a+b] <span class="comment"># 8 加</span></span><br><span class="line"><span class="built_in">echo</span> $[a-b] <span class="comment"># 2 减</span></span><br><span class="line"><span class="built_in">echo</span> $[a*b] <span class="comment"># 15 乘</span></span><br><span class="line"><span class="built_in">echo</span> $[a/b] <span class="comment"># 1 除取整</span></span><br><span class="line"><span class="built_in">echo</span> $[a%b] <span class="comment"># 2 除取余</span></span><br><span class="line"><span class="built_in">echo</span> $[a==b] <span class="comment"># 0 是否相等</span></span><br><span class="line"><span class="built_in">echo</span> $[a!=b] <span class="comment"># 1 是否不相等</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $[a++] <span class="comment"># 5 后增</span></span><br><span class="line"><span class="built_in">echo</span> $[a--] <span class="comment"># 6 后减</span></span><br><span class="line"><span class="built_in">echo</span> $[++a] <span class="comment"># 6 前增</span></span><br><span class="line"><span class="built_in">echo</span> $[--a] <span class="comment"># 5 前减</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $[a=b] <span class="comment"># 3 赋值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以直接使用数字的字面值</span></span><br><span class="line"><span class="built_in">echo</span> $[5+3] <span class="comment"># 8 加</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">a=5</span><br><span class="line">b=3</span><br><span class="line"><span class="built_in">echo</span> $((a+b)) <span class="comment"># 8 加</span></span><br><span class="line"><span class="built_in">echo</span> $((a-b)) <span class="comment"># 2 减</span></span><br><span class="line"><span class="built_in">echo</span> $((a*b)) <span class="comment"># 15 乘</span></span><br><span class="line"><span class="built_in">echo</span> $((a/b)) <span class="comment"># 1 除取整</span></span><br><span class="line"><span class="built_in">echo</span> $((a%b)) <span class="comment"># 2 除取余</span></span><br><span class="line"><span class="built_in">echo</span> $((a==b)) <span class="comment"># 0 是否相等</span></span><br><span class="line"><span class="built_in">echo</span> $((a!=b)) <span class="comment"># 1 是否不相等</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $((a++)) <span class="comment"># 5 后增</span></span><br><span class="line"><span class="built_in">echo</span> $((a--)) <span class="comment"># 6 后减</span></span><br><span class="line"><span class="built_in">echo</span> $((++a)) <span class="comment"># 6 前增</span></span><br><span class="line"><span class="built_in">echo</span> $((--a)) <span class="comment"># 5 前减</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $((a=b)) <span class="comment"># 3 赋值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以直接使用数字的字面值</span></span><br><span class="line"><span class="built_in">echo</span> $((5+3)) <span class="comment"># 8 加</span></span><br></pre></td></tr></table></figure><p><strong><code>expr</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">a=5</span><br><span class="line">b=3</span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> + <span class="variable">$b</span>` <span class="comment"># 8 加</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> - <span class="variable">$b</span>` <span class="comment"># 2 减</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> \* <span class="variable">$b</span>` <span class="comment"># 15 乘</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> / <span class="variable">$b</span>` <span class="comment"># 1 除取整</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> % <span class="variable">$b</span>` <span class="comment"># 2 除取余</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> == <span class="variable">$b</span>` <span class="comment"># 0 是否相等</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="variable">$a</span> != <span class="variable">$b</span>` <span class="comment"># 1 是否不相等</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以直接使用数字的字面值</span></span><br><span class="line"><span class="built_in">echo</span> `expr 5 + 3` <span class="comment"># 8 加</span></span><br></pre></td></tr></table></figure><h4 id="6.1.-%E6%B5%AE%E7%82%B9%E6%95%B0%E8%BF%90%E7%AE%97">6.1. 浮点数运算</h4><h2 id="7.-%E5%AD%97%E7%AC%A6%E4%B8%B2">7. 字符串</h2><p>字符串可以用单引号 <code>'</code>，也可以用双引号 <code>&quot;</code>，也可以都不用。如果字符串中有空格则一定要加引号。</p><h4 id="7.1.-%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%95%BF%E5%BA%A6">7.1. 字符串长度</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">string=<span class="string">"www.google.com"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#string&#125;</span> <span class="comment"># 输出 14</span></span><br><span class="line"><span class="built_in">echo</span> `expr length <span class="string">"<span class="variable">$&#123;string&#125;</span>"</span>` <span class="comment"># 输出 14</span></span><br><span class="line"><span class="built_in">echo</span> `expr <span class="string">"<span class="variable">$&#123;string&#125;</span>"</span> : <span class="string">".*"</span>` <span class="comment"># 输出 14</span></span><br></pre></td></tr></table></figure><h4 id="7.2.-%E6%88%AA%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2">7.2. 截取字符串</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">string=<span class="string">"www.google.com"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;string:4:6&#125;</span> <span class="comment"># 从第4个字符开始截取6个字符，输出 google</span></span><br><span class="line"><span class="built_in">echo</span> `expr substr <span class="string">"<span class="variable">$&#123;string&#125;</span>"</span> 5 6` <span class="comment"># google</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;string:4&#125;</span> <span class="comment"># 从第4个字符开始截取，输出 google.com</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;string: -3&#125;</span> <span class="comment"># 截取后3个字符 输出 com</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;string:(-3)&#125;</span> <span class="comment"># 同上</span></span><br></pre></td></tr></table></figure><h4 id="7.3.-indexof">7.3. indexOf</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string=<span class="string">"www.google.com"</span></span><br><span class="line"><span class="built_in">echo</span> `expr index <span class="string">"<span class="variable">$&#123;string&#125;</span>"</span> g` <span class="comment"># 5</span></span><br></pre></td></tr></table></figure><h4 id="7.4.-%E6%9B%BF%E6%8D%A2">7.4. 替换</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">string=<span class="string">"www.google.com"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;string/g/b&#125;</span> <span class="comment"># 代替第一个匹配 输出 www.boogle.com</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;string//g/b&#125;</span> <span class="comment"># 代替所有匹配 输出 www.booble.com</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;string//google/baidu&#125;</span> <span class="comment"># 代替所有匹配 输出 www.baidu.com</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;string/#www/cloud&#125;</span> <span class="comment"># #表示以什么开头来匹配 输出 cloud.google.com</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;string/%com/com.hk&#125;</span> <span class="comment"># %表示以什么结尾来匹配 输出 www.google.com.hk</span></span><br></pre></td></tr></table></figure><h2 id="8.-%E6%95%B0%E7%BB%84">8. 数组</h2><p>bash 支持一维数组（不支持多维数组），并且没有限定数组的大小。<br>数组元素的下标由 0 开始编号。获取数组中的元素要利用下标，下标可以是整数或算术表达式，其值应大于或等于 0。</p><h4 id="8.1.-%E5%AE%9A%E4%B9%89%E6%95%B0%E7%BB%84">8.1. 定义数组</h4><p>在 Shell 中，用括号来表示数组，数组元素用&quot;空格&quot;符号分割开。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_name=(value0 value1 value2 value3)</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">array_name=(</span><br><span class="line">  value0</span><br><span class="line">  value1</span><br><span class="line">  value2</span><br><span class="line">  value3</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">files=(~/*)</span><br></pre></td></tr></table></figure><h4 id="8.2.-%E4%BF%AE%E6%94%B9%E5%85%83%E7%B4%A0">8.2. 修改元素</h4><p>可以不使用连续的下标，而且下标的范围没有限制。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">array_name[0]=value0</span><br><span class="line">array_name[1]=value1</span><br><span class="line">array_name[100]=value100</span><br><span class="line">array_name[100+1]=value101</span><br><span class="line">array_name+=(value102)</span><br><span class="line"></span><br><span class="line"><span class="built_in">unset</span> <span class="string">"array_name[0]"</span></span><br></pre></td></tr></table></figure><h4 id="8.3.-%E8%8E%B7%E5%8F%96%E6%8C%87%E5%AE%9A%E5%80%BC">8.3. 获取指定值</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array_name[100]&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array_name[100+1]&#125;</span></span><br></pre></td></tr></table></figure><h4 id="8.4.-%E8%8E%B7%E5%8F%96%E6%89%80%E6%9C%89%E9%94%AE">8.4. 获取所有键</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;!array_name[@]&#125;</span> <span class="comment"># 0 1 2 3 100 101</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重建索引</span></span><br><span class="line">array_name=(<span class="string">"<span class="variable">$&#123;array_name[@]&#125;</span>"</span>)</span><br></pre></td></tr></table></figure><h4 id="8.5.-%E8%8E%B7%E5%8F%96%E6%89%80%E6%9C%89%E5%80%BC">8.5. 获取所有值</h4><p>使用 <code>@</code> 符号可以获取数组中的所有元素</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array_name[@]&#125;</span> <span class="comment"># value0 value1 value2 value3 value100 value101</span></span><br></pre></td></tr></table></figure><h4 id="8.6.-%E8%8E%B7%E5%8F%96%E9%95%BF%E5%BA%A6">8.6. 获取长度</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取得数组元素的个数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#array_name[@]&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#array_name[*]&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取得数组单个元素的长度</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#array_name[100]&#125;</span></span><br></pre></td></tr></table></figure><h4 id="8.7.-%E9%81%8D%E5%8E%86%E6%95%B0%E7%BB%84">8.7. 遍历数组</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$&#123;array_name[@]&#125;</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"value:"</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>或者，推荐使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">"<span class="variable">$&#123;!array_name[@]&#125;</span>"</span>; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"key:"</span> <span class="variable">$i</span> <span class="string">"value:"</span> <span class="string">"<span class="variable">$&#123;array_name[$i]&#125;</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>或者，慎用此法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (( i=0; i&lt;<span class="variable">$&#123;#array_name[@]&#125;</span>; i++ )); <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"order:"</span> <span class="variable">$i</span> <span class="string">"value:"</span> <span class="variable">$&#123;array_name[$i]&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h4 id="8.8.-indexof">8.8. indexOf</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">search=<span class="string">"value2"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">"<span class="variable">$&#123;!array_name[@]&#125;</span>"</span>; <span class="keyword">do</span></span><br><span class="line">   <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$&#123;array_name[$i]&#125;</span>"</span> = <span class="string">"<span class="variable">$&#123;search&#125;</span>"</span> ]]; <span class="keyword">then</span></span><br><span class="line">       <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;i&#125;</span>"</span>;</span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># 2</span></span><br></pre></td></tr></table></figure><h2 id="9.-for-%E5%BE%AA%E7%8E%AF">9. For 循环</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &lt;item&gt; <span class="keyword">in</span> &lt;list&gt;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  &lt;commands&gt;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..5&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"Welcome <span class="variable">$i</span> times"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(seq 1 2 10)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"Welcome <span class="variable">$i</span> times"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bash v4.0+ </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;0..10..2&#125;</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"Welcome <span class="variable">$i</span> times"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (( c=1; c&lt;=5; c++ ))</span><br><span class="line"><span class="keyword">do</span>  </span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"Welcome <span class="variable">$c</span> times"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> /etc/*</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$&#123;file&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>无限循环</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (( ; ; ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"infinite loops [ hit CTRL+C to stop]"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="10.-while-%E5%BE%AA%E7%8E%AF">10. While 循环</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> &lt;condition&gt;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  &lt;commands&gt;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">  &lt;commands&gt;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> &lt;line&gt;</span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">  &lt;commands&gt;</span><br><span class="line"><span class="keyword">done</span> &lt; &lt;file&gt;</span><br></pre></td></tr></table></figure><h2 id="11.-if-%2F-else-%E8%AF%AD%E5%8F%A5">11. If / Else 语句</h2><p><strong>If</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;commands&gt; </span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  &lt;commands&gt;</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><strong>If Else</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;commands&gt;</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  &lt;commands&gt;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  &lt;other commands&gt;</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><strong>If Elif Else</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;commands&gt;</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  &lt;commands&gt;</span><br><span class="line"><span class="keyword">elif</span> &lt;commands&gt;</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  &lt;different commands&gt;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  &lt;other commands&gt;</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="12.-case-%E8%AF%AD%E5%8F%A5">12. Case 语句</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> &lt;variable&gt; <span class="keyword">in</span></span><br><span class="line">  &lt;pattern a&gt;|&lt;pattern b&gt;|&lt;pattern c&gt;)</span><br><span class="line">    &lt;commands&gt;</span><br><span class="line">    ;;</span><br><span class="line">  &lt;other pattern&gt;)</span><br><span class="line">    &lt;commands&gt;</span><br><span class="line">    ;;</span><br><span class="line">  &lt;more pattern&gt;)</span><br><span class="line">    &lt;commands&gt;</span><br><span class="line">    ;;</span><br><span class="line">  *)</span><br><span class="line">    &lt;commands&gt;</span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><h2 id="13.-break%2C-continue">13. break, continue</h2><p><code>break</code> 命令允许跳出所有循环（终止执行后面的所有循环）。<br><code>break</code> 后面可以跟一个数字，如： <code>break 2</code>，表示跳出第几层循环。</p><p><code>continue</code> 命令与 <code>break</code> 命令类似，只有一点差别，它不会跳出所有循环，仅仅跳出当前循环。<br><code>continue</code> 后面也可以跟一个数字，如： <code>continue 2</code>，表示跳出第几层循环。</p><h2 id="14.-%E5%87%BD%E6%95%B0">14. 函数</h2><h4 id="14.1.-%E5%AE%9A%E4%B9%89">14.1. 定义</h4><p>Shell 函数的定义格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[ <span class="keyword">function</span> ] <span class="function"><span class="title">fun_name</span></span> () &#123;</span><br><span class="line">  list of commands</span><br><span class="line">  [ <span class="built_in">return</span> value ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="14.2.-%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0">14.2. 调用函数</h4><p>函数调用前必须先声明函数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fun_name</span><br><span class="line">fun_name arg1 arg2</span><br><span class="line"></span><br><span class="line">result=$(fun_name)</span><br><span class="line">result=$(fun_name arg1 arg2)</span><br></pre></td></tr></table></figure><h4 id="14.3.-%E8%BF%94%E5%9B%9E%E5%80%BC">14.3. 返回值</h4><p>可以显式增加 <code>return</code> 语句，如果不加，会将最后一条命令运行结果作为返回值。返回值只能是整数（0－255），用来表示函数执行成功与否，0 表示成功，其他值表示失败。如果 <code>return</code> 其他数据，比如一个字符串，会得到错误提示。如果需要传出其它类型函数值，可以在函数调用之前，定义变量（这个就是全局变量）。在函数内部就可以直接修改，然后在执行函数就可以读出修改过的值。</p><p>注：<code>return</code> 是中止函数并返回，<code>exit</code> 是中止脚本并返回。</p><p>函数返回值，只能通过 <code>$?</code> 系统变量获得，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">fun_name</span></span>() &#123;</span><br><span class="line">  <span class="comment"># ...</span></span><br><span class="line">  <span class="built_in">return</span> 100</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fun_name</span><br><span class="line"><span class="built_in">echo</span> $? <span class="comment"># 100</span></span><br></pre></td></tr></table></figure><h4 id="14.4.-%E5%8F%82%E6%95%B0">14.4. 参数</h4><p>同执行脚本一样，调用函数时可以向其传递参数。在函数体内部，通过 <code>$n</code> 的形式来获取参数的值，例如，<code>$1</code> 表示第一个参数，<code>$2</code> 表示第二个参数...<br><code>$#</code> 表示参数个数，<code>$*</code>、<code>$@</code> 表示所有参数。</p><h4 id="14.5.-%E4%BD%9C%E7%94%A8%E5%9F%9F">14.5. 作用域</h4><p>脚本中的变量是全局的，函数体里都能访问。也可以在函数中通过 <code>local var_name=val_con</code> 定义局部变量，对局部变量的修改，不会影响函数外部相同变量的值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">num=1</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">fun1</span></span>() &#123;</span><br><span class="line">  <span class="built_in">return</span> <span class="variable">$num</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">fun2</span></span>() &#123;</span><br><span class="line">  <span class="built_in">local</span> num=2</span><br><span class="line">  <span class="built_in">return</span> <span class="variable">$num</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">fun3</span></span>() &#123;</span><br><span class="line">  num=3</span><br><span class="line">  <span class="built_in">return</span> <span class="variable">$num</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$num</span> <span class="comment"># 1</span></span><br><span class="line"></span><br><span class="line">fun1</span><br><span class="line"><span class="built_in">echo</span> $? <span class="comment"># 1</span></span><br><span class="line"></span><br><span class="line">fun2</span><br><span class="line"><span class="built_in">echo</span> $? <span class="comment"># 2</span></span><br><span class="line"></span><br><span class="line">fun3</span><br><span class="line"><span class="built_in">echo</span> $? <span class="comment"># 3</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$num</span> <span class="comment"># 3</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="14.6.-%E5%88%A0%E9%99%A4%E5%87%BD%E6%95%B0">14.6. 删除函数</h4><p>和删除变量一样，删除函数也可以使用 <code>unset</code> 命令，不过要加上 <code>.f</code> 选项，如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">unset</span> .f function_name</span><br></pre></td></tr></table></figure><h2 id="15.-%E9%87%8D%E5%AE%9A%E5%90%91">15. 重定向</h2><p>Unix/Linux 命令运行时都会打开三个文件：<br>1、标准输入文件(stdin)：stdin的文件描述符为 0，Unix程序默认从stdin读取数据。<br>2、标准输出文件(stdout)：stdout 的文件描述符为 1，Unix程序默认向stdout输出数据。<br>3、标准错误文件(stderr)：stderr的文件描述符为 2，Unix程序会向stderr流中写入错误信息。<br>默认情况下，command &gt; file 将 stdout 重定向到 file，command &lt; file 将 stdin 重定向到 file。</p><p>Unix/Linux 命令默认从标准输入设备(stdin)获取输入，将结果输出到标准输出设备(stdout)显示。一般情况下，标准输入设备就是键盘，标准输出设备就是终端，即显示器。</p><h4 id="15.1.-%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91">15.1. 输出重定向</h4><p>命令输出重定向的语法为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> &gt; file</span><br></pre></td></tr></table></figure><p>表示输出到显示器的内容就可以被重定向到文件。<br>使用 <code>&gt;</code> 输出重定向会覆盖文件内容，如果不希望文件内容被覆盖，可以使用 <code>&gt;&gt;</code> 表示追加到文件末尾。</p><h4 id="15.2.-%E8%BE%93%E5%85%A5%E9%87%8D%E5%AE%9A%E5%90%91">15.2. 输入重定向</h4><p>和输出重定向一样，也可以从文件获取输入，语法为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> &lt; file</span><br></pre></td></tr></table></figure><p>表示本来需要从键盘获取输入的命令会转移到文件读取内容。</p><h4 id="15.3.-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91">15.3. 输入输出重定向</h4><p>如果希望对 stdin 和 stdout 都重定向，可以这样写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> &lt; file1 &gt; file2</span><br><span class="line"><span class="built_in">command</span> &lt; file1 &gt;&gt; file2</span><br></pre></td></tr></table></figure><h4 id="15.4.-stderr-%E9%87%8D%E5%AE%9A%E5%90%91">15.4. stderr 重定向</h4><p>如果希望 stderr 重定向到 file，可以这样写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> 2 &gt; file</span><br><span class="line"><span class="built_in">command</span> 2 &gt;&gt; file</span><br></pre></td></tr></table></figure><h4 id="15.5.-%E5%90%88%E5%B9%B6-stdout-%E5%92%8C-stderr">15.5. 合并 stdout 和 stderr</h4><p>如果希望将 stdout 和 stderr 合并后重定向到 file，可以这样写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> &gt; file 2&gt;&amp;1</span><br><span class="line"><span class="built_in">command</span> &gt;&gt; file 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h4 id="15.6.-here-document">15.6. Here Document</h4><p>Here Document 是 Shell 中的一种特殊的重定向方式，它的基本的形式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> &lt;&lt; delimiter</span><br><span class="line">    document</span><br><span class="line">delimiter</span><br></pre></td></tr></table></figure><p>它的作用是将两个 delimiter 之间的内容作为输入传递给 command。</p><p>特别的如果不写 command 可以用做多行注释，如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;&lt;EOF</span><br><span class="line">  ...</span><br><span class="line">  ...</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>注意：<br>1、开始的 delimiter 前后的空格会被忽略掉。<br>2、结尾的 delimiter 一定要顶格写，前面不能有任何字符，后面也不能有任何字符。</p><p>例如：通过 <code>vi</code> 编辑器将多行内容保存到 test.txt 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">filename=test.txt</span><br><span class="line">vi <span class="variable">$filename</span> &lt;&lt;EOF</span><br><span class="line">i</span><br><span class="line">This file was created automatically from</span><br><span class="line">a shell script</span><br><span class="line">^[</span><br><span class="line">ZZ</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="15.7.-%2Fdev%2Fnull-%E6%96%87%E4%BB%B6">15.7. /dev/null 文件</h4><p><code>/dev/null</code> 是一个特殊的文件，写入到它的内容都会被丢弃；如果尝试从该文件读取内容，那么什么也读不到。</p><p>如果希望执行某个命令，但又不希望在屏幕上显示输出结果，那么可以将输出重定向到 <code>/dev/null</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> &gt; /dev/null</span><br></pre></td></tr></table></figure><p>如果希望屏蔽 stdout 和 stderr，可以这样写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h2 id="16.-exit">16. exit</h2><p><code>exit</code> 命令用于退出当前 shell。同时可以指定一个退出码（status）表明脚本执行的情况，如果不加退出码默认为最后一个命令的退出码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span> status</span><br></pre></td></tr></table></figure><p>常用退出码的约定：<br>1、0 表示成功（Zero - Success）<br>2、非 0 表示失败（Non-Zero  - Failure）<br>3、2 表示用法不当（Incorrect Usage）<br>4、127 表示命令没有找到（Command Not Found）<br>5、126 表示不是可执行的（Not an executable）<br>6、&gt;=128 信号产生</p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> $(dirname <span class="variable">$0</span>) || <span class="built_in">exit</span> 1</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$#</span>"</span> -ne <span class="string">"2"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"usage: <span class="variable">$0</span> &lt;area&gt; &lt;hours&gt;"</span>  </span><br><span class="line">  <span class="built_in">exit</span> 2 </span><br><span class="line"><span class="keyword">if</span></span><br></pre></td></tr></table></figure><h2 id="17.-%E6%B5%8B%E8%AF%95%E5%92%8C%E6%AF%94%E8%BE%83">17. 测试和比较</h2><h4 id="17.1.-test%E3%80%81%5B">17.1. test、[</h4><p><code>test</code> 命令根据表达式 <code>expr</code> 求值的结果返回 0（真）或 1（假）。<br><code>test &lt;expr&gt;</code> 和 <code>[ &lt;expr&gt; ]</code> 是等价的，可以用 <code>$?</code> 检查返回值；可以使用 <code>&amp;&amp;</code> 和 <code>||</code> 操作返回值。<br>注：<code>[ &lt;expr&gt; ]</code> 中的空格。<br>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[ <span class="string">"<span class="variable">$variable</span>"</span> ] || <span class="built_in">echo</span> <span class="string">'variable is unset or empty!'</span> &gt;&amp;2</span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> 3 -gt 4 &amp;&amp; <span class="built_in">echo</span> True || <span class="built_in">echo</span> False <span class="comment"># False</span></span><br><span class="line"></span><br><span class="line">[ <span class="string">"abc"</span> != <span class="string">"def"</span> ]; <span class="built_in">echo</span> $? <span class="comment"># 0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> -d <span class="string">"<span class="variable">$HOME</span>"</span>; <span class="built_in">echo</span> $? <span class="comment"># 0</span></span><br><span class="line"></span><br><span class="line">! <span class="built_in">test</span> -d <span class="string">"<span class="variable">$HOME</span>"</span>; <span class="built_in">echo</span> $? <span class="comment"># 1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -d <span class="string">"<span class="variable">$HOME</span>"</span>; <span class="keyword">then</span></span><br><span class="line">  <span class="comment">#...</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="comment">#...</span></span><br><span class="line"><span class="keyword">if</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">"<span class="variable">$HOME</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="comment">#...</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="comment">#...</span></span><br><span class="line"><span class="keyword">if</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="17.2.-%E6%96%87%E4%BB%B6%E6%B5%8B%E8%AF%95">17.2. 文件测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-e &lt;file&gt;<span class="comment"># 文件（包括目录）是否存在</span></span><br><span class="line">-f &lt;file&gt;<span class="comment"># 文件是否是普通文件（既不是目录，也不是设备文件）</span></span><br><span class="line">-d &lt;file&gt;<span class="comment"># 文件是否是目录</span></span><br><span class="line">-c &lt;file&gt;<span class="comment"># 文件是否是字符设备文件</span></span><br><span class="line">-b &lt;file&gt;<span class="comment"># 文件是否是块设备文件</span></span><br><span class="line">-p &lt;file&gt;<span class="comment"># 文件是否是管道文件</span></span><br><span class="line">-S &lt;file&gt;<span class="comment"># 文件是否是套接字文件</span></span><br><span class="line">-h &lt;file&gt;<span class="comment"># 文件是否是符号链接</span></span><br><span class="line">-g &lt;file&gt;<span class="comment"># 文件是否设置了 SGID 位</span></span><br><span class="line">-u &lt;file&gt;<span class="comment"># 文件是否设置了 SUID 位</span></span><br><span class="line">-r &lt;file&gt;<span class="comment"># 文件是否可读</span></span><br><span class="line">-w &lt;file&gt;<span class="comment"># 文件是否可写</span></span><br><span class="line">-x &lt;file&gt;<span class="comment"># 文件是否可执行</span></span><br><span class="line">-s &lt;file&gt;<span class="comment"># 文件是否为空（文件大小是否大于0）</span></span><br><span class="line">&lt;file1&gt; -nt &lt;file2&gt; <span class="comment"># 文件1是否比文件2新</span></span><br><span class="line">&lt;file1&gt; -ot &lt;file2&gt; <span class="comment"># 文件1是否比文件2老</span></span><br></pre></td></tr></table></figure><h4 id="17.3.-%E6%95%B0%E5%80%BC%E6%B5%8B%E8%AF%95">17.3. 数值测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;int1&gt; -eq &lt;int2&gt; <span class="comment"># 是否相等</span></span><br><span class="line">&lt;int1&gt; -ne &lt;int2&gt; <span class="comment"># 是否不相等</span></span><br><span class="line">&lt;int1&gt; -gt &lt;int2&gt; <span class="comment"># 是否大于</span></span><br><span class="line">&lt;int1&gt; -lt &lt;int2&gt; <span class="comment"># 是否小于</span></span><br><span class="line">&lt;int1&gt; -ge &lt;int2&gt; <span class="comment"># 是否大于相等</span></span><br><span class="line">&lt;int1&gt; -le &lt;int2&gt; <span class="comment"># 是否小于相等</span></span><br></pre></td></tr></table></figure><h4 id="17.4.-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B5%8B%E8%AF%95">17.4. 字符串测试</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-z &lt;string&gt;  <span class="comment"># 是否长度为0</span></span><br><span class="line">-n &lt;string&gt;  <span class="comment"># 是否长度不为0</span></span><br><span class="line">&lt;string1&gt; = &lt;string2&gt;  <span class="comment"># 是否相等</span></span><br><span class="line">&lt;string1&gt; != &lt;string2&gt;  <span class="comment"># 是否不相等</span></span><br><span class="line">&lt;string1&gt; \&gt; &lt;string2&gt;  <span class="comment"># 是否大于</span></span><br><span class="line">&lt;string1&gt; \&lt; &lt;string2&gt;  <span class="comment"># 是否小于</span></span><br></pre></td></tr></table></figure><h4 id="17.5.-%26%26%E3%80%81%7C%7C%E3%80%81!">17.5. &amp;&amp;、||、!</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AND</span></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$var</span>"</span> -a -e <span class="string">"<span class="variable">$var</span>"</span>]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$var</span>"</span>] &amp;&amp; [ -e <span class="string">"<span class="variable">$var</span>"</span>]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># OR</span></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$var</span>"</span> -o -e <span class="string">"<span class="variable">$var</span>"</span>]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$var</span>"</span>] || [ -e <span class="string">"<span class="variable">$var</span>"</span>]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># NOT</span></span><br><span class="line"><span class="keyword">if</span> [ ! -n <span class="string">"<span class="variable">$var</span>"</span>] || [ ! -e <span class="string">"<span class="variable">$var</span>"</span>]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! [ -n <span class="string">"<span class="variable">$var</span>"</span>] || ! [ -e <span class="string">"<span class="variable">$var</span>"</span>]; <span class="keyword">then</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h4 id="17.6.-%5B%E3%80%81%5B%5B">17.6. [、[[</h4><p><code>[[</code> 比 <code>[</code> 更强大，不同于 <code>[</code>，<code>[[</code> 是一个关键字而不是一个命令。</p><p><a href="/2018/08/08/bash/assets/Snipaste_2018-08-11_03-33-51.png" data-fancybox="cju5mcc1u00442ctp3nh36dky" data-caption="Bash"><img class="border""" src="/2018/08/08/bash/assets/Snipaste_2018-08-11_03-33-51.png"></a></p><h2 id="18.-hints-and-tips">18. Hints and Tips</h2><p>批量创建目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir dir_&#123;0,1,2,3,4&#125;.d</span><br></pre></td></tr></table></figure><p>只允许输出数字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">read</span> X</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$X</span> | grep <span class="string">"[^0-9]"</span> &gt; /dev/null 2&gt;&amp;1</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"$?"</span> -eq <span class="string">"0"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Bad"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Good"</span></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">"<span class="variable">$X</span>"</span> -eq <span class="string">"10"</span> ]: <span class="keyword">then</span></span><br><span class="line">    &lt;commands&gt;</span><br><span class="line">  <span class="keyword">if</span></span><br><span class="line"><span class="keyword">if</span></span><br></pre></td></tr></table></figure><p>输出所有调用变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="string">"<span class="variable">$#</span>"</span> -gt <span class="string">"0"</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"\$1 is <span class="variable">$1</span>"</span></span><br><span class="line">  <span class="built_in">shift</span></span><br><span class="line"><span class="keyword">done</span>      </span><br></pre></td></tr></table></figure><h2 id="19.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">19. 参考链接</h2><p>· <a href="https://linux.die.net/man/1/bash" target="_blank" rel="noopener">bash(1) - Linux man page</a><br>· <a href="https://ryanstutorials.net/bash-scripting-tutorial/" target="_blank" rel="noopener">Bash Scripting Tutorial</a><br>· <a href="https://www.shellscript.sh/" target="_blank" rel="noopener">Shell Scripting Tutorial</a><br>· <a href="http://mywiki.wooledge.org/BashGuide" target="_blank" rel="noopener">BashGuide</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;BASH&lt;/code&gt; 即 &lt;code&gt;Bourne Again Shell&lt;/code&gt; 的缩写，基于 &lt;code&gt;Bourne shell&lt;/code&gt; 并兼容它的大部分特性。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Shell&lt;/code&gt; 是命令解释器，通过 &lt;code&gt;Shell&lt;/code&gt; 用户可以提供命令与系统交互、或者快速的执行批量的命令。它仅仅是用户和系统功能调用的中间层。&lt;/p&gt;
&lt;p&gt;可以把 &lt;code&gt;Shell&lt;/code&gt; 想像成用户和系统交流的一种方式。没有它系统可以照常工作，但是它为用户和系统资源之间提供了一个非常好的接口。通过 &lt;code&gt;Shell&lt;/code&gt; 可以执行基本的数学运算、运行测试和执行应用，甚至通过操作整合和应用互连实现复杂的自运行任务。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BASH&lt;/code&gt; 并不是操作系统，也不是窗口管理器，它通常运行的用户终端中。它不能控制鼠标和键盘、配置系统、激活屏幕保护或者双击打开文件。它通常也不会参与应用程序的启动。用户只是通过它在交互终端或者通过脚本执行一些用符合 BASH 语法的声明。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;BASH&lt;/code&gt; 可以以交互模式运行也可以通过执行执行脚本以非交互模式运行。通过脚本能够自动运行特定的逻辑，脚本本质是一些命令的列表，这些命令和在互模式命令行中输入的一样，只不过现在保存在文件里。当一个脚本执行时里面的命令就会逐行执行。&lt;/p&gt;
&lt;p&gt;打开终端会看到提示符，提示符可以个性化设置，通常提示符会以 &lt;code&gt;$&lt;/code&gt;、&lt;code&gt;%&lt;/code&gt; 或者 &lt;code&gt;#&lt;/code&gt; 结尾，它们表明当前具体是哪一种 &lt;code&gt;Shell&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;$&lt;/code&gt;： 兼容 &lt;code&gt;Bourne shell&lt;/code&gt; 的 &lt;code&gt;Shell&lt;/code&gt;。如：&lt;code&gt;POSIX shell&lt;/code&gt;，&lt;code&gt;Korn shell&lt;/code&gt;，&lt;code&gt;Bash&lt;/code&gt;&lt;br&gt;
&lt;code&gt;%&lt;/code&gt;： &lt;code&gt;C shell&lt;/code&gt;（ &lt;code&gt;csh&lt;/code&gt; 或者 &lt;code&gt;tcsh&lt;/code&gt; ）&lt;br&gt;
&lt;code&gt;#&lt;/code&gt;： 表示当前用户是 &lt;code&gt;root&lt;/code&gt; 用户&lt;/p&gt;
&lt;p&gt;通过 &lt;code&gt;man bash&lt;/code&gt; 命令可以查看 &lt;code&gt;BASH&lt;/code&gt; 使用帮助。&lt;/p&gt;
&lt;h2 id=&quot;1.-hello-world!&quot;&gt;1. Hello World!&lt;/h2&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chmod +x ./hello_world.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./hello_world.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/bin/bash hello_world.sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://garryshield.github.com/categories/Linux/"/>
    
    
      <category term="Bash" scheme="http://garryshield.github.com/tags/Bash/"/>
    
  </entry>
  
  <entry>
    <title>查看 SELinux 状态及如何关闭</title>
    <link href="http://garryshield.github.com/2018/08/07/selinux/"/>
    <id>http://garryshield.github.com/2018/08/07/selinux/</id>
    <published>2018-08-07T01:35:48.000Z</published>
    <updated>2018-08-07T01:35:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1.-%E6%9F%A5%E7%9C%8B-selinux-%E7%8A%B6%E6%80%81%EF%BC%9A">1. 查看 SELinux 状态：</h2><p>SELinux 有三个状态 Enforcing，Permissive，Disabled，当中 Enforcing 是预设的模式。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sestatus -v </span><br><span class="line">// or</span><br><span class="line">getenforce</span><br></pre></td></tr></table></figure><h2 id="2.-%E5%85%B3%E9%97%AD">2. 关闭</h2><h4 id="2.1.-%E4%B8%B4%E6%97%B6%E5%85%B3%E9%97%AD">2.1. 临时关闭</h4><p><code>setenforce</code> 指令可以即时切换 Enforcing 及 Permissive 这两个模式，但这些改动在系统重新开机时不会被保留。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><h4 id="2.2.-%E6%B0%B8%E4%B9%85%E5%85%B3%E9%97%AD">2.2. 永久关闭</h4><p>直接修改配置文件 <code>/etc/selinux/config</code> 禁用 SELinux。</p><figure class="highlight bash"><figcaption><span>/etc/selinux/config</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#SELINUX=enforcing</span></span><br><span class="line">ELINUX=disabled</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="3.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">3. 参考链接</h2><p>· <a href="https://wiki.centos.org/zh/HowTos/SELinux" target="_blank" rel="noopener">SELinux</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1.-%E6%9F%A5%E7%9C%8B-selinux-%E7%8A%B6%E6%80%81%EF%BC%9A&quot;&gt;1. 查看 SELinux 状态：&lt;/h2&gt;
&lt;p&gt;SELinux 有三个状态 Enforcing，Permissive，Disabled，当中 Enforcing 是预设的模式。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sestatus -v &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getenforce&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2.-%E5%85%B3%E9%97%AD&quot;&gt;2. 关闭&lt;/h2&gt;
&lt;h4 id=&quot;2.1.-%E4%B8%B4%E6%97%B6%E5%85%B3%E9%97%AD&quot;&gt;2.1. 临时关闭&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;setenforce&lt;/code&gt; 指令可以即时切换 Enforcing 及 Permissive 这两个模式，但这些改动在系统重新开机时不会被保留。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;setenforce 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;2.2.-%E6%B0%B8%E4%B9%85%E5%85%B3%E9%97%AD&quot;&gt;2.2. 永久关闭&lt;/h4&gt;
&lt;p&gt;直接修改配置文件 &lt;code&gt;/etc/selinux/config&lt;/code&gt; 禁用 SELinux。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;figcaption&gt;&lt;span&gt;/etc/selinux/config&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#SELINUX=enforcing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ELINUX=disabled&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://garryshield.github.com/categories/Linux/"/>
    
    
      <category term="SELinux" scheme="http://garryshield.github.com/tags/SELinux/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7 下编译安装 Memcached 1.5 系列</title>
    <link href="http://garryshield.github.com/2018/08/06/memcached/"/>
    <id>http://garryshield.github.com/2018/08/06/memcached/</id>
    <published>2018-08-06T02:09:37.000Z</published>
    <updated>2018-08-06T02:09:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://memcached.org/" target="_blank" rel="noopener">Memcached</a> 是一个高性能的分布式内存对象缓存系统，用于以减轻数据库负载。</p><h2 id="1.-%E7%BB%93%E6%9E%84%E8%A7%84%E5%88%92">1. 结构规划</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">用户名 memcached</span><br><span class="line">用户组 memcached</span><br><span class="line">端口 2307</span><br><span class="line"></span><br><span class="line"><span class="comment"># 源码包</span></span><br><span class="line">/root/tmp/memcached-1.5.9.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压后源码</span></span><br><span class="line">/root/tmp/memcached-1.5.9</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译目录</span></span><br><span class="line">/root/tmp/build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译安装错误</span></span><br><span class="line">/root/tmp/configure.err</span><br><span class="line">/root/tmp/make.err</span><br><span class="line">/root/tmp/install.err</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装目录</span></span><br><span class="line">/usr/<span class="built_in">local</span>/memcached-1.5.9</span><br><span class="line"></span><br><span class="line"><span class="comment"># 工作目录</span></span><br><span class="line">/var/sites/memcached-1.5.9</span><br><span class="line">  <span class="comment"># 配置文件目录</span></span><br><span class="line">  /etc</span><br><span class="line">  <span class="comment"># Systemd Unit File</span></span><br><span class="line">  /systemd</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2.-%E4%B8%8B%E8%BD%BD%E6%BA%90%E7%A0%81%E5%8C%85">2. 下载源码包</h2><p>到 <a href="https://memcached.org/" target="_blank" rel="noopener">官网下载</a> 最新版。目前最新版本是 <a href="http://www.memcached.org/files/memcached-1.5.9.tar.gz" target="_blank" rel="noopener">memcached-1.5.9.tar.gz</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/tmp/</span><br><span class="line">wget -O ./memcached-1.5.9.tar.gz http://www.memcached.org/files/memcached-1.5.9.tar.gz</span><br></pre></td></tr></table></figure><h2 id="3.-%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96">3. 安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> packages <span class="keyword">in</span> libevent libevent-devel; <span class="keyword">do</span></span><br><span class="line">  yum -y install <span class="variable">$packages</span>;</span><br><span class="line"><span class="keyword">done</span>;</span><br></pre></td></tr></table></figure><h2 id="4.-%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84">4. 添加用户和组</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd memcached;</span><br><span class="line">useradd -s /sbin/nologin -d /dev/null -M -g memcached memcached;</span><br></pre></td></tr></table></figure><h2 id="5.-%E6%B7%BB%E5%8A%A0%E7%AB%AF%E5%8F%A3">5. 添加端口</h2><p>添加运程访问端口 2307，Memcached 默认使用 11211</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=public --add-port=2307/tcp;</span><br><span class="line">firewall-cmd --reload;</span><br></pre></td></tr></table></figure><h2 id="6.-%E8%A7%A3%E5%8C%85%E5%B9%B6%E7%BC%96%E8%AF%91">6. 解包并编译</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/tmp/</span><br><span class="line"></span><br><span class="line">tar -zxvf memcached-1.5.9.tar.gz  -C ./</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> memcached-1.5.9</span><br><span class="line"></span><br><span class="line">./configure --<span class="built_in">help</span> &gt; ../option</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译并导出错误到 ../configure.err</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/memcached-1.5.9 2&gt; ../configure.err</span><br><span class="line"></span><br><span class="line">make -j 4 2&gt; ../make.err</span><br><span class="line"></span><br><span class="line">make -j 4 install 2&gt; ../install.err</span><br></pre></td></tr></table></figure><h2 id="7.-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-memcached">7. 配置文件 memcached</h2><p>编译安装后源码目录下 <code>scripts/memcached.sysconfig</code> 到 <code>/var/sites/memcached-1.5.9/etc/memcached</code>，关修改相应参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/sites/memcached-1.5.9/etc/</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/tmp/memcached-1.5.9</span><br><span class="line">cp scripts/memcached.sysconfig /var/sites/memcached-1.5.9/etc/memcached</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>memcached</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat /var/sites/memcached-1.5.9/etc/memcached | sed -e <span class="string">"s/#.*//g"</span> | awk <span class="string">'&#123;if (length !=0) print $0&#125;'</span></span><br><span class="line"></span><br><span class="line">USER=<span class="string">"memcached"</span></span><br><span class="line">MAXCONN=<span class="string">"1024"</span></span><br><span class="line">CACHESIZE=<span class="string">"64"</span></span><br><span class="line">OPTIONS=<span class="string">""</span></span><br><span class="line">PORT=<span class="string">"2307"</span></span><br></pre></td></tr></table></figure><h2 id="8.-systemd-unit-file">8. Systemd Unit File</h2><p>编译安装后需要用 Systemd 来管理 Memcached，默认的 Unit File 在编译目录下分别为 <code>scripts/memcached.service</code>、<code>scripts/memcached@.service</code>。其中 <code>memcached@.service</code> 用来启动多实例服务。分别复制到 <code>/var/sites/memcached-1.5.9/systemd</code> 目录并修改重命名为 <code>memcached-1.5.9.service</code>、<code>memcached-1.5.9@.service</code>，做相应修改后用如下命令启用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/sites/memcached-1.5.9/systemd/</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/tmp/memcached-1.5.9</span><br><span class="line">cp scripts/memcached.service /var/sites/memcached-1.5.9/systemd/memcached-1.5.9.service</span><br><span class="line">cp scripts/memcached@.service /var/sites/memcached-1.5.9/systemd/memcached-1.5.9@.service</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> /var/sites/memcached-1.5.9/systemd/memcached-1.5.9.service</span><br></pre></td></tr></table></figure><p>注：这里并没有直接复制到默认的 Unit File 目录 <code>/etc/systemd/system</code> 下，而是直接通过 <code>systemctl enable</code> 机制创建相关的链接文件。这样的做的好处是所有的配置文件、启动脚集中在一个目录下方便管理。</p><figure class="highlight bash"><figcaption><span>memcached-1.5.9.service</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cat /var/sites/memcached-1.5.9/systemd/memcached-1.5.9.service | sed -e <span class="string">"s/#.*//g"</span> | awk <span class="string">'&#123;if (length !=0) print $0&#125;'</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=memcached daemon</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/var/sites/memcached-1.5.9/etc/memcached</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/memcached-1.5.9/bin/memcached -p <span class="variable">$&#123;PORT&#125;</span> -u <span class="variable">$&#123;USER&#125;</span> -m <span class="variable">$&#123;CACHESIZE&#125;</span> -c <span class="variable">$&#123;MAXCONN&#125;</span> <span class="variable">$OPTIONS</span></span><br><span class="line">PrivateTmp=<span class="literal">true</span></span><br><span class="line">ProtectSystem=full</span><br><span class="line">NoNewPrivileges=<span class="literal">true</span></span><br><span class="line">PrivateDevices=<span class="literal">true</span></span><br><span class="line">CapabilityBoundingSet=CAP_SETGID CAP_SETUID CAP_SYS_RESOURCE</span><br><span class="line">RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h2 id="9.-%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86">9. 服务管理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前状态</span></span><br><span class="line">systemctl status memcached-1.5.9</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">systemctl start memcached-1.5.9</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">systemctl stop memcached-1.5.9</span><br></pre></td></tr></table></figure><h2 id="10.-memcached-tool">10. memcached-tool</h2><p>源码包内置了一个 perl 写的 <code>scripts/memcached-tool</code> 管理脚本，可以用来查看 Memcached 的运行状态。<br>注：这个脚本并不会自动安装到安装目录中，因此要使用的话要手动复制过去</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/tmp/memcached-1.5.9</span><br><span class="line">cp scripts/memcached-tool /usr/<span class="built_in">local</span>/memcached-1.5.9/bin/memcached-tool</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># /usr/local/memcached-1.5.9/bin/memcached-tool 127.0.0.1:2320</span></span><br><span class="line"> <span class="comment">#  Item_Size  Max_age   Pages   Count   Full?  Evicted Evict_Time OOM</span></span><br><span class="line">  1      96B     46771s       1       1      no        0        0    0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://memcached.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Memcached&lt;/a&gt; 是一个高性能的分布式内存对象缓存系统，用于以减轻数据库负载。&lt;/p&gt;
&lt;h2 id=&quot;1.-%E7%BB%93%E6%9E%84%E8%A7%84%E5%88%92&quot;&gt;1. 结构规划&lt;/h2&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;用户名 memcached&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;用户组 memcached&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;端口 2307&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 源码包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/root/tmp/memcached-1.5.9.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 解压后源码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/root/tmp/memcached-1.5.9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 编译目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/root/tmp/build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 编译安装错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/root/tmp/configure.err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/root/tmp/make.err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/root/tmp/install.err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 安装目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/memcached-1.5.9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 工作目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/var/sites/memcached-1.5.9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 配置文件目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /etc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Systemd Unit File&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /systemd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="CentOS" scheme="http://garryshield.github.com/categories/CentOS/"/>
    
      <category term="Memcached" scheme="http://garryshield.github.com/categories/CentOS/Memcached/"/>
    
    
      <category term="Memcached" scheme="http://garryshield.github.com/tags/Memcached/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7 下编译安装 MariaDB 10.3 系列</title>
    <link href="http://garryshield.github.com/2018/08/03/mariadb/"/>
    <id>http://garryshield.github.com/2018/08/03/mariadb/</id>
    <published>2018-08-03T04:38:16.000Z</published>
    <updated>2018-08-03T04:38:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>Oracle 买下了 Sun， 考虑到 Oracle 的名声以及其入手之后闭源的可能性，MySQL 之父的 Michael 便先行一步，以他女儿 Maria 的名字开始了 MySQL 的另外一个衍生版本即 MariaDB。主流的 Linux 发行商基本上都开始转而支持使用 MariaDB 以规避 MySQL 不确定性的风险。</p><h2 id="1.-%E7%BB%93%E6%9E%84%E8%A7%84%E5%88%92">1. 结构规划</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">用户名 mariadb</span><br><span class="line">用户组 mariadb</span><br><span class="line">端口 2306</span><br><span class="line"></span><br><span class="line"><span class="comment"># 源码包</span></span><br><span class="line">/root/tmp/mariadb-10.3.8.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压后源码</span></span><br><span class="line">/root/tmp/mariadb-10.3.8 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译目录</span></span><br><span class="line">/root/tmp/build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译安装错误</span></span><br><span class="line">/root/tmp/configure.err</span><br><span class="line">/root/tmp/make.err</span><br><span class="line">/root/tmp/install.err</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装目录</span></span><br><span class="line">/usr/<span class="built_in">local</span>/mariadb-10.3.8 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 工作目录</span></span><br><span class="line">/var/sites/mariadb-10.3.8</span><br><span class="line">  <span class="comment"># 数据库、日志目录</span></span><br><span class="line">  /data</span><br><span class="line">  <span class="comment"># 配置文件目录</span></span><br><span class="line">  /etc</span><br><span class="line">    /my.cnf.d</span><br><span class="line">  <span class="comment"># 其它文件目录，如：sock，pid, lock...</span></span><br><span class="line">  /var</span><br><span class="line">  <span class="comment"># Systemd Unit File</span></span><br><span class="line">  /systemd</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2.-%E4%B8%8B%E8%BD%BD%E6%BA%90%E7%A0%81%E5%8C%85">2. 下载源码包</h2><p>到 <a href="https://downloads.mariadb.org/" target="_blank" rel="noopener">官网下载</a> 最新版 MariaDB。目前最新版本是 <a href="https://downloads.mariadb.org/interstitial/mariadb-10.3.8/source/mariadb-10.3.8.tar.gz" target="_blank" rel="noopener">mariadb-10.3.8.tar.gz</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/tmp/</span><br><span class="line">wget -O ./mariadb-10.3.8.tar.gz  https://downloads.mariadb.org/interstitial/mariadb-10.3.8/<span class="built_in">source</span>/mariadb-10.3.8.tar.gz</span><br></pre></td></tr></table></figure><h2 id="3.-%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96">3. 安装依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> packages <span class="keyword">in</span> openssl openssl-devel cmake ncurses ncurses-devel bison bison-devel jemalloc jemalloc-devel; <span class="keyword">do</span></span><br><span class="line">  yum -y install <span class="variable">$packages</span>;</span><br><span class="line"><span class="keyword">done</span>;</span><br></pre></td></tr></table></figure><h2 id="4.-%E5%AE%89%E8%A3%85-devtoolset-7">4. 安装 devtoolset-7</h2><p>MariaDB 编译 TokuDB 引擎时会用到 C++11 标准，系统里 GCC 最高版本 4.8.5 是支持 C++11 标准的，可就算指定了 <code>-DCMAKE_CXX_FLAGS=-std=c++11</code> 也不行。手动编译更高版本的 GCC 又太麻烦，这里直接安装了 <a href="https://www.softwarecollections.org/en/scls/rhscl/devtoolset-7/" target="_blank" rel="noopener">devtoolset-7</a>，当然你禁用 TokuDB 引擎也无可厚非。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> packages <span class="keyword">in</span> centos-release-scl devtoolset-7; <span class="keyword">do</span></span><br><span class="line">  yum -y install <span class="variable">$packages</span></span><br><span class="line"><span class="keyword">done</span>;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">gcc --version</span><br><span class="line">// gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)</span><br><span class="line">// Copyright © 2015 Free Software Foundation, Inc.</span><br><span class="line"></span><br><span class="line">scl <span class="built_in">enable</span> devtoolset-7 bash</span><br><span class="line">// or</span><br><span class="line">. /opt/rh/devtoolset-7/<span class="built_in">enable</span></span><br><span class="line"></span><br><span class="line">gcc --version</span><br><span class="line">// gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5)</span><br><span class="line">// Copyright (C) 2017 Free Software Foundation, Inc.</span><br></pre></td></tr></table></figure><h2 id="5.-%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84">5. 添加用户和组</h2><p>添加用户 mariadb 和组 mariadb 用来启动 MariaBD 服务，MariaDB 默认使用 mysql 用户和 mysql 组。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd mariadb;</span><br><span class="line">useradd -s /sbin/nologin -d /dev/null -M -g mariadb mariadb;</span><br></pre></td></tr></table></figure><h2 id="6.-%E6%B7%BB%E5%8A%A0%E7%AB%AF%E5%8F%A3">6. 添加端口</h2><p>添加运程访问端口 2306，MariaDB 默认使用 3306</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=public --add-port=2306/tcp;</span><br><span class="line">firewall-cmd --reload;</span><br></pre></td></tr></table></figure><h2 id="7.-%E8%A7%A3%E5%8C%85%E5%B9%B6%E7%BC%96%E8%AF%91">7. 解包并编译</h2><p>建议新建一个目录用来编译而不是有源码目录里直接编译，这个过程会非常耗时。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/tmp/</span><br><span class="line"></span><br><span class="line">tar -zxvf mariadb-10.3.8.tar.gz  -C ./</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译目录</span></span><br><span class="line">mkdir build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译并导出错误到 ../configure.err</span></span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=/usr/<span class="built_in">local</span>/mariadb-10.3.8 \</span><br><span class="line">  -DINSTALL_MYSQLDATADIR=/var/sites/mariadb-10.3.8/data \</span><br><span class="line">  -DINSTALL_SYSCONFDIR=/var/sites/mariadb-10.3.8/etc \</span><br><span class="line">  -DINSTALL_SYSCONF2DIR=/var/sites/mariadb-10.3.8/etc/my.cnf.d \</span><br><span class="line">  -DINSTALL_UNIX_ADDRDIR=/var/sites/mariadb-10.3.8/var/mysql.sock \</span><br><span class="line">  -DMYSQL_DATADIR=/var/sites/mariadb-10.3.8/data \</span><br><span class="line">  -DWITH_SYSTEMD=yes \</span><br><span class="line">  -DCONC_WITH_CURL=ON \</span><br><span class="line">  -DCONC_WITH_SSL=ON \</span><br><span class="line">  -DENABLED_LOCAL_INFILE=ON \</span><br><span class="line">  ../mariadb-10.3.8 2&gt; ../configure.err</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看是否出错</span></span><br><span class="line">cat ../configure.err</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有编译选项</span></span><br><span class="line">cmake -LAH ./</span><br><span class="line"></span><br><span class="line">make -j 4 2&gt; ../make.err</span><br><span class="line"></span><br><span class="line">make -j 4 install 2&gt; ../install.err</span><br></pre></td></tr></table></figure><h2 id="8.-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-my.cnf">8. 配置文件 my.cnf</h2><p>上面的编译选项 <code>-DINSTALL_SYSCONFDIR</code>，<code>-DINSTALL_SYSCONF2DIR</code> 指定了默认的配置文件位置为 <code>/var/sites/mariadb-10.3.8/etc</code> 和 <code>/var/sites/mariadb-10.3.8/etc/my.cnf.d</code>，安装后 <code>/var/sites/mariadb-10.3.8/etc</code> 的结构如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/var/sites/mariadb-10.3.8/etc/</span><br><span class="line">├── init.d</span><br><span class="line">│   └── mysql</span><br><span class="line">├── logrotate.d</span><br><span class="line">│   └── mysql</span><br><span class="line">├── my.cnf</span><br><span class="line">├── my.cnf.d</span><br><span class="line">│   ├── client.cnf</span><br><span class="line">│   ├── enable_encryption.preset</span><br><span class="line">│   ├── mysql-clients.cnf</span><br><span class="line">│   └── server.cnf</span><br><span class="line">└── systemd</span><br><span class="line">    └── system</span><br><span class="line">        └── mariadb.service.d</span><br><span class="line">            └── tokudb.conf</span><br><span class="line"></span><br><span class="line">6 directories, 8 files</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>my.cnf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat ../sites/mariadb-10.3.8/etc/my.cnf | sed -e <span class="string">"s/#.*//g"</span> | awk <span class="string">'&#123;if (length !=0) print $0&#125;'</span></span><br><span class="line"></span><br><span class="line">[client-server]</span><br><span class="line">!includedir /var/sites/mariadb-10.3.8/etc/my.cnf.d</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>my.cnf.d/client.cnf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat /var/sites/mariadb-10.3.8/etc/my.cnf.d/client.cnf | sed -e <span class="string">"s/#.*//g"</span> | awk <span class="string">'&#123;if (length !=0) print $0&#125;'</span></span><br><span class="line"></span><br><span class="line">[client]</span><br><span class="line">port=2306</span><br><span class="line">socket=/var/sites/mariadb-10.3.8/var/mysql.sock</span><br><span class="line">[client-mariadb]</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>my.cnf.d/server.cnf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cat /var/sites/mariadb-10.3.8/etc/my.cnf.d/server.cnf | sed -e <span class="string">"s/#.*//g"</span> | awk <span class="string">'&#123;if (length !=0) print $0&#125;'</span></span><br><span class="line"></span><br><span class="line">[server]</span><br><span class="line">[mysqld]</span><br><span class="line">port=2318</span><br><span class="line">socket=/var/sites/mariadb-10.3.8/var/mysql.sock</span><br><span class="line">datadir=/var/sites/mariadb-10.3.8/data</span><br><span class="line">character-set-server=utf8</span><br><span class="line"><span class="built_in">log</span>-output=FILE</span><br><span class="line"><span class="built_in">log</span>-basename=logbase</span><br><span class="line"><span class="built_in">log</span>-error=1</span><br><span class="line">general-log=1</span><br><span class="line">slow-query-log=1</span><br><span class="line">long-query-time=2</span><br><span class="line"><span class="built_in">log</span>-queries-not-using-indexes=1</span><br><span class="line"><span class="built_in">log</span>-bin=1</span><br><span class="line">[galera]</span><br><span class="line">[embedded]</span><br><span class="line">[mariadb]</span><br><span class="line">[mariadb-10.3]</span><br></pre></td></tr></table></figure><h2 id="9.-systemd-unit-file">9. Systemd Unit File</h2><p>编译安装后需要用 Systemd 来管理 MariaDB，默认的 Unit File 在编译目录下分别为 <code>support-files/mariadb.service</code>、<code>support-files/mariadb@.service</code>。其中 <code>mariadb@.service</code> 用来启动多实例服务。分别复制到 <code>/var/sites/mariadb-10.3.8/systemd</code> 目录并修改重命名为 <code>mariadb-10.3.8.service</code>、<code>mariadb-10.3.8@.service</code>，做相应修改后用如下命令启用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/sites/mariadb-10.3.8/systemd/</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /root/tmp/build</span><br><span class="line">cp support-files/mariadb.service /var/sites/mariadb-10.3.8/systemd/mariadb-10.3.8.service</span><br><span class="line">cp support-files/mariadb@.service /var/sites/mariadb-10.3.8/systemd/mariadb-10.3.8@.service</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> /var/sites/mariadb-10.3.8/systemd/mariadb-10.3.8.service</span><br></pre></td></tr></table></figure><p>注：这里并没有直接复制到默认的 Unit File 目录 <code>/etc/systemd/system</code> 下，而是直接通过 <code>systemctl enable</code> 机制创建相关的链接文件。这样的做的好处是所有的配置文件、启动脚集中在一个目录下方便管理。</p><figure class="highlight bash"><figcaption><span>mariadb-10.3.8.service</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">cat /var/sites/mariadb-10.3.8/systemd/mariadb-10.3.8.service | sed -e <span class="string">"s/#.*//g"</span> | awk <span class="string">'&#123;if (length !=0) print $0&#125;'</span></span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=MariaDB 10.3.8 database server</span><br><span class="line">Documentation=man:mysqld(8)</span><br><span class="line">Documentation=https://mariadb.com/kb/en/library/systemd/</span><br><span class="line">After=network.target</span><br><span class="line">After=syslog.target</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">PrivateNetwork=<span class="literal">false</span></span><br><span class="line">User=mariadb</span><br><span class="line">Group=mariadb</span><br><span class="line">CapabilityBoundingSet=CAP_IPC_LOCK</span><br><span class="line">ProtectSystem=full</span><br><span class="line">PrivateDevices=<span class="literal">true</span></span><br><span class="line">ProtectHome=<span class="literal">true</span></span><br><span class="line">PermissionsStartOnly=<span class="literal">true</span></span><br><span class="line">ExecStartPre=/bin/sh -c <span class="string">"systemctl unset-environment _WSREP_START_POSITION"</span></span><br><span class="line">ExecStartPre=/bin/sh -c <span class="string">"[ ! -e /usr/local/mariadb-10.3.8/bin/galera_recovery ] &amp;&amp; VAR= || \</span></span><br><span class="line"><span class="string"> VAR=`/usr/local/mariadb-10.3.8/bin/galera_recovery`; [ $? -eq 0 ] \</span></span><br><span class="line"><span class="string"> &amp;&amp; systemctl set-environment _WSREP_START_POSITION=<span class="variable">$VAR</span> || exit 1"</span></span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/mariadb-10.3.8/bin/mysqld <span class="variable">$MYSQLD_OPTS</span> <span class="variable">$_WSREP_NEW_CLUSTER</span> <span class="variable">$_WSREP_START_POSITION</span></span><br><span class="line">ExecStartPost=/bin/sh -c <span class="string">"systemctl unset-environment _WSREP_START_POSITION"</span></span><br><span class="line">KillSignal=SIGTERM</span><br><span class="line">SendSIGKILL=no</span><br><span class="line">Restart=on-abort</span><br><span class="line">RestartSec=5s</span><br><span class="line">UMask=007</span><br><span class="line">PrivateTmp=<span class="literal">false</span></span><br><span class="line">LimitNOFILE=16364</span><br></pre></td></tr></table></figure><h2 id="10.-%E5%88%9D%E5%A7%8B%E5%8C%96-mariadb">10. 初始化 MariaDB</h2><p>通过安装目录下的 <code>scripts/mysql_install_db</code> 初始化 MariaDB。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/sites/mariadb-10.3.8/data</span><br><span class="line">chown -R mariadb:mariadb /var/sites/mariadb-10.3.8/data</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mariadb-10.3.8</span><br><span class="line">scripts/mysql_install_db --basedir=/usr/<span class="built_in">local</span>/mariadb-10.3.8 --datadir=/var/sites/mariadb-10.3.8/data --user=mariadb</span><br></pre></td></tr></table></figure><h2 id="11.-%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86">11. 服务管理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前状态</span></span><br><span class="line">systemctl status mariadb-10.3.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">systemctl start mariadb-10.3.8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">systemctl stop mariadb-10.3.8</span><br></pre></td></tr></table></figure><h2 id="12.-%E6%8F%90%E9%AB%98%E5%AE%89%E5%85%A8%E6%80%A7">12. 提高安全性</h2><p>安装目录下的 <code>bin/mysql_secure_installation</code> 用来修改密码、删除匿名用户、取消远程链接。<br>注：运行此命令要先启动 MariaDB。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mariadb-10.3.8</span><br><span class="line">bin/mysql_secure_installation</span><br></pre></td></tr></table></figure><p>GRANT ALL PRIVILEGES ON <em>.</em> TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;<br>FLUSH PRIVILEGES;</p><h2 id="13.-%E6%9F%A5%E7%9C%8B%E7%94%A8%E6%88%B7%E8%A1%A8">13. 查看用户表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># /usr/local/mariadb-10.3.8/bin/mysql -uroot -p</span></span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 16</span><br><span class="line">Server version: 10.3.8-MariaDB-log Source distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| <span class="built_in">test</span>               |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.018 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; use mysql;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [mysql]&gt; GRANT ALL PRIVILEGES ON *.* TO <span class="string">'root'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'123456'</span> WITH GRANT OPTION;</span><br><span class="line">Query OK, 0 rows affected (0.001 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [mysql]&gt; DELETE FROM user WHERE user=<span class="string">""</span>;</span><br><span class="line">Query OK, 2 rows affected (0.001 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [mysql]&gt; FLUSH PRIVILEGES;</span><br><span class="line">Query OK, 0 rows affected (0.000 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [mysql]&gt; SELECT Host,User,Password FROM user;</span><br><span class="line">+-----------------------+------+-------------------------------------------+</span><br><span class="line">| Host                  | User | Password                                  |</span><br><span class="line">+-----------------------+------+-------------------------------------------+</span><br><span class="line">| localhost             | root | *FCE33DF678E5F1F5B396FEC65CFB83AF4DBFDD28 |</span><br><span class="line">| localhost.localdomain | root | *FCE33DF678E5F1F5B396FEC65CFB83AF4DBFDD28 |</span><br><span class="line">| 127.0.0.1             | root | *FCE33DF678E5F1F5B396FEC65CFB83AF4DBFDD28 |</span><br><span class="line">| ::1                   | root | *FCE33DF678E5F1F5B396FEC65CFB83AF4DBFDD28 |</span><br><span class="line">| %                     | root | *FCE33DF678E5F1F5B396FEC65CFB83AF4DBFDD28 |</span><br><span class="line">+-----------------------+------+-------------------------------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.001 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [mysql]&gt;</span><br></pre></td></tr></table></figure><h2 id="14.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">14. 参考链接</h2><p>· <a href="https://mariadb.com/" target="_blank" rel="noopener">MariaDB</a><br>· <a href="https://mariadb.com/kb/en/" target="_blank" rel="noopener">MariaDB Document</a><br>· <a href="https://downloads.mariadb.org/" target="_blank" rel="noopener">MariaDB Download</a><br>· <a href="https://www.softwarecollections.org/en/scls/rhscl/devtoolset-7/" target="_blank" rel="noopener">devtoolset-7</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Oracle 买下了 Sun， 考虑到 Oracle 的名声以及其入手之后闭源的可能性，MySQL 之父的 Michael 便先行一步，以他女儿 Maria 的名字开始了 MySQL 的另外一个衍生版本即 MariaDB。主流的 Linux 发行商基本上都开始转而支持使用 MariaDB 以规避 MySQL 不确定性的风险。&lt;/p&gt;
&lt;h2 id=&quot;1.-%E7%BB%93%E6%9E%84%E8%A7%84%E5%88%92&quot;&gt;1. 结构规划&lt;/h2&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;用户名 mariadb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;用户组 mariadb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;端口 2306&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 源码包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/root/tmp/mariadb-10.3.8.tar.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 解压后源码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/root/tmp/mariadb-10.3.8 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 编译目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/root/tmp/build&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 编译安装错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/root/tmp/configure.err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/root/tmp/make.err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/root/tmp/install.err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 安装目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/mariadb-10.3.8 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 工作目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/var/sites/mariadb-10.3.8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 数据库、日志目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 配置文件目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /etc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /my.cnf.d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# 其它文件目录，如：sock，pid, lock...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /var&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;# Systemd Unit File&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  /systemd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="CentOS" scheme="http://garryshield.github.com/categories/CentOS/"/>
    
      <category term="MariaDB" scheme="http://garryshield.github.com/categories/CentOS/MariaDB/"/>
    
    
      <category term="MariaDB" scheme="http://garryshield.github.com/tags/MariaDB/"/>
    
  </entry>
  
  <entry>
    <title>MacOS VMware 网络设置</title>
    <link href="http://garryshield.github.com/2016/11/01/mac-vmware-network/"/>
    <id>http://garryshield.github.com/2016/11/01/mac-vmware-network/</id>
    <published>2016-11-01T02:42:33.000Z</published>
    <updated>2016-11-01T02:42:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>VMware 安装后主机上多了两个 VMnet1 和 VMnet8 虚拟网卡，由它们控制虚拟机与主机间的网络链接方式。</p><p>VMware 默认有三种链接方式:</p><p><strong>VMnet0 桥接网络</strong><br>虚拟机相当与网络上的一台独立计算机，与主机一样，拥有一个独立的 IP 地址。</p><p><strong>VMnet1 仅主机网络</strong><br>虚拟机只能和主机相互访问，不能访问外部网络。</p><p><strong>VMnet8 NAT网络</strong><br>虚拟机在外部网络上共享主机的 IP 地址，主机为虚拟机发出的网络流量进行网络地址转换。</p><a id="more"></a><p><a href="/2016/11/01/mac-vmware-network/assets/Snipaste_2018-08-01_10-53-10.png" data-fancybox="cju5mcbc600142ctp1ixrc4w3" data-caption="MacOS VMware 网络设置"><img class="border""" src="/2016/11/01/mac-vmware-network/assets/Snipaste_2018-08-01_10-53-10.png"></a></p><h2 id="1.-%E4%B8%BB%E6%9C%BA%E8%AE%BE%E7%BD%AE">1. 主机设置</h2><p>主机通过 <code>ifconfig</code> 命令可以查看两个网卡的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vmnet1: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500</span><br><span class="line">ether 00:50:56:c0:00:01</span><br><span class="line">inet 172.16.233.1 netmask 0xffffff00 broadcast 172.16.233.255</span><br><span class="line">vmnet8: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500</span><br><span class="line">ether 00:50:56:c0:00:08</span><br><span class="line">inet 192.168.113.1 netmask 0xffffff00 broadcast 192.168.113.255</span><br></pre></td></tr></table></figure><p>Windows 下可以通过界面修改网卡信息，但是 MacOS 下需要直接修改配置文件：<br><code>/Library/Preferences/VMware\ Fusion/networking</code></p><p>修改后需要执行 <code>vmnet-cli --configure</code> 再生成下列文件：<br>注意：直接修改下列文件没用。<br><code>/Library/Preferences/VMware\ Fusion/vmnet1/dhcpd.conf</code><br><code>/Library/Preferences/VMware\ Fusion/vmnet8/dhcpd.conf</code><br><code>/Library/Preferences/VMware\ Fusion/vmnet8/nat.conf</code></p><p>如下修改三种链接方式的 DHCP，网段等信息：</p><figure class="highlight bash"><figcaption><span>/Library/Preferences/VMware Fusion/networking</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">VERSION=1,0</span><br><span class="line">answer VNET_1_DHCP yes</span><br><span class="line">answer VNET_1_DHCP_CFG_HASH 3B1E88D9119434B209753913AF67F2B032B90DD0</span><br><span class="line">answer VNET_1_HOSTONLY_NETMASK 255.255.255.0</span><br><span class="line">answer VNET_1_HOSTONLY_SUBNET 172.16.233.0</span><br><span class="line">answer VNET_1_VIRTUAL_ADAPTER yes</span><br><span class="line">answer VNET_2_DHCP no</span><br><span class="line">answer VNET_2_NAT no</span><br><span class="line">answer VNET_2_NAT_PARAM_UDP_TIMEOUT 30</span><br><span class="line">answer VNET_2_VIRTUAL_ADAPTER no</span><br><span class="line">answer VNET_8_DHCP yes</span><br><span class="line">answer VNET_8_DHCP_CFG_HASH ED961C19E7E96A10AFD637F8C28197AEA50C5C57</span><br><span class="line">answer VNET_8_HOSTONLY_NETMASK 255.255.255.0</span><br><span class="line">answer VNET_8_HOSTONLY_SUBNET 192.168.113.0</span><br><span class="line">answer VNET_8_NAT yes</span><br><span class="line">answer VNET_8_VIRTUAL_ADAPTER yes</span><br></pre></td></tr></table></figure><p>上面的设置表示：<br>VMnet8 子网为 <code>192.168.113.0</code>，并开启 DHCP，主机的 IP 默认为 <code>192.168.113.1</code>，网关和 DNS 默认为 <code>192.168.113.2</code>，<br>VMnet0 子网为 <code>172.16.233.0</code>，并开启 DHCP，主机的 IP 默认为 <code>172.16.233.1</code>，DNS 默认为 <code>172.16.233.2</code>，</p><p>保存修改后重启 VMware 即可生效，如果不想重启也可以使用 <code>vmnet-cli</code> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo /Applications/VMware\ Fusion.app/Contents/Library/vmnet-cli --configure</span><br><span class="line">sudo /Applications/VMware\ Fusion.app/Contents/Library/vmnet-cli --stop</span><br><span class="line">sudo /Applications/VMware\ Fusion.app/Contents/Library/vmnet-cli --start</span><br></pre></td></tr></table></figure><p>然后再次通过 <code>ifconfig</code> 确认下是否修改成功。</p><h2 id="2.-%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%AE%BE%E7%BD%AE">2. 虚拟机设置</h2><p>以 VMware Fusion 10.1.2 安装 CentOS 7 64 为例，</p><h4 id="2.1.-vmnet8-nat%E7%BD%91%E7%BB%9C">2.1. VMnet8 NAT网络</h4><p>虚拟机在外部网络上共享主机的 IP 地址，主机为虚拟机发出的网络流量进行网络地址转换。</p><p><a href="/2016/11/01/mac-vmware-network/assets/Snipaste_2018-08-01_13-06-47.png" data-fancybox="cju5mcbc600142ctp1ixrc4w3" data-caption="MacOS VMware 网络设置"><img class="border""" src="/2016/11/01/mac-vmware-network/assets/Snipaste_2018-08-01_13-06-47.png"></a></p><p>修改虚拟机信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// ens33 为网卡名</span><br><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=none <span class="comment"># dhcp 表示自动获取 IP，none：使用 IPADDR 设置静态 IP</span></span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33 <span class="comment"># 网卡名</span></span><br><span class="line">UUID=28ad865d-5235-4454-9688-a1bce4637664</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes <span class="comment"># 开机启动</span></span><br><span class="line">IPADDR=192.168.113.20 <span class="comment"># IP</span></span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.113.2 <span class="comment"># 网关</span></span><br><span class="line">DNS1=192.168.113.2 <span class="comment"># DNS</span></span><br><span class="line">IPV6_PRIVACY=no</span><br></pre></td></tr></table></figure><p>建议固定 IP，这样不用每次在主机要链接虚拟机时还要先查看具体 IP。<strong>注意使用固定 IP 时要和主机在同一网段。</strong></p><p>保存修改后重启网络服务：<br>CentOS 7 使用 Systemd 管理服务，更多关于 Systemd 的用法参见：<a href="/2016/03/24/systemd/" title="这篇文章">这篇文章</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 重启网格</span><br><span class="line">systemctl restart network</span><br><span class="line">// or</span><br><span class="line">service network restart</span><br><span class="line"></span><br><span class="line">// 查看是否生效</span><br><span class="line">ip addr</span><br></pre></td></tr></table></figure><p>最后检查主机，虚拟机，外网间是否能正常通讯：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 主机</span><br><span class="line">ping 192.168.113.20</span><br><span class="line"></span><br><span class="line">// 虚拟机</span><br><span class="line">ping 192.168.113.1</span><br><span class="line">ping baidu.com</span><br><span class="line"></span><br><span class="line">// 主机尝试用 ssh 链接虚拟机</span><br><span class="line">ssh root@192.168.113.20</span><br></pre></td></tr></table></figure><h4 id="2.2.-vmnet0-%E6%A1%A5%E6%8E%A5%E7%BD%91%E7%BB%9C">2.2. VMnet0 桥接网络</h4><p>虚拟机相当与网络上的一台独立计算机，与主机一样，拥有一个独立的IP地址。</p><p><a href="/2016/11/01/mac-vmware-network/assets/Snipaste_2018-08-01_14-05-54.png" data-fancybox="cju5mcbc600142ctp1ixrc4w3" data-caption="MacOS VMware 网络设置"><img class="border""" src="/2016/11/01/mac-vmware-network/assets/Snipaste_2018-08-01_14-05-54.png"></a></p><p>修改虚拟机信息：<br>注：我的主机 IP 是 <code>192.168.0.10</code>，网关是 <code>192.168.0.1</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// ens33 为网卡名</span><br><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=28ad865d-5235-4454-9688-a1bce4637664</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.0.20</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.0.1</span><br><span class="line">DNS1=192.168.0.1</span><br><span class="line">IPV6_PRIVACY=no</span><br></pre></td></tr></table></figure><p>保存修改后参见上述 <strong>VMnet8 NAT网络</strong> 的操作重启并检查。</p><h4 id="2.3.-vmnet1-%E4%BB%85%E4%B8%BB%E6%9C%BA%E7%BD%91%E7%BB%9C">2.3. <strong>VMnet1 仅主机网络</strong></h4><p>虚拟机只能和主机相互访问，不能访问外部网络。</p><p><a href="/2016/11/01/mac-vmware-network/assets/Snipaste_2018-08-01_14-17-47.png" data-fancybox="cju5mcbc600142ctp1ixrc4w3" data-caption="MacOS VMware 网络设置"><img class="border""" src="/2016/11/01/mac-vmware-network/assets/Snipaste_2018-08-01_14-17-47.png"></a></p><p>修改虚拟机信息：<br>注：我的主机 IP 是 <code>192.168.0.10</code>，网关是 <code>192.168.0.1</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// ens33 为网卡名</span><br><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=28ad865d-5235-4454-9688-a1bce4637664</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=172.16.233.20</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=172.16.233.1</span><br><span class="line">DNS1=172.16.233.1</span><br><span class="line">IPV6_PRIVACY=no</span><br></pre></td></tr></table></figure><p>保存修改后参见上述 <strong>VMnet8 NAT网络</strong> 的操作重启并检查。<br>注：此链接方式下只能主机与虚拟机通讯，不能与外网通讯。</p><h2 id="3.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">3. 参考链接</h2><p>· <a href="https://www.vmware.com/support/pubs/" target="_blank" rel="noopener">VMware Documentation</a><br>· <a href="https://kb.vmware.com/s/article/1026510" target="_blank" rel="noopener">Modifying the DHCP settings of vmnet1 and vmnet8 in Fusion</a><br>· <a href="https://kb.vmware.com/s/article/1022264" target="_blank" rel="noopener">Understanding networking types in VMware Fusion</a><br>· <a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/" target="_blank" rel="noopener">Red Hat Enterprise Linux 7 Document</a><br>· <a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/" target="_blank" rel="noopener">Red Hat Enterprise Linux 7 Networking Guide</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;VMware 安装后主机上多了两个 VMnet1 和 VMnet8 虚拟网卡，由它们控制虚拟机与主机间的网络链接方式。&lt;/p&gt;
&lt;p&gt;VMware 默认有三种链接方式:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;VMnet0 桥接网络&lt;/strong&gt;&lt;br&gt;
虚拟机相当与网络上的一台独立计算机，与主机一样，拥有一个独立的 IP 地址。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;VMnet1 仅主机网络&lt;/strong&gt;&lt;br&gt;
虚拟机只能和主机相互访问，不能访问外部网络。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;VMnet8 NAT网络&lt;/strong&gt;&lt;br&gt;
虚拟机在外部网络上共享主机的 IP 地址，主机为虚拟机发出的网络流量进行网络地址转换。&lt;/p&gt;
    
    </summary>
    
      <category term="VMware" scheme="http://garryshield.github.com/categories/VMware/"/>
    
      <category term="MacOS" scheme="http://garryshield.github.com/categories/VMware/MacOS/"/>
    
    
      <category term="VMware" scheme="http://garryshield.github.com/tags/VMware/"/>
    
  </entry>
  
  <entry>
    <title>Jupyter Notebook</title>
    <link href="http://garryshield.github.com/2016/10/30/jupyter/"/>
    <id>http://garryshield.github.com/2016/10/30/jupyter/</id>
    <published>2016-10-30T07:30:02.000Z</published>
    <updated>2016-10-30T07:30:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://jupyter.org/index.html" target="_blank" rel="noopener">Jupyter Notebook</a>（此前被称为 IPython Notebook）是基于网页的用于交互计算的应用程序。其可被应用于全过程计算：开发、文档编写、运行代码和展示结果。</p><h2 id="1.-%E5%AE%89%E8%A3%85">1. 安装</h2><p>安装前可以先体验几把 <a href="https://jupyter.org/try" target="_blank" rel="noopener">Try Jupyter</a>。</p><p>安装 Jupyter Notebook 的前提是需要安装了 Python。<br>因为使用了 pyenv 来管理 Python，同时安装了 2.7.10 和 3.7.0 两个版本，我们默认使用 3.7.0 来安装。更多关于 pyenv 的用法参见：<a href="/2016/09/30/pyenv/" title="这篇文章">这篇文章</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pyenv shell 3.7.0</span><br><span class="line">python --version</span><br><span class="line">pip --version</span><br><span class="line"></span><br><span class="line">pip install jupyter</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2.-%E5%91%BD%E4%BB%A4%E8%A1%8C%E9%80%89%E9%A1%B9">2. 命令行选项</h2><p>启动并打开浏览器 <code>http://localhost:8888</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook</span><br></pre></td></tr></table></figure><p>更多的选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Jupyter notebook --<span class="built_in">help</span></span><br><span class="line">// or</span><br><span class="line">Jupyter notebook --<span class="built_in">help</span>-all</span><br></pre></td></tr></table></figure><h2 id="3.-%E9%85%8D%E7%BD%AE">3. 配置</h2><p>查看 Jupyter 相关路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter --paths</span><br></pre></td></tr></table></figure><p>生成配置文件 <code>~/.jupyter/jupyter_notebook_config.py</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Jupyter notebook --generate-config</span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>~/.jupyter/jupyter_notebook_config.py</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 存放目录</span></span><br><span class="line">c.NotebookApp.notebook_dir = <span class="string">'/jupyter'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动后是否自动打开浏览器</span></span><br><span class="line"><span class="comment">#c.NotebookApp.open_browser = True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动端口</span></span><br><span class="line"><span class="comment">#c.NotebookApp.port = 8888</span></span><br></pre></td></tr></table></figure><h2 id="4.-%E4%BD%BF%E7%94%A8">4. 使用</h2><p>Jupyter 使用单元（Cell）保存各种信息。Cell 有多种类型，有表示代码的 Code 单元，和表示格式化文本的 Markdown 单元。每个代码单元都有一个输出区域，在 Code 单元中输入代码，按 <kbd>Ctrl + Enter</kbd> 将运行此代码，代码中最后一个表达式的值将输出区域显示。如果希望屏蔽输出，可以在最后一条语句之后添加一个分号：<code>;</code>。此外，代码中还可以使用 <code>print</code> 语句在输出区域中显示信息。<br>与 IPython 一样，在 Cell 中可以直接按 <kbd>Tab</kbd> 键，可以自动补全。</p><p>Markdown 单元主要用来添加说明<br>Code 单元存放实际的代码块</p><h2 id="5.-%E5%BF%AB%E6%8D%B7%E9%94%AE">5. 快捷键</h2><p>Jupyter 有两种模式的快捷键，编辑模式（Edit mode）和命令模式（Command mode）。编辑模式表示 Cell 处于编辑状态，边框是绿色。命令模式表示 Cell 处于选中状态，边框是灰色。</p><p><kbd>Esc</kbd> 编辑模式 -&gt; 命令模式<br><kbd>Enter</kbd> 命令模式 -&gt; 编辑模式</p><h4 id="5.1.-%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F">5.1. 命令模式</h4><p><kbd>F</kbd> find and replace<br><kbd>↩</kbd> enter edit mode<br><kbd>⌘⇧F</kbd> open the command palette<br><kbd>⌘⇧P</kbd> open the command palette<br><kbd>P</kbd> open the command palette<br><kbd>⇧↩</kbd> run cell, select below<br><kbd>⌃↩</kbd> run selected cells<br><kbd>⌥↩</kbd> run cell and insert below<br><kbd>Y</kbd> change cell to code<br><kbd>M</kbd> change cell to markdown<br><kbd>R</kbd> change cell to raw<br><kbd>1</kbd> change cell to heading 1<br><kbd>2</kbd> change cell to heading 2<br><kbd>3</kbd> change cell to heading 3<br><kbd>4</kbd> change cell to heading 4<br><kbd>5</kbd> change cell to heading 5<br><kbd>6</kbd> change cell to heading 6<br><kbd>K</kbd> select cell above<br><kbd>↑</kbd> select cell above<br><kbd>↓</kbd> select cell below<br><kbd>J</kbd> select cell below<br><kbd>⇧K</kbd> extend selected cells above<br><kbd>⇧↑</kbd> extend selected cells above<br><kbd>⇧↓</kbd> extend selected cells below<br><kbd>⇧J</kbd> extend selected cells below<br><kbd>A</kbd> insert cell above<br><kbd>B</kbd> insert cell below<br><kbd>X</kbd> cut selected cells<br><kbd>C</kbd> copy selected cells<br><kbd>⇧V</kbd> paste cells above<br><kbd>V</kbd> paste cells below<br><kbd>Z</kbd> undo cell deletion<br><kbd>D,D</kbd> delete selected cells<br><kbd>⇧M</kbd> merge selected cells, or current cell with cell below if only one cell is selected<br><kbd>⌘S</kbd> Save and Checkpoint<br><kbd>S</kbd> Save and Checkpoint<br><kbd>L</kbd> toggle line numbers<br><kbd>O</kbd> toggle output of selected cells<br><kbd>⇧O</kbd> toggle output scrolling of selected cells<br><kbd>H</kbd> show keyboard shortcuts<br><kbd>I,I</kbd> interrupt the kernel<br><kbd>0,0</kbd> restart the kernel (with dialog)<br><kbd>Esc</kbd> close the pager<br><kbd>Q</kbd> close the pager<br><kbd>⇧L</kbd> toggles line numbers in all cells, and persist the setting<br><kbd>⇧␣</kbd> scroll notebook up<br><kbd>␣</kbd> scroll notebook down</p><h4 id="5.2.-%E7%BC%96%E8%BE%91%E6%A8%A1%E5%BC%8F">5.2. 编辑模式</h4><p><kbd>⇥</kbd> code completion or indent<br><kbd>⇧⇥</kbd> tooltip<br><kbd>⌘]</kbd> indent<br><kbd>⌘[</kbd> dedent<br><kbd>⌘A</kbd> select all<br><kbd>⌘Z</kbd> undo<br><kbd>⌘/</kbd> comment<br><kbd>⌘D</kbd> delete whole line<br><kbd>⌘U</kbd> undo selection<br><kbd>Insert</kbd> toggle overwrite flag<br><kbd>⌘↑</kbd> go to cell start<br><kbd>⌘↓</kbd> go to cell end<br><kbd>⌥←</kbd> go one word left<br><kbd>⌥→</kbd> go one word right<br><kbd>⌥⌫</kbd> delete word before<br><kbd>⌥⌦</kbd> delete word after<br><kbd>⌘⇧Z</kbd> redo<br><kbd>⌘⇧U</kbd> redo selection<br><kbd>⌃K</kbd> emacs-style line kill<br><kbd>⌘⌫</kbd> delete line left of cursor<br><kbd>⌘⌦</kbd> delete line right of cursor<br><kbd>⌃M</kbd> enter command mode<br><kbd>Esc</kbd> enter command mode<br><kbd>⌘⇧F</kbd> open the command palette<br><kbd>⌘⇧P</kbd> open the command palette<br><kbd>⇧↩</kbd> run cell, select below<br><kbd>⌃↩</kbd> run selected cells<br><kbd>⌥↩</kbd> run cell and insert below<br><kbd>⌃⇧Minus</kbd> split cell at cursor<br><kbd>⌘S</kbd> Save and Checkpoint<br><kbd>↓</kbd> move cursor down<br><kbd>↑</kbd> move cursor up</p><h2 id="6.-%E9%AD%94%E6%B3%95%E5%91%BD%E4%BB%A4%EF%BC%88magics%EF%BC%89">6. 魔法命令（Magics）</h2><p>IPython 提供了许多魔法命令，使得在 IPython 环境中的操作更加得心应手。</p><p>魔法命令都以 <code>%</code> 或者 <code>%%</code> 开头，以 <code>%</code> 开头的成为行命令（line magics），<code>%%</code> 开头的称为单元命令（cell magics）。<br>行命令只对命令所在的行有效，而单元命令则必须出现在单元的第一行，对整个单元的代码进行处理。</p><p><code>%lsmagic</code> 查看所有魔法命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">%lsmagic</span><br><span class="line">Available line magics:</span><br><span class="line">%alias  %alias_magic  %autocall  %automagic  %autosave  %bookmark  %cat  %cd  %clear  %colors  %config  %connect_info  %cp  %debug  %dhist  %dirs  %doctest_mode  %ed  %edit  %env  %gui  %hist  %history  %killbgscripts  %ldir  %less  %lf  %lk  %ll  %load  %load_ext  %loadpy  %logoff  %logon  %logstart  %logstate  %logstop  %ls  %lsmagic  %lx  %macro  %magic  %man  %matplotlib  %mkdir  %more  %mv  %notebook  %page  %pastebin  %pdb  %pdef  %pdoc  %pfile  %pinfo  %pinfo2  %popd  %pprint  %precision  %profile  %prun  %psearch  %psource  %pushd  %pwd  %pycat  %pylab  %qtconsole  %quickref  %recall  %rehashx  %reload_ext  %rep  %rerun  %reset  %reset_selective  %rm  %rmdir  %run  %save  %sc  %set_env  %store  %sx  %system  %tb  %time  %timeit  %unalias  %unload_ext  %who  %who_ls  %whos  %xdel  %xmode</span><br><span class="line"></span><br><span class="line">Available cell magics:</span><br><span class="line">%%!  %%HTML  %%SVG  %%bash  %%capture  %%debug  %%file  %%html  %%javascript  %%js  %%latex  %%markdown  %%perl  %%prun  %%pypy  %%python  %%python2  %%python3  %%ruby  %%script  %%sh  %%svg  %%sx  %%system  %%time  %%timeit  %%writefile</span><br><span class="line"></span><br><span class="line">Automagic <span class="keyword">is</span> ON, % prefix IS NOT needed <span class="keyword">for</span> line magics.</span><br></pre></td></tr></table></figure><p><code>%magic</code> 查看所有魔法命令的文档</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%magic</span><br></pre></td></tr></table></figure><p><code>%magic_name?</code> 查看具体魔法命令的文档</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%cd?</span><br><span class="line">%bookmark?</span><br></pre></td></tr></table></figure><h4 id="6.1.-%E8%A1%8C%E5%91%BD%E4%BB%A4%EF%BC%88line-magics%EF%BC%89">6.1. 行命令（line magics）</h4><p><code>%alias</code>，<code>%unalias</code> 别名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有别名</span></span><br><span class="line">%alias</span><br><span class="line"></span><br><span class="line"><span class="comment"># %l 对应全部参数</span></span><br><span class="line">%alias bracket echo <span class="string">"Input in brackets: &lt;%l&gt;"</span></span><br><span class="line">%bracket hello world</span><br><span class="line"><span class="comment"># Input in brackets: &lt;hello world&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># %s 对应空格分开的每个参数</span></span><br><span class="line">%alias parts echo first %s second %s</span><br><span class="line">%parts A B</span><br><span class="line"><span class="comment"># first A second B</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 参数不对应则报错</span></span><br><span class="line">%parts A</span><br><span class="line"><span class="comment"># UsageError: Alias &lt;parts&gt; requires 2 arguments, 1 given.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除指定别名</span></span><br><span class="line">%unalias bracket</span><br></pre></td></tr></table></figure><p><code>%bookmark</code> 目录标签</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置当前目录的标签</span></span><br><span class="line">%bookmark foo </span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置指定目录的标签</span></span><br><span class="line">%bookmark foo ./ </span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有标签</span></span><br><span class="line">%bookmark -l </span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除指定标签</span></span><br><span class="line">%bookmark -d foo </span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除所有标签</span></span><br><span class="line">%bookmark -r </span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到指定标签   </span></span><br><span class="line">%cd -b foo</span><br></pre></td></tr></table></figure><p><code>%cd</code> 切换当前工作目录<br>Jupyter 保存当前会话中所有访问过的目录到变量 <code>_dh</code> 中，可以使用 <code>%dhist</code> 命令查看。<br><code>%cd</code> 不同于 <code>!cd</code> 命令，<code>!cd</code> 命令执行后就被丢弃。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 切换到指定目录</span></span><br><span class="line">%cd &lt;dir&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到指定目录但不输出</span></span><br><span class="line">%cd -q &lt;dir&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到指定标签</span></span><br><span class="line">%cd -b &lt;bookmark_name&gt;</span><br></pre></td></tr></table></figure><p><code>%config</code> 配置 IPython</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有可配置项</span></span><br><span class="line">%config </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定类的所有可配置项</span></span><br><span class="line">%config &lt;class_name&gt; </span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改指定配置项</span></span><br><span class="line">%config IPCompleter.greedy = <span class="keyword">True</span> </span><br></pre></td></tr></table></figure><p><code>%env</code> 查看&amp;修改环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有环境变量</span></span><br><span class="line">%env</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定环境变量</span></span><br><span class="line">%env ENV_NAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改指定环境变量</span></span><br><span class="line">%env ENV_NAME=ENV_VALUE</span><br></pre></td></tr></table></figure><p><code>%load</code> 载入文件到当前 Cell<br>可载入本地文件，网络文件，历史，宏。如果要载入的文件大于 200000 个字符会弹出提示，除非使用 <code>-y</code> 选项。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">%load myscript.py</span><br><span class="line">%load <span class="number">7</span><span class="number">-27</span></span><br><span class="line">%load myMacro</span><br><span class="line">%load http://www.example.com/myscript.py</span><br><span class="line">%load -r <span class="number">5</span><span class="number">-10</span> myscript.py</span><br><span class="line">%load -r <span class="number">10</span><span class="number">-20</span>,<span class="number">30</span>,<span class="number">40</span>: foo.py</span><br><span class="line">%load -s MyClass,wonder_function myscript.py</span><br><span class="line">%load -n MyClass</span><br><span class="line">%load -n my_module.wonder_function</span><br></pre></td></tr></table></figure><p><code>%history</code> 查看输入历史记录<br>所有的输入历史记录存放到 <code>_i&lt;n&gt;</code> 变量中（<code>_i</code> 指向最后一次输入）<br>选项：<br><code>-n</code> 同时打印行号<br><code>-o</code> 同时打印输入对应的输出<br><code>-f FILENAME</code> 输出结果到文件<br>打印范围：<br>默认将打印当前会话的所有历，也可以通过如下格式指定打印范围：<br><code>4</code> 当前会话第4行<br><code>4-6</code> 当前会话第4至6行<br><code>3/1-5</code> 第3个会话的第1至5行<br><code>~2/7</code> 当前会话倒数第2个会话的第7行<br><code>~8/1-~6/5</code> 当前会话倒数第8个会话的第1行至当前会话倒数第6个会话的第5行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%history -n <span class="number">4</span><span class="number">-6</span></span><br></pre></td></tr></table></figure><p><code>%notebook</code> 导出当前历史到文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导出当前所有历史到 foo.ipynb</span></span><br><span class="line">%notebook foo.ipynb</span><br></pre></td></tr></table></figure><p><code>%pdef</code> 查看可执行对象的定义</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%pdef str.replace</span><br><span class="line"><span class="comment"># str.replace(self, old, new, count=-1, /) </span></span><br></pre></td></tr></table></figure><p><code>%pdoc</code> 查看对象的文档</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%pdoc str.replace</span><br></pre></td></tr></table></figure><p><code>%pinfo</code>，<code>?</code>，<code>%pinfo2</code>，<code>??</code> 查看帮助文档</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%pinfo str.replace</span><br><span class="line">?str.replace</span><br><span class="line">str.replace?</span><br></pre></td></tr></table></figure><p><code>%pycat</code> 查看内容<br>可载入本地文件，网络文件，历史，宏</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%pycat myscript.py</span><br><span class="line">%pycat <span class="number">7</span><span class="number">-27</span></span><br><span class="line">%pycat myMacro</span><br><span class="line">%pycat http://www.example.com/myscript.py</span><br></pre></td></tr></table></figure><p><code>%reset</code> 重置命名空间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -f 表示强制删除，不提示</span></span><br><span class="line">%reset -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除输入历史（In）</span></span><br><span class="line">%reset -f <span class="keyword">in</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除输出历史（Out）</span></span><br><span class="line">%reset -f out </span><br><span class="line"></span><br><span class="line"><span class="comment"># 目录历史 (%dhist, _dh)</span></span><br><span class="line">%reset -f dhist </span><br></pre></td></tr></table></figure><p><code>%run</code> 运行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%run foo.py</span><br><span class="line">%run foo.ipynb</span><br></pre></td></tr></table></figure><p><code>%save</code> 保存到文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># %save [options] filename n1-n2 n3-n4 … n5 .. n6 …</span></span><br><span class="line">%save output.py <span class="number">1</span><span class="number">-10</span></span><br></pre></td></tr></table></figure><p><code>%store</code> 会话间变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有变量</span></span><br><span class="line">%store </span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除所有变量</span></span><br><span class="line">%store -z </span><br><span class="line"></span><br><span class="line"><span class="comment"># 存储变量 var</span></span><br><span class="line">%store var </span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除变量 var</span></span><br><span class="line">%store -d var </span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载所有变量</span></span><br><span class="line">%store -r </span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载变量 var</span></span><br><span class="line">%store -r var </span><br><span class="line"></span><br><span class="line"><span class="comment"># 存储变量 var 到文件 var.txt</span></span><br><span class="line">%store var &gt; var.txt </span><br><span class="line"></span><br><span class="line"><span class="comment"># 追加存储变量 var 到文件 var.txt</span></span><br><span class="line">%store var &gt;&gt; var.txt </span><br></pre></td></tr></table></figure><p><code>%who</code>， <code>%who_ls</code>，<code>%whos</code> 查看全局变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有全局变量</span></span><br><span class="line">%who </span><br><span class="line"></span><br><span class="line"><span class="comment"># type 为 function 和 str 的全局变量</span></span><br><span class="line">%who function str </span><br></pre></td></tr></table></figure><p><code>%sx</code>，<code>!!</code>，<code>%sc</code>，<code>!</code> 运行 Shell 命令并返回结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">%sx ls -la ./</span><br><span class="line">!!ls -la ./</span><br><span class="line"></span><br><span class="line">%sc ls -la ./</span><br><span class="line">!ls -la ./</span><br><span class="line"></span><br><span class="line">%sx ls_res=ls -la ./</span><br><span class="line">ls_res=%sx ls -la ./</span><br><span class="line">ls_res=!ls -la ./</span><br><span class="line">$sc -l ls_res=ls -la ./</span><br></pre></td></tr></table></figure><p><code>%time</code> 计时</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%time <span class="number">2</span>**<span class="number">128</span></span><br></pre></td></tr></table></figure><h4 id="6.2.-%E5%8D%95%E5%85%83%E5%91%BD%E4%BB%A4%EF%BC%88cell-magics%EF%BC%89">6.2. 单元命令（cell magics）</h4><p><code>%%bash</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">%%bash</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line">do</span><br><span class="line">    echo $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p><code>%%html</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%%html</span><br><span class="line">&lt;b style="color:red"&gt;this html block&lt;/b&gt;</span><br></pre></td></tr></table></figure><p><code>%%javascript</code>， <code>%%js</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">%%js</span><br><span class="line">var arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"><span class="keyword">for</span>(var i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    console.log(arr[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>%%markdown</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%%markdown</span><br><span class="line">__this markdown block__</span><br></pre></td></tr></table></figure><p><code>%%writefile</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">%%writefile out.py</span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">  print(<span class="string">'Hello World!'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">  main()</span><br></pre></td></tr></table></figure><p><code>%%capture</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%%capture output</span><br><span class="line">print(<span class="string">'Hello World!'</span>)</span><br></pre></td></tr></table></figure><h2 id="7.-notebook-server">7. Notebook Server</h2><p>一般情况下，Jupyter Notebook 服务运行本地通过 <a href="http://localhost:8888" target="_blank" rel="noopener">http://localhost:8888</a> 访问和使用。<br>但在某些时候，我们想把 Jupyter Notebook 应用架设在公开的服务器中，以便获取更强的计算能力和更多的内存，同时省去在每台电脑上安装和配置 Jupyter Notebook 的过程。</p><p>待续。。。</p><h2 id="8.-%E5%B0%8F%E6%8A%80%E5%B7%A7">8. 小技巧</h2><p>插入图片</p><figure class="highlight python"><figcaption><span>IPython.display.Image</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> display, HTML, Image</span><br><span class="line">image_url = <span class="string">'https://www.python.org/static/img/python-logo.png'</span>;</span><br><span class="line">image_src = <span class="string">'/Users/garryshield/Downloads/python-logo.png'</span>;</span><br><span class="line"></span><br><span class="line">Image(url=image_url)</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">Image(filename=image_src)</span><br><span class="line"><span class="comment"># or </span></span><br><span class="line">display(HTML(<span class="string">'&lt;img src="'</span>+ image_url +<span class="string">'"/&gt;'</span>))</span><br></pre></td></tr></table></figure><p>待续。。。</p><h2 id="9.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">9. 参考链接</h2><p>· <a href="https://jupyter.org/index.html" target="_blank" rel="noopener">Jupyter Notebook</a><br>· <a href="https://ipython.org/" target="_blank" rel="noopener">IPython</a><br>· <a href="https://ipython.readthedocs.io/en/stable/index.html" target="_blank" rel="noopener">IPython Documentation</a><br>· <a href="https://ipython.readthedocs.io/en/stable/interactive/magics.html" target="_blank" rel="noopener">IPython Built-in magic commands</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://jupyter.org/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jupyter Notebook&lt;/a&gt;（此前被称为 IPython Notebook）是基于网页的用于交互计算的应用程序。其可被应用于全过程计算：开发、文档编写、运行代码和展示结果。&lt;/p&gt;
&lt;h2 id=&quot;1.-%E5%AE%89%E8%A3%85&quot;&gt;1. 安装&lt;/h2&gt;
&lt;p&gt;安装前可以先体验几把 &lt;a href=&quot;https://jupyter.org/try&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Try Jupyter&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;安装 Jupyter Notebook 的前提是需要安装了 Python。&lt;br&gt;
因为使用了 pyenv 来管理 Python，同时安装了 2.7.10 和 3.7.0 两个版本，我们默认使用 3.7.0 来安装。更多关于 pyenv 的用法参见：&lt;a href=&quot;/2016/09/30/pyenv/&quot; title=&quot;这篇文章&quot;&gt;这篇文章&lt;/a&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pyenv shell 3.7.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;python --version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip --version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip install jupyter&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Python" scheme="http://garryshield.github.com/categories/Python/"/>
    
    
      <category term="Jupyter" scheme="http://garryshield.github.com/tags/Jupyter/"/>
    
  </entry>
  
  <entry>
    <title>使用 Pyenv 管理 Python</title>
    <link href="http://garryshield.github.com/2016/09/30/pyenv/"/>
    <id>http://garryshield.github.com/2016/09/30/pyenv/</id>
    <published>2016-09-30T04:11:30.000Z</published>
    <updated>2016-09-30T04:11:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/pyenv/pyenv" target="_blank" rel="noopener">pyenv</a> 是 Python 的版本管理工具。 它可以改变全局的 Python 版本，安装多个版本的 Python，设置目录级别的 Python 版本，还能创建和管理 virtual python environments。</p><p>pyenv 的特别之处在于，它并没有使用将不同的 PATH 植入不同的 shell 这种高耦合的工作方式，而是简单地在 PATH 的最前面插入了一个垫片路径（shims）：<code>$(pyenv root)/shims:/usr/local/bin:/usr/bin:/bin</code>。使得对 Python 可执行文件的查找都会首先被这个 shims 路径截获，从而使后方的系统路径失效。</p><a id="more"></a><h2 id="1.-%E5%AE%89%E8%A3%85">1. 安装</h2><p>脚本自动安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash</span><br></pre></td></tr></table></figure><p>直接从 GitHub 安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/pyenv/pyenv.git ~/.pyenv</span><br></pre></td></tr></table></figure><h2 id="2.-%E9%85%8D%E7%BD%AE">2. 配置</h2><p>编辑 <code>.bash_profile</code> 文件</p><figure class="highlight bash"><figcaption><span>~/.bash_profile</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">"~/.pyenv/bin:<span class="variable">$PATH</span>"</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv init -)</span>"</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">"<span class="variable">$(pyenv virtualenv-init -)</span>"</span></span><br></pre></td></tr></table></figure><p>重新载入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><h2 id="2.-%E4%BD%BF%E7%94%A8">2. 使用</h2><p>升级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv update</span><br></pre></td></tr></table></figure><p>卸载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -fr ~/.pyenv</span><br><span class="line">// 删除 ~/.bash_profile 中之前添加的配置</span><br></pre></td></tr></table></figure><p>查看已经安装的版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv versions</span><br></pre></td></tr></table></figure><p>查看当前使用的版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv version</span><br></pre></td></tr></table></figure><p>查看可安装的版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv install --list</span><br></pre></td></tr></table></figure><p>安装指定版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv install 3.7.0</span><br></pre></td></tr></table></figure><p>卸载指定版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv uninstall 3.7.0</span><br></pre></td></tr></table></figure><p>设置全局版本，<strong>不建议改变全局设置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv global 3.7.0</span><br></pre></td></tr></table></figure><p>设置局部版本，在当前目录下生成 <code>.python-version</code>，对此目录及其子目录下都生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv <span class="built_in">local</span> 3.7.0</span><br></pre></td></tr></table></figure><p>取消局部版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv <span class="built_in">local</span> --<span class="built_in">unset</span></span><br></pre></td></tr></table></figure><p>设置面向 shell 的版本，设置当前 shell 的 <code>PYENV_VERSION</code> 环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv shell 3.7.0</span><br></pre></td></tr></table></figure><p>取消面向 shell 的版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv shell --<span class="built_in">unset</span></span><br></pre></td></tr></table></figure><p>创建垫片路径，为所有已安装的可执行文件创建 shims，如：<code>~/.pyenv/versions/*/bin/*</code>，每当增删了 python 版本或带有可执行文件的包（如 pip）以后，都应该执行一次本命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv <span class="built_in">rehash</span></span><br></pre></td></tr></table></figure><p>优先级 <strong>shell &gt; local &gt; global</strong></p><h2 id="3.-%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83">3. 虚拟环境</h2><p>安装 pyenv 后，通过 pyenv-virtualenv 插件可以很好的和 <a href="https://github.com/pypa/virtualenv" target="_blank" rel="noopener">virtualenv</a> 结合</p><p>创建虚拟环境，生成到目录 <code>~/.pyenv/versions/[version]/envs/</code> 下，然后链接到 <code>~/.pyenv/versions/</code> 下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// pyenv virtualenv [-f|--force] [VIRTUALENV_OPTIONS] [version] &lt;virtualenv-name&gt;</span><br><span class="line">// 若不指定 python 版本， 默认使用当前环境 python 版本</span><br><span class="line">// 更多的选项参见 virtualenv 的使用说明</span><br><span class="line">pyenv virtualenv 3.7.0 virtualenv-name</span><br></pre></td></tr></table></figure><p>列出所有虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv virtualenvs</span><br></pre></td></tr></table></figure><p>激活虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv activate</span><br></pre></td></tr></table></figure><p>退出虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv deactivate</span><br></pre></td></tr></table></figure><p>删除虚拟环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv uninstall virtualenv-name</span><br></pre></td></tr></table></figure><h2 id="4.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">4. 参考链接</h2><p>· <a href="https://github.com/pyenv/pyenv" target="_blank" rel="noopener">pyenv</a><br>· <a href="https://github.com/pypa/virtualenv" target="_blank" rel="noopener">virtualenv</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/pyenv/pyenv&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;pyenv&lt;/a&gt; 是 Python 的版本管理工具。 它可以改变全局的 Python 版本，安装多个版本的 Python，设置目录级别的 Python 版本，还能创建和管理 virtual python environments。&lt;/p&gt;
&lt;p&gt;pyenv 的特别之处在于，它并没有使用将不同的 PATH 植入不同的 shell 这种高耦合的工作方式，而是简单地在 PATH 的最前面插入了一个垫片路径（shims）：&lt;code&gt;$(pyenv root)/shims:/usr/local/bin:/usr/bin:/bin&lt;/code&gt;。使得对 Python 可执行文件的查找都会首先被这个 shims 路径截获，从而使后方的系统路径失效。&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://garryshield.github.com/categories/Python/"/>
    
    
      <category term="Pyenv" scheme="http://garryshield.github.com/tags/Pyenv/"/>
    
  </entry>
  
  <entry>
    <title>Google 高级搜索</title>
    <link href="http://garryshield.github.com/2016/08/29/google-search/"/>
    <id>http://garryshield.github.com/2016/08/29/google-search/</id>
    <published>2016-08-29T08:17:08.000Z</published>
    <updated>2016-08-29T08:17:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>双引号<br>关键词放在双引号中，代表完全匹配搜索，即返回的网页包含双引号中出现的所有的词，顺序也必须完全匹配。<br>例如：<code>&quot;搜索 图片&quot;</code></p><p>减号<br>减号代表搜索不包含减号后面的词的网页。减号前面必须是空格，减号后面没有空格，紧跟着需要排除的词。<br>例如：<code>搜索 -引擎</code> 返回包含 <code>搜索</code> 不包含 <code>引擎</code> 的网页</p><p>星号<br>星号 <code>*</code> 通配符代表任何文字。<br>例如：<code>搜索*擎</code> 中的 <code>*</code> 号代表任何文字。返回包含 <code>搜索引擎</code>，<code>搜索收擎</code>，<code>搜索巨擎</code> 等内容的网页。</p><a id="more"></a><p>inurl<br><code>inurl:WORD</code> 搜索关键词出现在url中的网页。<br>例如：<code>inurl:引擎</code> 返回url中包含 <code>引擎</code> 的网页。<br><code>inurl:admin.php</code></p><p>allinurl<br><code>allinurl:WORDS</code> 搜索url中包含多个关键词的网页。<br>例如：<code>allinurl:搜索 引擎</code> 相当于：<code>inurl:搜索 inurl:引擎</code>。</p><p>intitle<br><code>intitle:WORD</code> 返回title中包含关键词的网页。<br>例如：<code>intitle:用户登录</code> 返回title包含 <code>用户登录</code> 的网页</p><p>allintitle<br><code>allintitle:WORDS</code> 返回title中包含多个关键词的网页。<br>例如：<code>allintitle:搜索 引擎</code> 相当于：<code>intitle:搜索 intitle:引擎</code></p><p>intext<br><code>intext:WORD</code> 返回正文中包含关键词的网页。<br>例如：<code>intext:用户登录</code> 返回正文包含 <code>用户登录</code> 的网页</p><p>allintext<br><code>allintext:WORDS</code> 返回正文中包含多个关键词的网页。<br>例如：<code>allintext:搜索 引擎</code> 相当于：<code>intext:搜索 intext:引擎</code></p><p>inanchor<br><code>inanchor:WORD</code> 返回链接锚点中包含关键词的网页<br>例如：<code>inanchor:搜索</code> 返回链接锚点中包含 <code>搜索</code> 的网页。</p><p>allinanchor<br><code>allinanchor:WORDS</code> 返回链接锚点中包含多个关键词的网页<br>例如：<code>allinanchor:搜索 引擎</code> 返回链接锚点中包含 <code>搜索</code> 和 <code>引擎</code> 的网页。</p><p>link<br><code>link:URL</code> 返回链接到目标URL的网页</p><p>info<br><code>info:URL</code> 返回目标URL信息</p><p>filetype<br><code>filetype:TYPE WORD</code> 返回包含关键词的特定文件。<br>例如：<code>filetype:pdf 搜索</code> 返回包含 <code>搜索</code> 关键词的所有 <code>pdf</code> 文件。</p><p>site<br><code>site:URL</code> 返回某个域名下的所有网页。<br>例如：<code>site:google.com</code>，<code>site:.google.com</code></p><p>related<br><code>related:URL</code> 返回与某个网站有关联的网页。</p><p>cache<br><code>cache:URL</code> 返回某些已经被删除的死链接网页。</p><p>index of /<br>列出文件（需要服务器支持）<br>例如：<code>index of /mp3</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;双引号&lt;br&gt;
关键词放在双引号中，代表完全匹配搜索，即返回的网页包含双引号中出现的所有的词，顺序也必须完全匹配。&lt;br&gt;
例如：&lt;code&gt;&amp;quot;搜索 图片&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;减号&lt;br&gt;
减号代表搜索不包含减号后面的词的网页。减号前面必须是空格，减号后面没有空格，紧跟着需要排除的词。&lt;br&gt;
例如：&lt;code&gt;搜索 -引擎&lt;/code&gt; 返回包含 &lt;code&gt;搜索&lt;/code&gt; 不包含 &lt;code&gt;引擎&lt;/code&gt; 的网页&lt;/p&gt;
&lt;p&gt;星号&lt;br&gt;
星号 &lt;code&gt;*&lt;/code&gt; 通配符代表任何文字。&lt;br&gt;
例如：&lt;code&gt;搜索*擎&lt;/code&gt; 中的 &lt;code&gt;*&lt;/code&gt; 号代表任何文字。返回包含 &lt;code&gt;搜索引擎&lt;/code&gt;，&lt;code&gt;搜索收擎&lt;/code&gt;，&lt;code&gt;搜索巨擎&lt;/code&gt; 等内容的网页。&lt;/p&gt;
    
    </summary>
    
      <category term="Google" scheme="http://garryshield.github.com/categories/Google/"/>
    
    
      <category term="Google" scheme="http://garryshield.github.com/tags/Google/"/>
    
  </entry>
  
  <entry>
    <title>Javascript Promise 的用法</title>
    <link href="http://garryshield.github.com/2016/07/29/javascript-promise/"/>
    <id>http://garryshield.github.com/2016/07/29/javascript-promise/</id>
    <published>2016-07-29T05:06:45.000Z</published>
    <updated>2016-07-29T05:06:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>回调是 JavaScript 编程中比较令人纠结的写法，主要是用于处理“并列”或者“并行”的操作，然后在回调函数中处理操作结果。这样原生的回调写法就会带来以下的不便。</p><ol><li>回调结果状态不便管理</li><li>回调方式自由松散，没有规范约束</li></ol><p>Promise 对象是 JavaScript 的异步操作解决方案，为异步操作提供统一接口。它起到代理作用，充当异步操作与回调函数之间的中介，使得异步操作具备同步操作的接口。Promise 可以让异步操作写起来，就像在写同步操作的流程，而不必一层层地嵌套回调函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 传统写法</span></span><br><span class="line">step1(<span class="function"><span class="keyword">function</span> (<span class="params">value1</span>) </span>&#123;</span><br><span class="line">  step2(value1, <span class="function"><span class="keyword">function</span>(<span class="params">value2</span>) </span>&#123;</span><br><span class="line">    step3(value2, <span class="function"><span class="keyword">function</span>(<span class="params">value3</span>) </span>&#123;</span><br><span class="line">      step4(value3, <span class="function"><span class="keyword">function</span>(<span class="params">value4</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Promise 的写法</span></span><br><span class="line">(<span class="keyword">new</span> <span class="built_in">Promise</span>(step1))</span><br><span class="line">  .then(step2)</span><br><span class="line">  .then(step3)</span><br><span class="line">  .then(step4);</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="1.-%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95">1. 基本用法</h2><p>Promise 对象是一个构造函数，用来生成 Promise 实例。<br>下面代码创造了一个 Promise 实例。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="comment">/* 异步操作成功 */</span>)&#123;</span><br><span class="line">    resolve(value);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;<span class="comment">/* 异步操作失败 */</span></span><br><span class="line">    reject(error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>上面代码中，Promise 构造函数接受一个函数作为参数，该函数的两个参数分别是 resolve 和 reject。它们是两个函数，不用自己实现。</p><p>resolve 函数的作用是，将 Promise 实例的状态从“未完成”变为“成功”（即从 pending 变为 fulfilled ），在异步操作成功时调用，并将异步操作的结果，作为参数传递出去。<br>reject 函数的作用是，将 Promise 实例的状态从“未完成”变为“失败”（即从 pending 变为 rejected ），在异步操作失败时调用，并将异步操作报出的错误，作为参数传递出去。</p><h2 id="2.-%E7%8A%B6%E6%80%81">2. 状态</h2><p>Promise 对象通过自身的状态，来控制异步操作。Promise 实例具有三种状态。<br>1、异步操作未完成（pending）<br>2、异步操作成功（fulfilled）<br>3、异步操作失败（rejected）</p><p>上面三种状态里面，fulfilled 和 rejected 合在一起称为 resolved（已定型）。</p><p>这三种的状态的变化途径只有两种。<br>1、从“未完成”到“成功”<br>2、从“未完成”到“失败”</p><p>一旦状态发生变化，就凝固了，不会再有新的状态变化。</p><p>因此，Promise 的最终结果只有两种。</p><p>1、异步操作成功，Promise 实例传回一个值（value），状态变为 fulfilled。<br>2、异步操作失败，Promise 实例抛出一个错误（error），状态变为 rejected。</p><h2 id="3.-resolve">3. Resolve</h2><p>处理异步的成功状态</p><h4 id="3.1.-%E6%99%AE%E9%80%9A%E6%96%B9%E5%BC%8F">3.1. 普通方式</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; </span><br><span class="line">    <span class="keyword">let</span> result = <span class="number">1</span>;</span><br><span class="line">    resolve(result); </span><br><span class="line">  &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">p.then(<span class="function">(<span class="params">result</span>)=&gt;</span>&#123; <span class="built_in">console</span>.log(result) &#125;)</span><br></pre></td></tr></table></figure><h4 id="3.2.-%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F">3.2. 快捷方式</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> p = <span class="built_in">Promise</span>.resolve(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">p.then(<span class="function">(<span class="params">result</span>)=&gt;</span>&#123; <span class="built_in">console</span>.log(result) &#125;)</span><br></pre></td></tr></table></figure><h2 id="4.-reject">4. Reject</h2><p>处理异步的失败状态</p><h4 id="4.1-%E6%99%AE%E9%80%9A%E6%96%B9%E5%BC%8F">4.1 普通方式</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="number">2</span>;</span><br><span class="line">    reject(result);</span><br><span class="line">  &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 有两种方式获取失败状态</span></span><br><span class="line"><span class="comment">// 第一种，通过 then 第二个函数参数处理失败状态</span></span><br><span class="line">p.then(<span class="function">(<span class="params">result</span>)=&gt;</span>&#123; </span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'success:'</span>,result);</span><br><span class="line">&#125;, (err)=&gt;&#123; </span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'fail:'</span>,err);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// "fail: 2"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二种，或者通过，catch 获取失败状态</span></span><br><span class="line">p.then(<span class="function">(<span class="params">result</span>)=&gt;</span>&#123; </span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'success:'</span>,result);</span><br><span class="line">&#125;).catch(<span class="function">(<span class="params">err</span>)=&gt;</span>&#123; </span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'error:'</span>,err);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// "error: 2"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意：如果两种方式同时使用的话</span></span><br><span class="line"><span class="comment">// 只会处理第一种方式操作的结果</span></span><br><span class="line">p.then(<span class="function">(<span class="params">result</span>)=&gt;</span>&#123; </span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'success:'</span>,result);</span><br><span class="line">&#125;, (err)=&gt;&#123; </span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'fail:'</span>,err);</span><br><span class="line">&#125;).catch(<span class="function">(<span class="params">err</span>)=&gt;</span>&#123; </span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'error:'</span>,err);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// "fail: 2"</span></span><br></pre></td></tr></table></figure><h4 id="4.2-%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F">4.2 快捷方式</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> p = <span class="built_in">Promise</span>.reject(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">p.then(<span class="literal">null</span>, (err) =&gt; <span class="built_in">console</span>.log(<span class="string">'fail:'</span>, err))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 或</span></span><br><span class="line">p.then().catch(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'error:'</span>, err))</span><br></pre></td></tr></table></figure><h2 id="5.-catch">5. Catch</h2><p>从上述 reject 的使用过程中，会发现, catch 操作在没有设置 onRejected 处理的时候，会被 catch 捕获失败处理。同时 catch 也会捕获 onResolved 和 onRejected 中出现的错误。</p><h4 id="5.1.-%E7%9B%B4%E6%8E%A5%E6%8D%95%E8%8E%B7-reject">5.1. 直接捕获 reject</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    reject(<span class="number">3</span>)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">p.then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'success:'</span>, result)</span><br><span class="line">&#125;).catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'error:'</span>, err)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// "error: 3"</span></span><br></pre></td></tr></table></figure><h4 id="5.2.-%E6%8D%95%E8%8E%B7-onresolved-%E4%B8%AD%E7%9A%84%E5%BC%82%E5%B8%B8">5.2. 捕获 onResolved 中的异常</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">  resolve(<span class="number">3</span>)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">p.then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'custom resolve error!'</span>)</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'success:'</span>, result)</span><br><span class="line">&#125;).catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Custom error:'</span>, err)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// "Custom error: Error: custom resolve error!"</span></span><br></pre></td></tr></table></figure><h4 id="5.3.-%E6%8D%95%E8%8E%B7-onrejected-%E4%B8%AD%E7%9A%84%E5%BC%82%E5%B8%B8">5.3. 捕获 onRejected 中的异常</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">  reject(<span class="number">3</span>)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">p.then(<span class="literal">null</span>, (err) =&gt; &#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'custom reject error!'</span>)</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'fail:'</span>, err)</span><br><span class="line">&#125;).catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Custom error:'</span>, err)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// "Custom error: Error: custom reject error!"</span></span><br></pre></td></tr></table></figure><h2 id="6.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">6. 参考链接</h2><p>· <a href="http://es6.ruanyifeng.com/#docs/promise" target="_blank" rel="noopener">Promise 对象</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;回调是 JavaScript 编程中比较令人纠结的写法，主要是用于处理“并列”或者“并行”的操作，然后在回调函数中处理操作结果。这样原生的回调写法就会带来以下的不便。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;回调结果状态不便管理&lt;/li&gt;
&lt;li&gt;回调方式自由松散，没有规范约束&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Promise 对象是 JavaScript 的异步操作解决方案，为异步操作提供统一接口。它起到代理作用，充当异步操作与回调函数之间的中介，使得异步操作具备同步操作的接口。Promise 可以让异步操作写起来，就像在写同步操作的流程，而不必一层层地嵌套回调函数。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 传统写法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;step1(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;value1&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  step2(value1, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;value2&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    step3(value2, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;value3&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      step4(value3, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;value4&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Promise 的写法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(step1))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(step2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(step3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .then(step4);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Javascript" scheme="http://garryshield.github.com/categories/Javascript/"/>
    
    
      <category term="Promise" scheme="http://garryshield.github.com/tags/Promise/"/>
    
  </entry>
  
  <entry>
    <title>使用 Markdown-it 渲染 Hexo</title>
    <link href="http://garryshield.github.com/2016/06/25/hexo-render/"/>
    <id>http://garryshield.github.com/2016/06/25/hexo-render/</id>
    <published>2016-06-24T23:23:36.000Z</published>
    <updated>2016-06-24T23:23:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo 默认其官方插件 <a href="https://github.com/hexojs/hexo-renderer-marked" target="_blank" rel="noopener">hexo-renderer-marked</a> 使用 <a href="https://github.com/markedjs/marked" target="_blank" rel="noopener">marked</a> 来渲染 Markdown。这个插件有很多特殊 Markdown 语法不支持。</p><p>一番查找后发现 Hexo 官方还有另一个使用 <a href="https://github.com/markdown-it/markdown-it" target="_blank" rel="noopener">markdown-it</a> 做渲染器的插件 <a href="https://github.com/hexojs/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a>。该渲染器有众多插件可以用来处理诸如：</p><ul><li>缩写 <a href="https://www.npmjs.com/package/markdown-it-abbr" target="_blank" rel="noopener">markdown-it-abbr</a></li><li>脚注 <a href="https://www.npmjs.com/package/markdown-it-footnote" target="_blank" rel="noopener">markdown-it-footnote</a></li><li>&lt;ins&gt; <a href="https://www.npmjs.com/package/markdown-it-ins" target="_blank" rel="noopener">markdown-it-ins</a></li><li>下标 <a href="https://www.npmjs.com/package/markdown-it-sub" target="_blank" rel="noopener">markdown-it-sub</a></li><li>上标 <a href="https://www.npmjs.com/package/markdown-it-sup" target="_blank" rel="noopener">markdown-it-sup</a></li><li>锚点 <a href="https://www.npmjs.com/package/markdown-it-anchor" target="_blank" rel="noopener">markdown-it-anchor</a></li><li>&lt;dl&gt; <a href="https://www.npmjs.com/package/markdown-it-deflist" target="_blank" rel="noopener">markdown-it-deflist</a></li><li>&lt;mark&gt; <a href="https://www.npmjs.com/package/markdown-it-mark" target="_blank" rel="noopener">markdown-it-mark</a></li><li>自定义容器 <a href="https://www.npmjs.com/package/markdown-it-container" target="_blank" rel="noopener">markdown-it-container</a></li><li>表情 <a href="https://www.npmjs.com/package/markdown-it-emoji" target="_blank" rel="noopener">markdown-it-emoji</a></li><li>HTML 属性 <a href="https://www.npmjs.com/package/markdown-it-attrs" target="_blank" rel="noopener">markdown-it-attrs</a></li><li>Task Lists <a href="https://www.npmjs.com/package/markdown-it-task-lists" target="_blank" rel="noopener">markdown-it-task-lists</a></li><li><a href="https://www.npmjs.com/search?q=keywords:markdown-it" target="_blank" rel="noopener">其它...</a></li></ul><a id="more"></a><h2 id="1.-%E5%AE%89%E8%A3%85">1. 安装</h2><p>进入你的 hexo 的根目录，先删除默认渲染器插件，再安装 <a href="https://github.com/hexojs/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> myhexoblog/</span><br><span class="line">npm uninstall hexo-renderer-marked</span><br><span class="line"></span><br><span class="line"><span class="comment"># npm install --save hexo-renderer-markdown-it</span></span><br><span class="line"><span class="comment"># 直接从 GitHub 上安装，支持配置插件</span></span><br><span class="line">npm install --save git+https://github.com/hexojs/hexo-renderer-markdown-it.git</span><br></pre></td></tr></table></figure><h2 id="2.-%E9%85%8D%E7%BD%AE">2. 配置</h2><figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Markdown-it config</span></span><br><span class="line"><span class="comment">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class="line"><span class="attr">markdown:</span></span><br><span class="line"><span class="attr">  render:</span></span><br><span class="line">    <span class="comment"># Enable HTML tags in source</span></span><br><span class="line"><span class="attr">    html:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Use '/' to close single tags (&lt;br /&gt;). This is only for full CommonMark compatibility.</span></span><br><span class="line"><span class="attr">    xhtmlOut:</span> <span class="literal">true</span>        </span><br><span class="line"></span><br><span class="line">    <span class="comment"># Convert '\n' in paragraphs into &lt;br&gt; </span></span><br><span class="line"><span class="attr">    breaks:</span> <span class="literal">true</span>      </span><br><span class="line"></span><br><span class="line">    <span class="comment"># CSS language prefix for fenced blocks. Can be useful for external highlighters.</span></span><br><span class="line"><span class="attr">    langPrefix:</span> <span class="string">'language-'</span>  </span><br><span class="line"></span><br><span class="line">    <span class="comment"># Autoconvert URL-like text to links </span></span><br><span class="line"><span class="attr">    linkify:</span> <span class="literal">true</span>        </span><br><span class="line"></span><br><span class="line">    <span class="comment"># Enable some language-neutral replacement + quotes beautification</span></span><br><span class="line"><span class="attr">    typographer:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Double + single quotes replacement pairs, when typographer enabled,</span></span><br><span class="line">    <span class="comment"># and smartquotes on. Could be either a String or an Array.</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># For example, you can use '«»„“' for Russian, '„“‚‘' for German,</span></span><br><span class="line">    <span class="comment"># and ['«\xA0', '\xA0»', '‹\xA0', '\xA0›'] for French (including nbsp).</span></span><br><span class="line"><span class="attr">    quotes:</span> <span class="string">'“”‘’'</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Plugins</span></span><br><span class="line"><span class="attr">  plugins:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">markdown-it-abbr</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">markdown-it-footnote</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">markdown-it-ins</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">markdown-it-sub</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">markdown-it-sup</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">markdown-it-anchor</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">markdown-it-deflist</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">markdown-it-mark</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">markdown-it-container</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">    -</span> <span class="string">markdown-it-emoji</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">markdown-it-attrs</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">markdown-it-task-lists</span></span><br><span class="line"><span class="attr">      options:</span></span><br><span class="line"><span class="attr">        enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">        label:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">        labelAfter:</span> <span class="literal">false</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># Automatic Headline ID's</span></span><br><span class="line"><span class="attr">  anchors:</span></span><br><span class="line">    <span class="comment"># Minimum level for ID creation. (Ex. h2 to h6)</span></span><br><span class="line"><span class="attr">    level:</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># A suffix that is prepended to the number given if the ID is repeated.</span></span><br><span class="line"><span class="attr">    collisionSuffix:</span> <span class="string">'v'</span>           </span><br><span class="line"></span><br><span class="line">    <span class="comment"># If `true`, creates an anchor tag with a permalink besides the heading.</span></span><br><span class="line"><span class="attr">    permalink:</span> <span class="literal">false</span>              </span><br><span class="line"></span><br><span class="line">    <span class="comment"># Class used for the permalink anchor tag.</span></span><br><span class="line"><span class="attr">    permalinkClass:</span> <span class="string">header-anchor</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment"># The symbol used to make the permalink</span></span><br><span class="line"><span class="attr">    permalinkSymbol:</span> <span class="string">¶</span></span><br></pre></td></tr></table></figure><h2 id="3.-%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6">3. 安装插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm install --save markdown-it-abbr</span><br><span class="line">npm install --save markdown-it-footnote</span><br><span class="line">npm install --save markdown-it-ins</span><br><span class="line">npm install --save markdown-it-sub</span><br><span class="line">npm install --save markdown-it-sup</span><br><span class="line">npm install --save markdown-it-anchor</span><br><span class="line">npm install --save markdown-it-deflist</span><br><span class="line">npm install --save markdown-it-mark</span><br><span class="line">npm install --save markdown-it-container</span><br><span class="line"></span><br><span class="line">npm install --save markdown-it-emoji</span><br><span class="line">npm install --save markdown-it-attrs</span><br><span class="line">npm install --save markdown-it-task-lists</span><br></pre></td></tr></table></figure><p>至此我们已经安装并配置好新的渲染器，运行如下命令使其生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo server -p 4000</span><br></pre></td></tr></table></figure><h2 id="4.-task-list">4. Task List</h2><p><a href="https://www.npmjs.com/package/markdown-it-task-lists" target="_blank" rel="noopener">markdown-it-task-lists</a> 用来渲染 GitHub 风格的 <a href="https://blog.github.com/2014-04-28-task-lists-in-all-markdown-documents/" target="_blank" rel="noopener">Task List</a>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"><span class="attr">- name:</span> <span class="string">markdown-it-task-lists</span></span><br><span class="line"><span class="attr">  options:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    label:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    labelAfter:</span> <span class="literal">false</span></span><br><span class="line"><span class="string">...</span></span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">__Task List__</span></span><br><span class="line"><span class="bullet">- </span>[ ] Mercury</span><br><span class="line"><span class="bullet">- </span>[x] Venus</span><br><span class="line"><span class="bullet">- </span>[x] Earth (Orbit/Moon)</span><br><span class="line"><span class="bullet">- </span>[x] Mars</span><br><span class="line"><span class="bullet">- </span>[ ] Jupiter</span><br><span class="line"><span class="bullet">- </span>[ ] Saturn</span><br><span class="line"><span class="bullet">- </span>[ ] Uranus</span><br><span class="line"><span class="bullet">- </span>[ ] Neptune</span><br><span class="line"><span class="bullet">- </span>[ ] Comet Haley</span><br></pre></td></tr></table></figure><p><strong>Task List</strong></p><ul class="contains-task-list"><li class="task-list-item"><label><input class="task-list-item-checkbox" disabled type="checkbox"> Mercury</label></li><li class="task-list-item"><label><input class="task-list-item-checkbox" checked disabled type="checkbox"> Venus</label></li><li class="task-list-item"><label><input class="task-list-item-checkbox" checked disabled type="checkbox"> Earth (Orbit/Moon)</label></li><li class="task-list-item"><label><input class="task-list-item-checkbox" checked disabled type="checkbox"> Mars</label></li><li class="task-list-item"><label><input class="task-list-item-checkbox" disabled type="checkbox"> Jupiter</label></li><li class="task-list-item"><label><input class="task-list-item-checkbox" disabled type="checkbox"> Saturn</label></li><li class="task-list-item"><label><input class="task-list-item-checkbox" disabled type="checkbox"> Uranus</label></li><li class="task-list-item"><label><input class="task-list-item-checkbox" disabled type="checkbox"> Neptune</label></li><li class="task-list-item"><label><input class="task-list-item-checkbox" disabled type="checkbox"> Comet Haley</label></li></ul><h2 id="5.-%E8%A1%A8%E6%83%85-emoji">5. 表情 Emoji</h2><h4 id="5.1.-emojicopy">5.1. EmojiCopy</h4><p>在 <a href="https://www.emojicopy.com/" target="_blank" rel="noopener">EmojiCopy</a> 中找到你想要的表情，然后点击即可复制粘贴。</p><p>😦 😊 😕</p><h4 id="5.2.-emoji-cheat-sheet">5.2. Emoji Cheat Sheet</h4><p>参见 <a href="https://github.com/markdown-it/markdown-it-emoji/blob/master/lib/data/full.json" target="_blank" rel="noopener">markdown-it-emoji definitions</a>。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:frowning: :blush: :confused:</span><br></pre></td></tr></table></figure><p><img class="emoji" draggable="false" alt="😦" src="https://twemoji.maxcdn.com/2/72x72/1f626.png"> <img class="emoji" draggable="false" alt="😊" src="https://twemoji.maxcdn.com/2/72x72/1f60a.png"> <img class="emoji" draggable="false" alt="😕" src="https://twemoji.maxcdn.com/2/72x72/1f615.png"></p><h4 id="5.3.-%E7%BC%A9%E5%86%99%E6%A0%BC%E5%BC%8F%EF%BC%88shortcuts%EF%BC%89">5.3. 缩写格式（shortcuts）</h4><p>参见 <a href="https://github.com/markdown-it/markdown-it-emoji/blob/master/lib/data/shortcuts.js" target="_blank" rel="noopener">markdown-it-emoji shortcuts</a>。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;:( :") :/</span><br></pre></td></tr></table></figure><blockquote><p><img class="emoji" draggable="false" alt="😦" src="https://twemoji.maxcdn.com/2/72x72/1f626.png"> <img class="emoji" draggable="false" alt="😊" src="https://twemoji.maxcdn.com/2/72x72/1f60a.png"> <img class="emoji" draggable="false" alt="😕" src="https://twemoji.maxcdn.com/2/72x72/1f615.png"></p></blockquote><p>注：上述三种方式同时可以结合 <a href="https://www.npmjs.com/package/markdown-it-attrs" target="_blank" rel="noopener">markdown-it-attrs</a> 插件添加 style 或者 classname 修改表情大小。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">😦 😊 😕</span><br><span class="line">&#123;style="font-size:2rem;"&#125;</span><br><span class="line"></span><br><span class="line">😦 😊 😕</span><br><span class="line">&#123;.h2&#125;</span><br><span class="line"></span><br><span class="line">:frowning: :blush: :confused:</span><br><span class="line">&#123;.h2&#125;</span><br><span class="line"></span><br><span class="line">&gt;:( :") :/</span><br><span class="line">&#123;.h2&#125;</span><br></pre></td></tr></table></figure><h4 id="5.4.-twemoji">5.4. Twemoji</h4><p>上述三种方式都是输出 Unicode 字符表情，通过 <a href="https://twemoji.twitter.com/" target="_blank" rel="noopener">Twemoji</a> 可以输出图片格式的表情。<br>实际上 <a href="https://www.npmjs.com/package/markdown-it-attrs" target="_blank" rel="noopener">markdown-it-attrs</a> 可以通过 <code>md.renderer.rules.emoji</code> 来设置渲染输出处理机制，默认是直接输出。只需要修改这个地方就能满足要求。<br>首先需要安装 twemoji 包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save twemoji</span><br></pre></td></tr></table></figure><p>然后修改如下代码：</p><figure class="highlight javascript"><figcaption><span>node_modules/markdown-it-emoji/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">var</span> twemoji = <span class="built_in">require</span>(<span class="string">'twemoji'</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">// md.renderer.rules.emoji = emoji_html;</span></span><br><span class="line">md.renderer.rules.emoji = <span class="function"><span class="keyword">function</span>(<span class="params">token, idx</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> twemoji.parse(token[idx].content, &#123;</span><br><span class="line">    <span class="comment">// options</span></span><br><span class="line">    <span class="comment">// https://github.com/twitter/twemoji</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><a href="https://twemoji.twitter.com/" target="_blank" rel="noopener">Twemoji</a> 可以输出 svg 格式的图片，要修改表情图片的大小，只能在 Css 中修改。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.emoji</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">1.5em</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1.5em</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> .<span class="number">05em</span> <span class="number">0</span> .<span class="number">1em</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: -<span class="number">0.1em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">6. 参考链接</h2><p>· <a href="https://github.com/hexojs/hexo-renderer-marked" target="_blank" rel="noopener">hexo-renderer-marked</a><br>· <a href="https://github.com/hexojs/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a><br>· <a href="https://www.webpagefx.com/tools/emoji-cheat-sheet/" target="_blank" rel="noopener">Emoji Cheat Sheet</a><br>· <a href="https://api.github.com/emojis" target="_blank" rel="noopener">Github Emojis API</a><br>· <a href="https://twemoji.twitter.com/" target="_blank" rel="noopener">Twemoji</a><br>· <a href="https://www.emojicopy.com/" target="_blank" rel="noopener">EmojiCopy</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo 默认其官方插件 &lt;a href=&quot;https://github.com/hexojs/hexo-renderer-marked&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo-renderer-marked&lt;/a&gt; 使用 &lt;a href=&quot;https://github.com/markedjs/marked&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;marked&lt;/a&gt; 来渲染 Markdown。这个插件有很多特殊 Markdown 语法不支持。&lt;/p&gt;
&lt;p&gt;一番查找后发现 Hexo 官方还有另一个使用 &lt;a href=&quot;https://github.com/markdown-it/markdown-it&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;markdown-it&lt;/a&gt; 做渲染器的插件 &lt;a href=&quot;https://github.com/hexojs/hexo-renderer-markdown-it&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo-renderer-markdown-it&lt;/a&gt;。该渲染器有众多插件可以用来处理诸如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缩写 &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-abbr&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;markdown-it-abbr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;脚注 &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-footnote&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;markdown-it-footnote&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;lt;ins&amp;gt; &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-ins&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;markdown-it-ins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下标 &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-sub&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;markdown-it-sub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;上标 &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-sup&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;markdown-it-sup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;锚点 &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-anchor&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;markdown-it-anchor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;lt;dl&amp;gt; &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-deflist&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;markdown-it-deflist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&amp;lt;mark&amp;gt; &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-mark&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;markdown-it-mark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;自定义容器 &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-container&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;markdown-it-container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;表情 &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-emoji&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;markdown-it-emoji&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;HTML 属性 &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-attrs&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;markdown-it-attrs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Task Lists &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-task-lists&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;markdown-it-task-lists&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/search?q=keywords:markdown-it&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;其它...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Node.js" scheme="http://garryshield.github.com/categories/Node-js/"/>
    
    
      <category term="Hexo" scheme="http://garryshield.github.com/tags/Hexo/"/>
    
      <category term="Markdown" scheme="http://garryshield.github.com/tags/Markdown/"/>
    
      <category term="Emoji" scheme="http://garryshield.github.com/tags/Emoji/"/>
    
  </entry>
  
  <entry>
    <title>Systemd 定时器单元 - Timer</title>
    <link href="http://garryshield.github.com/2016/05/20/systemd-timer/"/>
    <id>http://garryshield.github.com/2016/05/20/systemd-timer/</id>
    <published>2016-05-19T23:23:36.000Z</published>
    <updated>2016-05-19T23:23:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>Timers 是以 .timer 为后缀名的 systemd 单元文件，用于控制 .service 文件或事件。Timers 可用来代替 cron。Timers 内置了日历定时事件和单调定时事件的支持，并可以异步执行这些事件。<br>更多关于 Systemd 的说明参见 <a href="/2016/03/24/systemd/" title="这篇文章">这篇文章</a>。</p><a id="more"></a><h2 id="1.-%E5%AE%9A%E6%97%B6%E5%99%A8%E5%8D%95%E5%85%83">1. 定时器单元</h2><p>Timers 是以 .timer 为后缀的 systemd 单元文件。Timers 和其他单元配置文件是类似的，它通过相同的路径加载，不同的是包含了 [Timer] 部分。 [Timer] 部分定义了何时以及如何激活定时事件。Timers 可以被定义成以下两种类型：</p><h4 id="1.1.-%E5%8D%95%E8%B0%83%E5%AE%9A%E6%97%B6%E5%99%A8">1.1. 单调定时器</h4><p>即从一个时间点过一段时间后激活定时任务。所有的单调计时器都遵循如下形式： OnTypeSec=。 OnBootSec 和 OnActiveSec 是常用的单调定时器。</p><h4 id="1.2.-%E5%AE%9E%E6%97%B6%E5%AE%9A%E6%97%B6%E5%99%A8">1.2. 实时定时器</h4><p>通过日历事件激活定时任务。 使用 OnCalender= 来定义实时定时器。</p><p>要查阅完整的定时器选项参见 <a href="https://www.freedesktop.org/software/systemd/man/systemd.timer.html" target="_blank" rel="noopener">Timer unit configuration</a>。 关于日历事件和时间段的定义参见 <a href="https://www.freedesktop.org/software/systemd/man/systemd.time.html" target="_blank" rel="noopener">Time and date specifications</a>.</p><h2 id="2.-%E6%9C%8D%E5%8A%A1%E5%8D%95%E5%85%83">2. 服务单元</h2><p>每个 .timer 文件所在目录都得有一个对应的 .service 文件（如 foo.timer 和 foo.service）。.timer 用于激活并控制 .service 文件。<br>.service 文件中不需要包含 [Install] 部分，因为这由 timer 单元接管。必要时通过在定时器的 [Timer] 部分指定 Unit= 选项来控制一个与定时器不同名的服务单元。<br>更多服务单元说明参见 <a href="/2016/03/24/systemd/" title="这篇文章">这篇文章</a>。</p><h2 id="3.-%E7%AE%A1%E7%90%86">3. 管理</h2><p>使用 timer 单元时像其他单元一样 enable 或 start 即可（别忘了添加 .timer 后缀）。</p><h4 id="3.1.-%E6%9F%A5%E7%9C%8B%E5%8D%95%E5%85%83%E6%96%87%E4%BB%B6">3.1. 查看单元文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有单元</span></span><br><span class="line">systemctl list-unit-files</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有 Service 单元</span></span><br><span class="line">systemctl list-unit-files --<span class="built_in">type</span>=service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有 Timer 单元</span></span><br><span class="line">systemctl list-unit-files --<span class="built_in">type</span>=timer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看所有正在运行的定时器</span></span><br><span class="line">systemctl list-timers</span><br></pre></td></tr></table></figure><h4 id="3.2.-%E5%8D%95%E5%85%83%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4">3.2. 单元管理命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动单元</span></span><br><span class="line">systemctl start foo.timer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭单元</span></span><br><span class="line">systemctl stop foo.timer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启单元</span></span><br><span class="line">systemctl restart foo.timer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 杀死单元进程</span></span><br><span class="line">systemctl <span class="built_in">kill</span> foo.timer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看单元状态</span></span><br><span class="line">systemctl status foo.timer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开机自动执行该单元</span></span><br><span class="line">systemctl <span class="built_in">enable</span> foo.timer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭开机自动执行</span></span><br><span class="line">systemctl <span class="built_in">disable</span> foo.timer</span><br></pre></td></tr></table></figure><h4 id="3.3.-%E6%97%A5%E5%BF%97%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4">3.3. 日志相关命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看整个日志</span></span><br><span class="line">journalctl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 foo.timer 的日志</span></span><br><span class="line">journalctl -u foo.timer</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 foo.timer 和 foo.service 的日志</span></span><br><span class="line">journalctl -u foo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从结尾开始查看最新日志</span></span><br><span class="line">journalctl -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从结尾开始查看 foo.timer 的日志</span></span><br><span class="line">journalctl -f -u foo.timer</span><br></pre></td></tr></table></figure><h2 id="4.-%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B">4. 配置示例</h2><h4 id="4.1.-%E5%8D%95%E8%B0%83%E5%AE%9A%E6%97%B6%E5%99%A8">4.1. 单调定时器</h4><p>定义一个在系统启动 15 分钟后执行，且之后每周都执行一次的定时器。</p><figure class="highlight bash"><figcaption><span>/etc/systemd/system/foo.timer</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Run foo weekly and on boot</span><br><span class="line"></span><br><span class="line">[Timer]</span><br><span class="line">OnBootSec=15min</span><br><span class="line">OnUnitActiveSec=1w </span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=timers.target</span><br></pre></td></tr></table></figure><h4 id="4.2.-%E5%AE%9E%E6%97%B6%E5%AE%9A%E6%97%B6%E5%99%A8">4.2. 实时定时器</h4><p>定义一个每周执行一次（明确时间为周一上午十二点）且上次未执行就立即执行的定时器。</p><figure class="highlight bash"><figcaption><span>/etc/systemd/system/foo.timer</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Run foo weekly</span><br><span class="line"></span><br><span class="line">[Timer]</span><br><span class="line">OnCalendar=weekly</span><br><span class="line">Persistent=<span class="literal">true</span>     </span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=timers.target</span><br></pre></td></tr></table></figure><h4 id="4.3.-%E5%AE%9A%E6%97%B6%E5%99%A8%E5%8D%95%E5%85%83%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E">4.3. 定时器单元文件说明</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">OnActiveSec：定时器生效后，多少时间开始执行任务</span><br><span class="line">OnBootSec：系统启动后，多少时间开始执行任务</span><br><span class="line">OnStartupSec：Systemd 进程启动后，多少时间开始执行任务</span><br><span class="line">OnUnitActiveSec：该单元上次执行后，等多少时间再次执行</span><br><span class="line">OnUnitInactiveSec： 定时器上次关闭后多少时间，再次执行</span><br><span class="line">OnCalendar：基于绝对时间，而不是相对时间执行</span><br><span class="line">AccuracySec：如果因为各种原因，任务必须推迟执行，推迟的最大秒数，默认是60秒</span><br><span class="line">Unit：真正要执行的任务，默认是同名的带有.service后缀的单元</span><br><span class="line">Persistent：如果设置了该字段，即使定时器到时没有启动，也会自动执行相应的单元</span><br><span class="line">WakeSystem：如果系统休眠，是否自动唤醒系统</span><br></pre></td></tr></table></figure><h2 id="5.-%E6%A1%88%E4%BE%8B%E4%B8%80%EF%BC%9A%E5%AE%9A%E6%97%B6%E8%BF%BD%E5%8A%A0%E6%96%87%E6%9C%AC">5. 案例一：定时追加文本</h2><h4 id="5.1-%E5%88%9B%E5%BB%BA%E8%84%9A%E6%9C%AC">5.1 创建脚本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line">touch backup_www.sh</span><br><span class="line">chmod +x backup_www.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><figcaption><span>backup_www.sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 向 /root/backup_www.txt 文件中追加当前时间</span></span><br><span class="line">mydate()</span><br><span class="line">&#123;</span><br><span class="line">  date <span class="string">"+%Y-%m-%d %H:%M:%S"</span></span><br><span class="line">&#125;</span><br><span class="line">backupdate=$(mydate)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;backupdate&#125;</span> &gt;&gt; /root/backup_www.txt</span><br></pre></td></tr></table></figure><h4 id="5.2.-%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%8D%95%E5%85%83">5.2. 创建服务单元</h4><figure class="highlight bash"><figcaption><span>/etc/systemd/system/backup_www.service</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=www backup service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=www</span><br><span class="line">Group=www</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/root/backup_www.sh</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h4 id="5.2.-%E5%AE%9A%E6%97%B6%E5%99%A8%E5%8D%95%E5%85%83">5.2. 定时器单元</h4><figure class="highlight bash"><figcaption><span>/etc/systemd/system/backup_www.timer</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=www backup timer</span><br><span class="line"></span><br><span class="line">[Timer]</span><br><span class="line"><span class="comment"># 表示每 15 分钟执行一次</span></span><br><span class="line">OnCalendar=*:0/15</span><br><span class="line">Persistent=<span class="literal">true</span></span><br><span class="line">Unit=backup_www.service</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h4 id="5.3.-%E5%88%9B%E5%BB%BA%E9%93%BE%E6%8E%A5%E5%B9%B6%E5%90%AF%E5%8A%A8">5.3. 创建链接并启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> backup_www.service</span><br><span class="line">systemctl <span class="built_in">enable</span> backup_www.timer</span><br><span class="line">systemctl start backup_www.timer</span><br><span class="line"></span><br><span class="line">systemctl status backup_www.timer</span><br><span class="line"></span><br><span class="line">● backup_www.timer - www backup timer</span><br><span class="line">   Loaded: loaded (/etc/systemd/system/backup_www.timer; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Tue 2018-07-24 12:36:10 UTC; 10min ago</span><br><span class="line"></span><br><span class="line">Jul 24 12:36:10 e36d66eda18f systemd[1]: Started www backup timer.</span><br><span class="line">Jul 24 12:36:10 e36d66eda18f systemd[1]: Starting www backup timer.</span><br></pre></td></tr></table></figure><p>每隔一分钟运行 <code>cat /root/backup_www.txt</code> 查看运行结果:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">2016-07-24 12:46:48</span><br><span class="line">2016-07-24 12:47:48</span><br><span class="line">2016-07-24 12:48:48</span><br><span class="line">2016-07-24 12:49:48</span><br><span class="line">2016-07-24 12:50:48</span><br><span class="line">2016-07-24 12:51:48</span><br><span class="line">2016-07-24 12:52:48</span><br></pre></td></tr></table></figure><h2 id="6.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">6. 参考链接</h2><p>· <a href="https://github.com/systemd/systemd" target="_blank" rel="noopener">Systemd GitHub</a><br>· <a href="https://www.freedesktop.org/wiki/Software/systemd/" target="_blank" rel="noopener">Systemd Office Site</a><br>· <a href="https://www.freedesktop.org/software/systemd/man/systemd.unit.html" target="_blank" rel="noopener">Systemd Unit Man</a><br>· <a href="https://www.freedesktop.org/software/systemd/man/systemd.timer.html" target="_blank" rel="noopener">Timer unit configuration</a><br>· <a href="https://www.freedesktop.org/software/systemd/man/systemd.time.html" target="_blank" rel="noopener">Time and date specifications</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Timers 是以 .timer 为后缀名的 systemd 单元文件，用于控制 .service 文件或事件。Timers 可用来代替 cron。Timers 内置了日历定时事件和单调定时事件的支持，并可以异步执行这些事件。&lt;br&gt;
更多关于 Systemd 的说明参见 &lt;a href=&quot;/2016/03/24/systemd/&quot; title=&quot;这篇文章&quot;&gt;这篇文章&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://garryshield.github.com/categories/Linux/"/>
    
    
      <category term="Systemd" scheme="http://garryshield.github.com/tags/Systemd/"/>
    
  </entry>
  
  <entry>
    <title>Mac 修饰键和热键</title>
    <link href="http://garryshield.github.com/2016/04/24/mac-keyboard/"/>
    <id>http://garryshield.github.com/2016/04/24/mac-keyboard/</id>
    <published>2016-04-24T13:20:04.000Z</published>
    <updated>2016-04-24T13:20:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1.-%E6%8C%89%E9%94%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6">1. 按键修饰符</h2><table class="markdown-table" style="font-family:Consolas, 'Liberation Mono', Menlo, Courier, monospace"><thead><tr><th>GLYPH</th><th>HTML Entity</th><th>NAME</th></tr></thead><tbody><tr><td>⌘</td><td>&amp;#8984;</td><td>Command</td></tr><tr><td>⌥</td><td>&amp;#8997;</td><td>Option</td></tr><tr><td>⇧</td><td>&amp;#8679;</td><td>Shift</td></tr><tr><td>⌃</td><td>&amp;#8963;</td><td>Control</td></tr><tr><td>⎋</td><td>&amp;#9099;</td><td>Esc</td></tr><tr><td>⇪</td><td>&amp;#8682;</td><td>Caps lock</td></tr><tr><td>⏏</td><td>&amp;#9167;</td><td>Eject</td></tr><tr><td>↵</td><td>&amp;#8629; &amp;crarr;</td><td>Return</td></tr><tr><td>⌫</td><td>&amp;#9003;</td><td>Delete</td></tr><tr><td>⌦</td><td>&amp;#8998;</td><td>Forward Delete</td></tr><tr><td>→</td><td>&amp;#8594; &amp;rarr;</td><td>Right</td></tr><tr><td>←</td><td>&amp;#8592; &amp;larr;</td><td>Left</td></tr><tr><td>↑</td><td>&amp;#8593; &amp;uarr;</td><td>Up</td></tr><tr><td>↓</td><td>&amp;#8595; &amp;darr;</td><td>Down</td></tr><tr><td>⇞</td><td>&amp;#8670;</td><td>Page Up</td></tr><tr><td>⇟</td><td>&amp;#8671;</td><td>Page Down</td></tr><tr><td>↖</td><td>&amp;#8598;</td><td>Home</td></tr><tr><td>↘</td><td>&amp;#8600;</td><td>End</td></tr><tr><td>⌧</td><td>&amp;#8999;</td><td>Clear</td></tr><tr><td>⇥</td><td>&amp;#8677;</td><td>Tab</td></tr><tr><td>⇤</td><td>&amp;#8676;</td><td>Shift Tab</td></tr><tr><td><strong>␣</strong></td><td>&amp;#9251;</td><td>Space</td></tr></tbody></table><a id="more"></a><h2 id="2.-%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE">2. 常用快捷键</h2><h4 id="2.1.-%E7%B3%BB%E7%BB%9F">2.1. 系统</h4><p><kbd>⌘ + tab</kbd> 切换应用程序<br><kbd>⌘ + ⌫</kbd> 将选中的文件移动到废纸篓<br><kbd>⌘ + c</kbd> 拷贝<br><kbd>⌘ + v</kbd> 粘贴<br><kbd>⌘ + ⌥ + v</kbd> 移动文件<br><kbd>⌘ + q</kbd> 退出当前应用<br><kbd>⌘ + h</kbd> 隐藏当前窗口<br><kbd>⌘ + m</kbd> 最小化当前窗口<br><kbd>⌘ + w</kbd> 关闭当前窗口</p><h4 id="2.2.-%E6%88%AA%E5%9B%BE">2.2. 截图</h4><p><kbd>⌘ + ⇧ + 3</kbd> 截屏并保存桌面<br><kbd>⌘ + ⇧ + ⌃ + 3</kbd> 截屏并保存剪贴板<br><kbd>⌘ + ⇧ + 4</kbd> 截区域并保存桌面<br><kbd>⌘ + ⇧ + ⌃ + 4</kbd> 截区域并保存剪贴板</p><h4 id="2.3.-%E6%96%87%E6%9C%AC%E5%AF%BC%E8%88%AA">2.3. 文本导航</h4><p><kbd>⌃ + b</kbd> 后移光标<br><kbd>⌃ + f</kbd> 前移光标</p><p><kbd>⌃ + a</kbd> 跳到行首<br><kbd>⌃ + e</kbd> 跳到行尾</p><p><kbd>⌃ + u</kbd> 删除光标前到行首<br><kbd>⌃ + k</kbd> 删除光标处到行尾</p><p><kbd>⌃ + h</kbd> 删除光标前的字符<br><kbd>⌃ + d</kbd> 删除光标处的字符</p><p><kbd>⌃ + w</kbd> 删除光标前的单词<br><kbd>⌃ + y</kbd> 粘贴最后一次的删除</p><p><kbd>⎋ + b</kbd><br><kbd>⌥ + ←</kbd> 后一个单词<br><kbd>⎋ + f</kbd><br><kbd>⌥ + →</kbd> 前一个单词</p><h4 id="2.4.-iterm">2.4. iTerm</h4><p><kbd>⌃ + p</kbd> 前一条命令<br><kbd>⌃ + n</kbd> 后一条命令</p><p><kbd>⌃ + r</kbd> 查找相关历史命令</p><p><kbd>⌘ + k</kbd> 清屏<br><kbd>⌘ + t</kbd> 新建标签<br><kbd>⌘ + n</kbd> 新建窗口</p><p><kbd>⌘ + →</kbd><br><kbd>⌘ + ←</kbd> 切换标签<br><kbd>⌘ + ⇧ + [</kbd><br><kbd>⌘ + ⇧ + ]</kbd> 切换标签<br><kbd>⌘ + ⇧ + →</kbd><br><kbd>⌘ + ⇧ + ←</kbd> 移动标签</p><p><kbd>⌘ + d</kbd> 新建垂直分隔面板<br><kbd>⌘ + ⇧ + d</kbd> 新建水平分隔面板<br><kbd>⌘ + ⌥ + →</kbd><br><kbd>⌘ + ⌥ + ←</kbd><br><kbd>⌘ + ⌥ + ↑</kbd><br><kbd>⌘ + ⌥ + ↓</kbd> 切换面板<br><kbd>⌘ + ]</kbd> 切换到下一个面板<br><kbd>⌘ + [</kbd> 切换到上一个面板<br><kbd>⌘ + ⌃ + →</kbd><br><kbd>⌘ + ⌃ + ←</kbd><br><kbd>⌘ + ⌃ + ↑</kbd><br><kbd>⌘ + ⌃ + ↓</kbd> 调整面板</p><p>MacOS 快捷键设置：</p><p><a href="/2016/04/24/mac-keyboard/assets/Snipaste_2018-07-26_17-07-37.png" data-fancybox="cju5mcbc0000q2ctptknm665i" data-caption="Mac 修饰键和热键"><img class="border""" src="/2016/04/24/mac-keyboard/assets/Snipaste_2018-07-26_17-07-37.png"></a></p><p>使用 <a href="https://mediaatelier.com/CheatSheet/" target="_blank" rel="noopener">CheatSheet</a> 查看当前软件的快捷键</p><p><a href="/2016/04/24/mac-keyboard/assets/Snipaste_2018-07-26_17-12-33.png" data-fancybox="cju5mcbc0000q2ctptknm665i" data-caption="Mac 修饰键和热键"><img class="border""" src="/2016/04/24/mac-keyboard/assets/Snipaste_2018-07-26_17-12-33.png"></a></p><!--more--><h2 id="3.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">3. 参考链接</h2><p>· <a href="https://support.apple.com/en-us/HT201236" target="_blank" rel="noopener">Mac keyboard shortcuts</a><br>· <a href="https://mediaatelier.com/CheatSheet/" target="_blank" rel="noopener">CheatSheet</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1.-%E6%8C%89%E9%94%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6&quot;&gt;1. 按键修饰符&lt;/h2&gt;
&lt;table class=&quot;markdown-table&quot; style=&quot;font-family:Consolas, &#39;Liberation Mono&#39;, Menlo, Courier, monospace&quot;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;GLYPH&lt;/th&gt;
&lt;th&gt;HTML Entity&lt;/th&gt;
&lt;th&gt;NAME&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;⌘&lt;/td&gt;
&lt;td&gt;&amp;amp;#8984;&lt;/td&gt;
&lt;td&gt;Command&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⌥&lt;/td&gt;
&lt;td&gt;&amp;amp;#8997;&lt;/td&gt;
&lt;td&gt;Option&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⇧&lt;/td&gt;
&lt;td&gt;&amp;amp;#8679;&lt;/td&gt;
&lt;td&gt;Shift&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⌃&lt;/td&gt;
&lt;td&gt;&amp;amp;#8963;&lt;/td&gt;
&lt;td&gt;Control&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⎋&lt;/td&gt;
&lt;td&gt;&amp;amp;#9099;&lt;/td&gt;
&lt;td&gt;Esc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⇪&lt;/td&gt;
&lt;td&gt;&amp;amp;#8682;&lt;/td&gt;
&lt;td&gt;Caps lock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⏏&lt;/td&gt;
&lt;td&gt;&amp;amp;#9167;&lt;/td&gt;
&lt;td&gt;Eject&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;↵&lt;/td&gt;
&lt;td&gt;&amp;amp;#8629; &amp;amp;crarr;&lt;/td&gt;
&lt;td&gt;Return&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⌫&lt;/td&gt;
&lt;td&gt;&amp;amp;#9003;&lt;/td&gt;
&lt;td&gt;Delete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⌦&lt;/td&gt;
&lt;td&gt;&amp;amp;#8998;&lt;/td&gt;
&lt;td&gt;Forward Delete&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;→&lt;/td&gt;
&lt;td&gt;&amp;amp;#8594; &amp;amp;rarr;&lt;/td&gt;
&lt;td&gt;Right&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;←&lt;/td&gt;
&lt;td&gt;&amp;amp;#8592; &amp;amp;larr;&lt;/td&gt;
&lt;td&gt;Left&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;↑&lt;/td&gt;
&lt;td&gt;&amp;amp;#8593; &amp;amp;uarr;&lt;/td&gt;
&lt;td&gt;Up&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;↓&lt;/td&gt;
&lt;td&gt;&amp;amp;#8595; &amp;amp;darr;&lt;/td&gt;
&lt;td&gt;Down&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⇞&lt;/td&gt;
&lt;td&gt;&amp;amp;#8670;&lt;/td&gt;
&lt;td&gt;Page Up&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⇟&lt;/td&gt;
&lt;td&gt;&amp;amp;#8671;&lt;/td&gt;
&lt;td&gt;Page Down&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;↖&lt;/td&gt;
&lt;td&gt;&amp;amp;#8598;&lt;/td&gt;
&lt;td&gt;Home&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;↘&lt;/td&gt;
&lt;td&gt;&amp;amp;#8600;&lt;/td&gt;
&lt;td&gt;End&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⌧&lt;/td&gt;
&lt;td&gt;&amp;amp;#8999;&lt;/td&gt;
&lt;td&gt;Clear&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⇥&lt;/td&gt;
&lt;td&gt;&amp;amp;#8677;&lt;/td&gt;
&lt;td&gt;Tab&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⇤&lt;/td&gt;
&lt;td&gt;&amp;amp;#8676;&lt;/td&gt;
&lt;td&gt;Shift Tab&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;␣&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&amp;amp;#9251;&lt;/td&gt;
&lt;td&gt;Space&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="MacOS" scheme="http://garryshield.github.com/categories/MacOS/"/>
    
    
      <category term="Shortcuts" scheme="http://garryshield.github.com/tags/Shortcuts/"/>
    
  </entry>
  
  <entry>
    <title>Linux 系统服务管理器 - Systemd</title>
    <link href="http://garryshield.github.com/2016/03/24/systemd/"/>
    <id>http://garryshield.github.com/2016/03/24/systemd/</id>
    <published>2016-03-23T23:23:36.000Z</published>
    <updated>2016-02-19T23:23:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>Systemd 是 linux 系统中最新的初始化系统，大多数主流发行版要么已经采用 Systemd，要么即将在下个发布中采用。Systemd 并不是一个命令，而是一组命令，涉及到系统管理的方方面面。</p><p>Systemd 取代了 initd，成为系统的第一个进程（PID 等于 1），其他进程都是它的子进程。</p><p>查看 CentOS7 下的 <code>/etc/init.d/</code> 会发现有一个 README 文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat  /etc/init.d/README</span><br><span class="line"></span><br><span class="line">// ...</span><br><span class="line">// You are running a systemd-based OS <span class="built_in">where</span> traditional init scripts have</span><br><span class="line">// been replaced by native Systemd services files.</span><br><span class="line">// ...</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="1.-%E5%8D%95%E5%85%83-unit">1. 单元 Unit</h2><p>Unit 是 Systemd 进行任务管理的基本单位，代表所有系统能够处理的资源，这些资源通过配置文件的方式提供给 Systemd 管理。目前 Unit 有如下类型：<br><code>.service</code> 系统服务<br><code>.socket</code> Sockets<br><code>.device</code> 系统设备<br><code>.mount</code> 挂载点<br><code>.automount</code> 自动挂载点<br><code>.swap</code> 交换分区<br><code>.target</code> 启动目标<br><code>.path</code> 文件路径<br><code>.timer</code> 定时器<br><code>.snapshot</code> Systemd 快照，可以切回某个快照<br><code>.slice</code> 进程组<br><code>.scope</code> 从 Systemd 外部创建的进程</p><h4 id="1.1.-unit-%E5%88%97%E8%A1%A8">1.1. Unit 列表</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出正在运行的 Unit</span></span><br><span class="line">systemctl list-units</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有Unit，包括没有找到配置文件的或者启动失败的</span></span><br><span class="line">systemctl list-units --all</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有没有运行的 Unit</span></span><br><span class="line">systemctl list-units --all --state=inactive</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有加载失败的 Unit</span></span><br><span class="line">systemctl list-units --failed</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出所有正在运行的、类型为 service 的 Unit</span></span><br><span class="line">systemctl list-units --<span class="built_in">type</span>=service</span><br></pre></td></tr></table></figure><h4 id="1.2.-unit-%E7%9A%84%E7%8A%B6%E6%80%81">1.2. Unit 的状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示系统状态</span></span><br><span class="line">systemctl status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示单个 Unit 的状态</span></span><br><span class="line">sysystemctl status rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示 Unit 是否正在运行</span></span><br><span class="line">systemctl is-active rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示 Unit 是否处于启动失败状态</span></span><br><span class="line">systemctl is-failed rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示 Unit 服务是否建立了启动链接</span></span><br><span class="line">systemctl is-enabled rsync.service</span><br></pre></td></tr></table></figure><h4 id="1.3.-%E7%AE%A1%E7%90%86-unit">1.3. 管理 Unit</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 激活 Util</span></span><br><span class="line">systemctl <span class="built_in">enable</span> rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁止 Util</span></span><br><span class="line">systemctl <span class="built_in">disable</span> rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示单元的手册页（必须由单元文件提供）：</span></span><br><span class="line">systemctl <span class="built_in">help</span> rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 立即启动 Unit</span></span><br><span class="line">systemctl start rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 立即停止 Unit</span></span><br><span class="line">systemctl stop rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 Unit</span></span><br><span class="line">systemctl restart rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 杀死 Unit 的所有子进程</span></span><br><span class="line">systemctl <span class="built_in">kill</span> rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载 Unit 的配置文件</span></span><br><span class="line">systemctl reload rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重载所有修改过的配置文件</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示 Unit 配置文件</span></span><br><span class="line">systemctl cat rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 Unit 主配置文件，并重新加载</span></span><br><span class="line">systemctl edit --full rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 Unit 子配置文件，并重新加载</span></span><br><span class="line">systemctl edit rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示 Unit 的所有底层参数</span></span><br><span class="line">systemctl show rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示 Unit 的指定属性的值</span></span><br><span class="line">systemctl show -p CPUShares rsync.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置某个 Unit 的指定属性</span></span><br><span class="line">systemctl <span class="built_in">set</span>-property rsync.service CPUShares=500</span><br></pre></td></tr></table></figure><h2 id="2.-unit-%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">2. Unit 的配置文件</h2><p>每一个 Unit 都有一个配置文件，告诉 Systemd 怎么启动这个 Unit。<br><code>systemctl show --property=UnitPath</code> 查看按优先级从低到高显示加载目录<br>默认最先加载 <code>/etc/systemd/system/</code> 目录下的 Util。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 激活 Util</span></span><br><span class="line">systemctl <span class="built_in">enable</span> rsync.service</span><br><span class="line"><span class="comment"># 禁止 Util</span></span><br><span class="line">systemctl <span class="built_in">disable</span> rsync.service</span><br></pre></td></tr></table></figure><h4 id="2.1.-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E7%8A%B6%E6%80%81">2.1. 配置文件的状态</h4><p><code>systemctl list-unit-files</code> 命令用于列出所有配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有配置文件</span></span><br><span class="line">systemctl list-unit-files</span><br><span class="line"><span class="comment"># 列出指定类型的配置文件</span></span><br><span class="line">systemctl list-unit-files --<span class="built_in">type</span>=service</span><br></pre></td></tr></table></figure><p>这个列表显示每个配置文件的状态，一共有四种:</p><ol><li><code>enabled</code> 已建立启动链接</li><li><code>disabled</code> 没建立启动链接</li><li><code>static</code> 该配置文件没有 [Install] 部分（无法执行），只能作为其他配置文件的依赖</li><li><code>masked</code> 该配置文件被禁止建立启动链接</li></ol><h4 id="2.2.-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E6%A0%BC%E5%BC%8F">2.2. 配置文件的格式</h4><p><code>systemctl cat</code> 命令可以查看配置文件的内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">systemctl cat rsync.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=fast remote file copy program daemon</span><br><span class="line">ConditionPathExists=/etc/rsyncd.conf</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/rsync-3.1.3/bin/rsync --daemon --no-detach</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>可以看到，配置文件分成几个区块。每个区块的第一行，是用方括号表示的区别名，比如[Unit]。注意，配置文件的区块名和字段名，都是大小写敏感的。<br>每个区块内部是一些等号连接的键值对，键值对的等号两侧不能有空格。<br>以 # 开头的注释可能也能用在 unit-files 中，但是只能在新行中使用。不要在 Systemd 的参数后面使用行末注释，否则 unit 将会启动失败。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[Section]</span><br><span class="line">Directive1=value</span><br><span class="line">Directive2=value</span><br><span class="line">. . .</span><br></pre></td></tr></table></figure><h4 id="2.3.-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E5%8C%BA%E5%9D%97">2.3. 配置文件的区块</h4><p><code>[Unit]</code> 区块通常是配置文件的第一个区块，用来定义 Unit 的元数据，以及配置与其他 Unit 的关系。它的主要字段如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Description：简短描述</span><br><span class="line">Documentation：文档地址</span><br><span class="line">Requires：当前 Unit 依赖的其他 Unit，如果它们没有运行，当前 Unit 会启动失败</span><br><span class="line">Wants：与当前 Unit 配合的其他 Unit，如果它们没有运行，当前 Unit 不会启动失败</span><br><span class="line">BindsTo：与Requires类似，它指定的 Unit 如果退出，会导致当前 Unit 停止运行</span><br><span class="line">Before：如果该字段指定的 Unit 也要启动，那么必须在当前 Unit 之后启动</span><br><span class="line">After：如果该字段指定的 Unit 也要启动，那么必须在当前 Unit 之前启动</span><br><span class="line">Conflicts：这里指定的 Unit 不能与当前 Unit 同时运行</span><br><span class="line">Condition...：当前 Unit 运行必须满足的条件，否则不会运行</span><br><span class="line">Assert...：当前 Unit 运行必须满足的条件，否则会报启动失败</span><br></pre></td></tr></table></figure><p><code>[Install]</code> 通常是配置文件的最后一个区块，用来定义如何启动，以及是否开机启动。它的主要字段如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">WantedBy：它的值是一个或多个 Target，当前 Unit 激活时（enable）符号链接会放入/etc/systemd/system目录下面以 Target 名 + .wants后缀构成的子目录中</span><br><span class="line">RequiredBy：它的值是一个或多个 Target，当前 Unit 激活时，符号链接会放入/etc/systemd/system目录下面以 Target 名 + .required后缀构成的子目录中</span><br><span class="line">Alias：当前 Unit 可用于启动的别名</span><br><span class="line">Also：当前 Unit 激活（enable）时，会被同时激活的其他 Unit</span><br></pre></td></tr></table></figure><p><code>[Service]</code> 区块用来 Service 的配置，只有 Service 类型的 Unit 才有这个区块。它的主要字段如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Type：定义启动时的进程行为。它有以下几种值。</span><br><span class="line">  Type=simple：默认值，执行ExecStart指定的命令，启动主进程</span><br><span class="line">  Type=forking：以 fork 方式从父进程创建子进程，创建后父进程会立即退出</span><br><span class="line">  Type=oneshot：一次性进程，Systemd 会等当前服务退出，再继续往下执行</span><br><span class="line">  Type=dbus：当前服务通过D-Bus启动</span><br><span class="line">  Type=notify：当前服务启动完毕，会通知Systemd，再继续往下执行</span><br><span class="line">  Type=idle：若有其他任务执行完毕，当前服务才会运行</span><br><span class="line">ExecStart：启动当前服务的命令</span><br><span class="line">ExecStartPre：启动当前服务之前执行的命令</span><br><span class="line">ExecStartPost：启动当前服务之后执行的命令</span><br><span class="line">ExecReload：重启当前服务时执行的命令</span><br><span class="line">ExecStop：停止当前服务时执行的命令</span><br><span class="line">ExecStopPost：停止当其服务之后执行的命令</span><br><span class="line">RestartSec：自动重启当前服务间隔的秒数</span><br><span class="line">Restart：定义何种情况 Systemd 会自动重启当前服务，可能的值包括always（总是重启）、on-success、on-failure、on-abnormal、on-abort、on-watchdog</span><br><span class="line">TimeoutSec：定义 Systemd 停止当前服务之前等待的秒数</span><br><span class="line">Environment：指定环境变量</span><br></pre></td></tr></table></figure><p>Unit 配置文件的完整字段清单，请参考<a href="https://www.freedesktop.org/software/systemd/man/systemd.unit.html" target="_blank" rel="noopener">官方文档</a>。</p><h4 id="2.4.-%E7%9B%B4%E6%8E%A5%E4%BF%AE%E6%94%B9%E4%BA%86%E6%BA%90%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">2.4. 直接修改了源配置文件</h4><p>修改后需要 Systemd 重新加载配置文件，然后重新启动，否则修改不会生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart rsync.service</span><br></pre></td></tr></table></figure><h4 id="2.5.-%E7%9B%B4%E6%8E%A5%E7%BC%96%E8%BE%91%E5%B9%B6%E5%8A%A0%E8%BD%BD">2.5. 直接编辑并加载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl edit --full rsync.service</span><br></pre></td></tr></table></figure><h4 id="2.6.-%E6%B7%BB%E5%8A%A0%E5%AD%90%E9%85%8D%E7%BD%AE%E5%B9%B6%E5%8A%A0%E8%BD%BD">2.6. 添加子配置并加载</h4><p>如下命令会创建 <code>/etc/systemd/system/rsync.service.d/override.conf</code> 文件用来覆盖 <code>/etc/systemd/system/rsync.service</code> 中的配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl edit rsync.service</span><br></pre></td></tr></table></figure><h2 id="3.-target">3. Target</h2><p>Target 就是一个 Unit 组，包含许多相关的 Unit 。启动某个 Target 的时候，Systemd 就会启动里面所有的 Unit。从这个意义上说，Target 这个概念类似于&quot;状态点&quot;，启动某个 Target 就好比启动到某种状态。<br>传统的 init 启动模式里面，有 RunLevel 的概念，跟 Target 的作用很类似。不同的是，RunLevel 是互斥的，不可能多个 RunLevel 同时启动，但是多个 Target 可以同时启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前系统的所有 Target</span></span><br><span class="line">systemctl list-unit-files --<span class="built_in">type</span>=target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看一个 Target 包含的所有 Unit</span></span><br><span class="line">systemctl list-dependencies multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看启动时的默认 Target</span></span><br><span class="line">systemctl get-default</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置启动时的默认 Target</span></span><br><span class="line">systemctl <span class="built_in">set</span>-default multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换 Target 时，默认不关闭前一个 Target 启动的进程，</span></span><br><span class="line"><span class="comment"># systemctl isolate 命令改变这种行为，</span></span><br><span class="line"><span class="comment"># 关闭前一个 Target 里面所有不属于后一个 Target 的进程</span></span><br><span class="line">systemctl isolate multi-user.target</span><br></pre></td></tr></table></figure><p>Target 与 传统 RunLevel 的对应关系如下。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Traditional runlevel      New target name     Symbolically linked to...</span><br><span class="line">Runlevel 0           |    runlevel0.target -&gt; poweroff.target</span><br><span class="line">Runlevel 1           |    runlevel1.target -&gt; rescue.target</span><br><span class="line">Runlevel 2           |    runlevel2.target -&gt; multi-user.target</span><br><span class="line">Runlevel 3           |    runlevel3.target -&gt; multi-user.target</span><br><span class="line">Runlevel 4           |    runlevel4.target -&gt; multi-user.target</span><br><span class="line">Runlevel 5           |    runlevel5.target -&gt; graphical.target</span><br><span class="line">Runlevel 6           |    runlevel6.target -&gt; reboot.target</span><br></pre></td></tr></table></figure><h2 id="4.-%E6%97%A5%E5%BF%97%E7%AE%A1%E7%90%86">4. 日志管理</h2><p>Systemd 统一管理所有 Unit 的启动日志。带来的好处就是，可以只用 <code>journalctl</code> 一个命令，查看所有日志（内核日志和应用日志）。日志的配置文件是 <code>/etc/systemd/journald.conf</code>。<br><code>journalctl</code> 用法如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看所有日志（默认情况下 ，只保存本次启动的日志）</span></span><br><span class="line">journalctl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看内核日志（不显示应用日志）</span></span><br><span class="line">journalctl -k</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看系统本次启动的日志</span></span><br><span class="line">journalctl -b</span><br><span class="line">journalctl -b -0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看上一次启动的日志（需更改设置）</span></span><br><span class="line">journalctl -b -1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定时间的日志</span></span><br><span class="line">journalctl --since=<span class="string">"2012-10-30 18:17:16"</span></span><br><span class="line">journalctl --since <span class="string">"20 min ago"</span></span><br><span class="line">journalctl --since yesterday</span><br><span class="line">journalctl --since <span class="string">"2015-01-10"</span> --until <span class="string">"2015-01-11 03:00"</span></span><br><span class="line">journalctl --since 09:00 --until <span class="string">"1 hour ago"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示尾部的最新10行日志</span></span><br><span class="line">journalctl -n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示尾部指定行数的日志</span></span><br><span class="line">journalctl -n 20</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时滚动显示最新日志</span></span><br><span class="line">journalctl -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定服务的日志</span></span><br><span class="line">journalctl /usr/lib/systemd/systemd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定进程的日志</span></span><br><span class="line">journalctl _PID=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看某个路径的脚本的日志</span></span><br><span class="line">journalctl /usr/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定用户的日志</span></span><br><span class="line">journalctl _UID=33 --since today</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看某个 Unit 的日志</span></span><br><span class="line">journalctl -u rsync.service</span><br><span class="line">journalctl -u rsync.service --since today</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时滚动显示 Unit 的最新日志</span></span><br><span class="line">journalctl -u rsync.service -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 合并显示多个 Unit 的日志</span></span><br><span class="line">journalctl -u rsync.service -u php-fpm.service --since today</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定优先级（及其以上级别）的日志，共有8级</span></span><br><span class="line"><span class="comment"># 0: emerg</span></span><br><span class="line"><span class="comment"># 1: alert</span></span><br><span class="line"><span class="comment"># 2: crit</span></span><br><span class="line"><span class="comment"># 3: err</span></span><br><span class="line"><span class="comment"># 4: warning</span></span><br><span class="line"><span class="comment"># 5: notice</span></span><br><span class="line"><span class="comment"># 6: info</span></span><br><span class="line"><span class="comment"># 7: debug</span></span><br><span class="line">journalctl -p err -b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志默认分页输出，--no-pager 改为正常的标准输出</span></span><br><span class="line">journalctl --no-pager</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以 JSON 格式（单行）输出</span></span><br><span class="line">journalctl -b -u rsync.service -o json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以 JSON 格式（多行）输出，可读性更好</span></span><br><span class="line">journalctl -b -u rsync.serviceqq</span><br><span class="line"> -o json-pretty</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示日志占据的硬盘空间</span></span><br><span class="line">journalctl --disk-usage</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定日志文件占据的最大空间</span></span><br><span class="line">journalctl --vacuum-size=1G</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定日志文件保存多久</span></span><br><span class="line">journalctl --vacuum-time=1years</span><br></pre></td></tr></table></figure><h2 id="5.-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4">5. 系统管理命令</h2><h4 id="5.1.-systemctl">5.1. systemctl</h4><p><code>systemctl</code> 是 Systemd 的主命令，用于管理系统。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令查看 Systemd 的版本</span></span><br><span class="line">systemctl --version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">systemctl reboot</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出系统并关闭电源</span></span><br><span class="line">systemctl poweroff</span><br><span class="line"></span><br><span class="line"><span class="comment"># CPU停止工作</span></span><br><span class="line">systemctl halt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 待机</span></span><br><span class="line">systemctl <span class="built_in">suspend</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 休眠</span></span><br><span class="line">systemctl hibernate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 休眠并待机</span></span><br><span class="line">systemctl hybrid-sleep</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动进入救援模式</span></span><br><span class="line">systemctl rescue</span><br></pre></td></tr></table></figure><h4 id="5.2.-systemd-analyze">5.2. systemd-analyze</h4><p><code>systemd-analyze</code> 命令用于查看启动耗时。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看启动耗时</span></span><br><span class="line">systemd-analyze                                                                                       </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看每个服务的启动耗时</span></span><br><span class="line">systemd-analyze blame</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示瀑布状的启动过程流</span></span><br><span class="line">systemd-analyze critical-chain</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示指定服务的启动流</span></span><br><span class="line">systemd-analyze critical-chain atd.service</span><br></pre></td></tr></table></figure><h4 id="5.3.-hostnamectl">5.3. hostnamectl</h4><p><code>hostnamectl</code> 命令用于查看本地化设置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示当前主机的信息</span></span><br><span class="line">hostnamectl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置主机名。</span></span><br><span class="line">hostnamectl <span class="built_in">set</span>-hostname rhel7</span><br></pre></td></tr></table></figure><h4 id="5.4.-localectl">5.4. localectl</h4><p><code>localectl</code> 命令用于查看本地化设置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看本地化设置</span></span><br><span class="line">localectl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置本地化参数。</span></span><br><span class="line">localectl <span class="built_in">set</span>-locale LANG=en_GB.utf8</span><br><span class="line">localectl <span class="built_in">set</span>-keymap en_GB</span><br></pre></td></tr></table></figure><h4 id="5.5.-timedatectl">5.5. timedatectl</h4><p><code>timedatectl</code> 命令用于查看当前时区设置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前时区设置</span></span><br><span class="line">timedatectl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示所有可用的时区</span></span><br><span class="line">timedatectl list-timezones            </span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置当前时区</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone America/New_York</span><br><span class="line">timedatectl <span class="built_in">set</span>-time YYYY-MM-DD</span><br><span class="line">timedatectl <span class="built_in">set</span>-time HH:MM:SS</span><br></pre></td></tr></table></figure><h4 id="5.6.-loginctl">5.6. loginctl</h4><p><code>loginctl</code> 命令用于查看当前登录的用户。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出当前session</span></span><br><span class="line">loginctl list-sessions</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出当前登录用户</span></span><br><span class="line">loginctl list-users</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出显示指定用户的信息</span></span><br><span class="line">loginctl show-user root</span><br></pre></td></tr></table></figure><h2 id="6.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">6. 参考链接</h2><p>· <a href="https://github.com/systemd/systemd" target="_blank" rel="noopener">Systemd GitHub</a><br>· <a href="https://www.freedesktop.org/wiki/Software/systemd/" target="_blank" rel="noopener">Systemd Office Site</a><br>· <a href="https://www.freedesktop.org/software/systemd/man/systemd.unit.html" target="_blank" rel="noopener">Systemd Unit Man</a><br>· <a href="https://www.digitalocean.com/community/tutorials/how-to-use-systemctl-to-manage-systemd-services-and-units" target="_blank" rel="noopener">How To Use Systemd</a><br>· <a href="https://wiki.archlinux.org/index.php/Systemd" target="_blank" rel="noopener">Archlinux Systemd</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Systemd 是 linux 系统中最新的初始化系统，大多数主流发行版要么已经采用 Systemd，要么即将在下个发布中采用。Systemd 并不是一个命令，而是一组命令，涉及到系统管理的方方面面。&lt;/p&gt;
&lt;p&gt;Systemd 取代了 initd，成为系统的第一个进程（PID 等于 1），其他进程都是它的子进程。&lt;/p&gt;
&lt;p&gt;查看 CentOS7 下的 &lt;code&gt;/etc/init.d/&lt;/code&gt; 会发现有一个 README 文件。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;cat  /etc/init.d/README&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// You are running a systemd-based OS &lt;span class=&quot;built_in&quot;&gt;where&lt;/span&gt; traditional init scripts have&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// been replaced by native Systemd services files.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// ...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://garryshield.github.com/categories/Linux/"/>
    
    
      <category term="Systemd" scheme="http://garryshield.github.com/tags/Systemd/"/>
    
  </entry>
  
  <entry>
    <title>查看 Linux 内核版本和发行版信息</title>
    <link href="http://garryshield.github.com/2016/02/20/linux-version/"/>
    <id>http://garryshield.github.com/2016/02/20/linux-version/</id>
    <published>2016-02-19T23:23:36.000Z</published>
    <updated>2016-02-19T23:23:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>Linux 有众多发行版，在编辑通用脚本等工作时通常需要检测：</p><ul><li>内核版本 Kernel Version</li><li>发行版信息 Distribution Information</li><li>...</li></ul><p>来兼容它们。这里先挖个坑汇总一些基本命令和检测脚本，方便以后使用。</p><a id="more"></a><h2 id="1.-%E5%86%85%E6%A0%B8%E7%89%88%E6%9C%AC">1. 内核版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br><span class="line">// Linux localhost.localdomain 3.10.0-862.el7.x86_64 <span class="comment">#1 SMP Fri Apr 20 16:44:24 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line"></span><br><span class="line">uname -r</span><br><span class="line">// 3.10.0-862.el7.x86_64</span><br></pre></td></tr></table></figure><h2 id="2.-%E5%8F%91%E8%A1%8C%E7%89%88%E4%BF%A1%E6%81%AF">2. 发行版信息</h2><p>发行版信息查看命令和具体的发行版本有关，可以通过如下方式依次判断：</p><h4 id="2.1.-%2Fetc%2F*-release-%E6%96%87%E4%BB%B6">2.1. <code>/etc/*-release</code> 文件</h4><p>CentOS7 为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">ls /etc/ | grep <span class="string">'release$'</span></span><br><span class="line">// centos-release</span><br><span class="line">// os-release</span><br><span class="line">// redhat-release</span><br><span class="line">// system-release</span><br><span class="line"></span><br><span class="line">cat /etc/centos-release</span><br><span class="line">// CentOS Linux release 7.5.1804 (Core)</span><br><span class="line"></span><br><span class="line">cat /etc/os-release</span><br><span class="line">// NAME=<span class="string">"CentOS Linux"</span></span><br><span class="line">// VERSION=<span class="string">"7 (Core)"</span></span><br><span class="line">// ID=<span class="string">"centos"</span></span><br><span class="line">// ID_LIKE=<span class="string">"rhel fedora"</span></span><br><span class="line">// VERSION_ID=<span class="string">"7"</span></span><br><span class="line">// PRETTY_NAME=<span class="string">"CentOS Linux 7 (Core)"</span></span><br><span class="line">// ANSI_COLOR=<span class="string">"0;31"</span></span><br><span class="line">// CPE_NAME=<span class="string">"cpe:/o:centos:centos:7"</span></span><br><span class="line">// HOME_URL=<span class="string">"https://www.centos.org/"</span></span><br><span class="line">// BUG_REPORT_URL=<span class="string">"https://bugs.centos.org/"</span></span><br><span class="line">// </span><br><span class="line">// CENTOS_MANTISBT_PROJECT=<span class="string">"CentOS-7"</span></span><br><span class="line">// CENTOS_MANTISBT_PROJECT_VERSION=<span class="string">"7"</span></span><br><span class="line">// REDHAT_SUPPORT_PRODUCT=<span class="string">"centos"</span></span><br><span class="line">// REDHAT_SUPPORT_PRODUCT_VERSION=<span class="string">"7"</span></span><br></pre></td></tr></table></figure><!--more--><h4 id="2.2.-lsb_release-%E5%91%BD%E4%BB%A4">2.2. <code>lsb_release</code> 命令</h4><p>部分系统默认没有安装 lsb_release，要手动安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install -y redhat-lsb</span><br><span class="line">lsb_release -a</span><br><span class="line">// LSB Version::core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch</span><br><span class="line">// Distributor ID:CentOS</span><br><span class="line">// Description:CentOS Linux release 7.5.1804 (Core)</span><br><span class="line">// Release:7.5.1804</span><br><span class="line">// Codename:Core</span><br></pre></td></tr></table></figure><h4 id="2.3.-%2Fproc%2Fversion-%E6%96%87%E4%BB%B6">2.3. <code>/proc/version</code> 文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/version</span><br><span class="line">// Linux version 3.10.0-862.el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-28) (GCC) ) <span class="comment">#1 SMP Fri Apr 20 16:44:24 UTC 2018</span></span><br></pre></td></tr></table></figure><h4 id="2.4.-hostnamectl-%E5%91%BD%E4%BB%A4">2.4. <code>hostnamectl</code> 命令</h4><p>部分发行版使用了 Systemd，可以 <code>hostnamectl</code> 命令查看查看当前主机的信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl</span><br><span class="line"></span><br><span class="line">//    Static hostname: localhost.localdomain</span><br><span class="line">//          Icon name: computer-vm</span><br><span class="line">//            Chassis: vm</span><br><span class="line">//         Machine ID: 085c99725433460e9b2a00df4c364940</span><br><span class="line">//            Boot ID: f6c3ff7f068d41b0b1aaded0a87bf70e</span><br><span class="line">//     Virtualization: vmware</span><br><span class="line">//   Operating System: CentOS Linux 7 (Core)</span><br><span class="line">//        CPE OS Name: cpe:/o:centos:centos:7</span><br><span class="line">//             Kernel: Linux 3.10.0-862.el7.x86_64</span><br><span class="line">//       Architecture: x86-64</span><br></pre></td></tr></table></figure><h2 id="3.-%E6%A3%80%E6%B5%8B%E8%84%9A%E6%9C%AC">3. 检测脚本</h2><h4 id="3.1.-sh">3.1. sh</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># Detects which OS and if it is Linux then it will detect which Linux Distribution.</span></span><br><span class="line"></span><br><span class="line">OS=`uname -s`</span><br><span class="line">REV=`uname -r`</span><br><span class="line">MACH=`uname -m`</span><br><span class="line"></span><br><span class="line">GetVersionFromFile()</span><br><span class="line">&#123;</span><br><span class="line">VERSION=`cat <span class="variable">$1</span> | tr <span class="string">"\n"</span> <span class="string">' '</span> | sed s/.*VERSION.*=\ // `</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;OS&#125;</span>"</span> = <span class="string">"SunOS"</span> ] ; <span class="keyword">then</span></span><br><span class="line">OS=Solaris</span><br><span class="line">ARCH=`uname -p`</span><br><span class="line">OSSTR=<span class="string">"<span class="variable">$&#123;OS&#125;</span> <span class="variable">$&#123;REV&#125;</span>(<span class="variable">$&#123;ARCH&#125;</span> `uname -v`)"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$&#123;OS&#125;</span>"</span> = <span class="string">"AIX"</span> ] ; <span class="keyword">then</span></span><br><span class="line">OSSTR=<span class="string">"<span class="variable">$&#123;OS&#125;</span> `oslevel` (`oslevel -r`)"</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">"<span class="variable">$&#123;OS&#125;</span>"</span> = <span class="string">"Linux"</span> ] ; <span class="keyword">then</span></span><br><span class="line">KERNEL=`uname -r`</span><br><span class="line"><span class="keyword">if</span> [ -f /etc/redhat-release ] ; <span class="keyword">then</span></span><br><span class="line">DIST=<span class="string">'RedHat'</span></span><br><span class="line">PSUEDONAME=`cat /etc/redhat-release | sed s/.*\(// | sed s/\)//`</span><br><span class="line">REV=`cat /etc/redhat-release | sed s/.*release\ // | sed s/\ .*//`</span><br><span class="line"><span class="keyword">elif</span> [ -f /etc/SUSE-release ] ; <span class="keyword">then</span></span><br><span class="line">DIST=`cat /etc/SUSE-release | tr <span class="string">"\n"</span> <span class="string">' '</span>| sed s/VERSION.*//`</span><br><span class="line">REV=`cat /etc/SUSE-release | tr <span class="string">"\n"</span> <span class="string">' '</span> | sed s/.*=\ //`</span><br><span class="line"><span class="keyword">elif</span> [ -f /etc/mandrake-release ] ; <span class="keyword">then</span></span><br><span class="line">DIST=<span class="string">'Mandrake'</span></span><br><span class="line">PSUEDONAME=`cat /etc/mandrake-release | sed s/.*\(// | sed s/\)//`</span><br><span class="line">REV=`cat /etc/mandrake-release | sed s/.*release\ // | sed s/\ .*//`</span><br><span class="line"><span class="keyword">elif</span> [ -f /etc/debian_version ] ; <span class="keyword">then</span></span><br><span class="line">DIST=<span class="string">"Debian `cat /etc/debian_version`"</span></span><br><span class="line">REV=<span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ -f /etc/UnitedLinux-release ] ; <span class="keyword">then</span></span><br><span class="line">DIST=<span class="string">"<span class="variable">$&#123;DIST&#125;</span>[`cat /etc/UnitedLinux-release | tr "</span>\n<span class="string">" ' ' | sed s/VERSION.*//`]"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">OSSTR=<span class="string">"<span class="variable">$&#123;OS&#125;</span> <span class="variable">$&#123;DIST&#125;</span> <span class="variable">$&#123;REV&#125;</span>(<span class="variable">$&#123;PSUEDONAME&#125;</span> <span class="variable">$&#123;KERNEL&#125;</span> <span class="variable">$&#123;MACH&#125;</span>)"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;OSSTR&#125;</span></span><br></pre></td></tr></table></figure><h4 id="3.2.-python">3.2. python</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// python3</span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget https://raw.githubusercontent.com/python/cpython/master/Lib/platform.py</span><br><span class="line">chmod +x platform.py</span><br><span class="line">./platform.py</span><br><span class="line">// Linux-4.9.87-linuxkit-aufs-x86_64-with-centos-7.5.1804-Core</span><br><span class="line"></span><br><span class="line">// python2</span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">wget https://raw.githubusercontent.com/python/cpython/2.7/Lib/platform.py</span><br><span class="line">chmod +x platform.py</span><br><span class="line">./platform.py</span><br><span class="line">// Linux-3.10.0-862.el7.x86_64-x86_64-with-centos-7.5.1804-Core</span><br></pre></td></tr></table></figure><h2 id="4.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">4. 参考链接</h2><p>· <a href="https://www.novell.com/coolsolutions/feature/11251.html" target="_blank" rel="noopener">Detecting Underlying Linux Distro</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux 有众多发行版，在编辑通用脚本等工作时通常需要检测：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内核版本 Kernel Version&lt;/li&gt;
&lt;li&gt;发行版信息 Distribution Information&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;来兼容它们。这里先挖个坑汇总一些基本命令和检测脚本，方便以后使用。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://garryshield.github.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://garryshield.github.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>文件同步工具 - Rsync</title>
    <link href="http://garryshield.github.com/2016/01/04/rsync/"/>
    <id>http://garryshield.github.com/2016/01/04/rsync/</id>
    <published>2016-01-04T08:45:01.000Z</published>
    <updated>2016-01-04T08:45:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1.-rsync-%E7%AE%80%E4%BB%8B">1. rsync 简介</h2><p>rsync（remote synchronize）是 Liunx/Unix 下的一个远程数据同步工具。它可通过 LAN/WAN 快速同步多台主机间的文件和目录，并适当利用 rsync 算法（差分编码）以减少数据的传输。</p><p>rsync 算法并不是每一次都整份传输，而是只传输两个文件的不同部分，因此其传输速度相当快。</p><p>除此之外，rsync 可拷贝、显示目录属性，以及拷贝文件，并可选择性的压缩以及递归拷贝。</p><p>rsync 的目的是实现本地主机和远程主机上的文件同步(包括本地推到远程，远程拉到本地两种同步方式)，也可以实现本地不同路径下文件的同步，但不能实现远程路径1到远程路径2之间的同步。</p><a id="more"></a><h2 id="2.-%E5%AE%89%E8%A3%85">2. 安装</h2><p>无论是服务器端还是客户端都是同一个软件包。<br>Linux 下安装首先从<a href="https://rsync.samba.org/" target="_blank" rel="noopener">rsync 官网</a>下载对应的安装包。也可以使用 <code>wget</code> 进行下载，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.samba.org/pub/rsync/rsync-3.1.3.tar.gz</span><br></pre></td></tr></table></figure><p>安装包下载完毕后，我们开始解压并安装。如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf rsync-3.1.3.tar.gz</span><br><span class="line"><span class="built_in">cd</span> rsync-3.1.3</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>使用 systemd 管理 rsync daemon</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cp ./packaging/systemd/rsync.service /usr/lib/systemd/system/</span><br><span class="line"></span><br><span class="line">// 修改 rsync.service 如下：</span><br><span class="line">// [Unit]</span><br><span class="line">// Description=fast remote file copy program daemon</span><br><span class="line">// ConditionPathExists=/etc/rsyncd.conf</span><br><span class="line">// </span><br><span class="line">// [Service]</span><br><span class="line">// ExecStart=/usr/<span class="built_in">local</span>/rsync-3.1.3/bin/rsync --daemon --no-detach</span><br><span class="line">// </span><br><span class="line">// [Install]</span><br><span class="line">// WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> rsync</span><br></pre></td></tr></table></figure><p>rsync 源码安装会把 rsync 默认安装到 <code>/usr/local/</code> 目录下，可以通过如下命令查看全部编辑选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure –<span class="built_in">help</span></span><br></pre></td></tr></table></figure><h2 id="3.-rsync-%E5%91%BD%E4%BB%A4%E5%8F%82%E6%95%B0">3. rsync 命令参数</h2><p>rsync安装完毕后，我们来查看下 rsync 命令的帮助，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync –<span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>常用参数:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-v, --verbose 详细模式输出</span><br><span class="line">-a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性不变</span><br><span class="line">-z, --compress 对备份的文件在传输时进行压缩处理</span><br><span class="line">--exclude 排除不需要传输的文件</span><br><span class="line">--exclude-from 从文件中读取排除规则</span><br><span class="line">--existing 只更新目标端已存在的文件</span><br><span class="line">--ignore-existing 只是更新目标端不存在的文件</span><br><span class="line">--remove-source-files  删除 SRC 中已经更新成功的文件</span><br><span class="line">--delete：删除 DEST 中存在而在 SRC 中没有的文件</span><br></pre></td></tr></table></figure><h2 id="4.-rsync-%E4%B8%89%E7%A7%8D%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F">4. rsync 三种工作模式</h2><p>rsync 的七种基本命令格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rsync [OPTION]... SRC [SRC]... DEST</span><br><span class="line">rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST</span><br><span class="line">rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST</span><br><span class="line">rsync [OPTION]... SRC [SRC]... rsync://[USER@]HOST[:PORT]/DEST</span><br><span class="line">rsync [OPTION]... [USER@]HOST:SRC [DEST]</span><br><span class="line">rsync [OPTION]... [USER@]HOST::SRC [DEST]</span><br><span class="line">rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]</span><br></pre></td></tr></table></figure><p>七种基本命令包括三种工作方式：</p><ol><li>本地同步模式</li><li>远程 shell 模式</li><li>rsync daemon 模式</li></ol><p>前两者是使用管道进行通信和传输数据的，后者是通过网络套接字进行通信和传输数据的，rsync daemon 模式要求在服务器端必须已经运行好 rsync 且监听在指定端口上。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">本地同步模式: </span><br><span class="line">  rsync [OPTION]... SRC [SRC]... DEST</span><br><span class="line"></span><br><span class="line">远程 shell 模式:</span><br><span class="line">  推送:   </span><br><span class="line">    rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST</span><br><span class="line">  拉取: </span><br><span class="line">    rsync [OPTION]... [USER@]HOST:SRC [DEST]</span><br><span class="line"></span><br><span class="line">rsync daemon 模式:</span><br><span class="line">  推送:</span><br><span class="line">    rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST</span><br><span class="line">    rsync [OPTION]... SRC [SRC]... rsync://[USER@]HOST[:PORT]/DEST</span><br><span class="line">  拉取:</span><br><span class="line">    rsync [OPTION]... [USER@]HOST::SRC [DEST]</span><br><span class="line">    rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]</span><br></pre></td></tr></table></figure><p><b>第一个路径参数一定是源文件路径，即作为同步基准的一方，可以同时指定多个源文件路径。最后一个路径参数则是目标文件路径，也就是待同步方。<br>路径的格式可以是本地路径，也可以是使用 user@host:path 或 user@host::path 的远程路径，如果主机和 path 路径之间使用单个冒号隔开，表示使用的是远程 shell 模式，而使用双冒号隔开的则表示的是连接rsync daemon 模式。另外，使用 rsync daemon 模式时，还提供了URL格式的路径表述方式 rsync://user@host/path。<br></b><br><b>如果仅有一个 SRC 或 DEST 参数，则将以类似于 <kbd>ls -l</kbd> 的方式列出源文件列表而不是同步文件。<br></b></p><p>另外一定要注意的一点是，源路径如果是一个目录的话，带上尾随斜线和不带尾随斜线是不一样的，不带尾随斜线表示的是整个目录包括目录本身，带上尾随斜线表示的是目录中的文件，不包括目录本身。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rsync -a /src /dest</span><br><span class="line">rsync -a /src/ /dest</span><br></pre></td></tr></table></figure><p>第一个命令会在 /dest 目录下创建 src 目录，而第二个命令不会在 /dest 目录下创建 src 目录，源路径 /src/ 中的所有文件都直接放在 /dest 目录下。</p><h2 id="5.-%E6%9C%AC%E5%9C%B0%E5%90%8C%E6%AD%A5%E6%A8%A1%E5%BC%8F">5. 本地同步模式</h2><p>此模式的命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">本地同步模式: </span><br><span class="line">  rsync [OPTION]... SRC [SRC]... DEST</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz /src /dest</span><br></pre></td></tr></table></figure><h2 id="6.-%E8%BF%9C%E7%A8%8B-shell-%E6%A8%A1%E5%BC%8F">6. 远程 shell 模式</h2><p>此模式的命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">远程 shell 模式:</span><br><span class="line">  推送:   </span><br><span class="line">    rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST</span><br><span class="line">  拉取: </span><br><span class="line">    rsync [OPTION]... [USER@]HOST:SRC [DEST]</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">推送:   </span><br><span class="line">rsync -avz -e <span class="string">"ssh -p 22"</span> /src user@192.168.199.247:/dest</span><br><span class="line">拉取: </span><br><span class="line">rsync -avz -e <span class="string">"ssh -p 22"</span> user@192.168.199.247:/src /dest</span><br></pre></td></tr></table></figure><h2 id="7.-rsync-daemon-%E6%A8%A1%E5%BC%8F">7. rsync daemon 模式</h2><p>此模式的命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rsync daemon 模式:</span><br><span class="line">  推送:</span><br><span class="line">    rsync [OPTION]... SRC [SRC]... [USER@]HOST::DEST</span><br><span class="line">    rsync [OPTION]... SRC [SRC]... rsync://[USER@]HOST[:PORT]/DEST</span><br><span class="line">  拉取:</span><br><span class="line">    rsync [OPTION]... [USER@]HOST::SRC [DEST]</span><br><span class="line">    rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]</span><br></pre></td></tr></table></figure><p>连接命令有两种类型：</p><ol><li>一种是 rsync 风格使用双冒号的 <code>[USER@]HOST::TARGET</code>，如果想要指定端口号，则需要使用选项 <code>--port</code>。</li><li>一种是 url 风格的 <code>rsync://[USER@]HOST[:PORT]/TARGET</code></li></ol><p>上述语法中，其中 TARGET 代表的是模块名，而不是真的文件系统中的路径。</p><h4 id="7.1.-rsyncd.conf-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">7.1. rsyncd.conf 配置文件</h4><p>参见<a href="https://download.samba.org/pub/rsync/rsyncd.conf.html" target="_blank" rel="noopener">官方的配置说明</a>了解全部配置项。</p><p>在服务器端启动 rsync daemon 的命令为 <code>rsync --daemon</code>，可能通过 <code>rsync --daemon --help</code> 查看其选项。<br>服务器端需要两个配置文件：rsyncd.conf 和 rsyncd.secrets。<br>rsyncd.conf 是 rsync daemon 的主配置文件，rsyncd.secrets 用于存储 rsync 用户名和密码。</p><p>MacOS 下默认配置文件为 <code>/usr/local/etc/rsyncd.conf</code><br>Linux 下默认配置文件为 <code>etc/rsyncd.conf</code><br>如果文件不存在，可以手动创建，也可以通过 <code>--config=FILE</code> 选项来指定。</p><p>rsyncd.conf 配置实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"># 全屏配置</span><br><span class="line">port = 873    # rsync 端口，默认873</span><br><span class="line">uid = root</span><br><span class="line">gid = root</span><br><span class="line">user chroot = no</span><br><span class="line">max connections = 200   # 0 表示没有限制</span><br><span class="line">timeout = 600   # 0 表示永远等待</span><br><span class="line">pid file = /var/run/rsyncd.pid</span><br><span class="line">lock file = /var/run/rsyncd.lock</span><br><span class="line">log file = /var/run/rsyncd.log</span><br><span class="line"></span><br><span class="line"># 模块配置</span><br><span class="line">[www]   # 模块ID</span><br><span class="line">path = /var/www/    # 模块路径</span><br><span class="line">uid = www   # 模块路径的最终所属用户名</span><br><span class="line">gid = www   # 模块路径的最终所属用户组</span><br><span class="line">ignore errors</span><br><span class="line">read only = no    # yes：不能上传，no：能上传</span><br><span class="line">write only = no   # yes：不能下载，no：能下载</span><br><span class="line">list = yes    # 客户端请求显示模块列表时，该模块是否显示出来</span><br><span class="line">hosts allow = 10.0.0.0/24   # 指定允许连接到该模块的机器，多个用空格隔开</span><br><span class="line">hosts deny = 0.0.0.0/32   # 指定不允许连接到该模块的机器</span><br><span class="line">auth users = rsync_www    # 指定允许链接到该模块的用户名列表，多个用空格隔开</span><br><span class="line">secrets file = /etc/rsyncd.secrets   # 指定一个包含定义用户名:密码对的文件</span><br><span class="line">comment = rsync deamon www module   # 模块描述</span><br><span class="line"></span><br><span class="line"># 其它模块</span><br><span class="line"># ...</span><br></pre></td></tr></table></figure><h4 id="7.2.-rsyncd.secrets-%E6%A0%BC%E5%BC%8F">7.2. rsyncd.secrets 格式</h4><p>文件的权限一定要是600，否则客户端将不能连接服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user:password</span><br><span class="line">user1:password1</span><br></pre></td></tr></table></figure><h4 id="7.3.-%E6%B5%8B%E8%AF%95">7.3. 测试</h4><p>服务端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">useradd -r -s /sbin/nologin www</span><br><span class="line">mkdir /var/www</span><br><span class="line">chown -R www:www /var/www</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"rsync_www:123456"</span> &gt;&gt; /etc/rsyncd.secrets</span><br><span class="line">chmod 600 /etc/rsyncd.secrets</span><br><span class="line"></span><br><span class="line">// rsync --deamon</span><br><span class="line">systemctl start rsync</span><br></pre></td></tr></table></figure><p>客户端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">useradd -r -s /sbin/nologin www</span><br><span class="line">mkdir /var/www</span><br><span class="line">touch /var/www/01.txt</span><br><span class="line">chown -R www:www /var/www</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"123456"</span> &gt;&gt; /etc/rsyncd.secrets</span><br><span class="line">chmod 600 /etc/rsyncd.secrets</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /var/www</span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表服务端文件</span></span><br><span class="line">rsync rsync_www@172.17.0.2::www --password-file=/etc/rsyncd.secrets</span><br><span class="line"><span class="comment"># 上传</span></span><br><span class="line">rsync -avz ./ rsync_www@172.17.0.2::www --password-file=/etc/rsyncd.secrets</span><br></pre></td></tr></table></figure><h2 id="8.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">8. 参考链接</h2><p>· <a href="https://rsync.samba.org/" target="_blank" rel="noopener">rsync</a><br>· <a href="https://download.samba.org/pub/rsync/rsyncd.conf.html" target="_blank" rel="noopener">rsyncd.conf man page</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1.-rsync-%E7%AE%80%E4%BB%8B&quot;&gt;1. rsync 简介&lt;/h2&gt;
&lt;p&gt;rsync（remote synchronize）是 Liunx/Unix 下的一个远程数据同步工具。它可通过 LAN/WAN 快速同步多台主机间的文件和目录，并适当利用 rsync 算法（差分编码）以减少数据的传输。&lt;/p&gt;
&lt;p&gt;rsync 算法并不是每一次都整份传输，而是只传输两个文件的不同部分，因此其传输速度相当快。&lt;/p&gt;
&lt;p&gt;除此之外，rsync 可拷贝、显示目录属性，以及拷贝文件，并可选择性的压缩以及递归拷贝。&lt;/p&gt;
&lt;p&gt;rsync 的目的是实现本地主机和远程主机上的文件同步(包括本地推到远程，远程拉到本地两种同步方式)，也可以实现本地不同路径下文件的同步，但不能实现远程路径1到远程路径2之间的同步。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://garryshield.github.com/categories/Linux/"/>
    
    
      <category term="Rsync" scheme="http://garryshield.github.com/tags/Rsync/"/>
    
  </entry>
  
  <entry>
    <title>使用 Nvm 管理 Node.js</title>
    <link href="http://garryshield.github.com/2015/12/05/nvm/"/>
    <id>http://garryshield.github.com/2015/12/05/nvm/</id>
    <published>2015-12-04T17:29:57.000Z</published>
    <updated>2015-12-04T17:29:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>同时开发多个项目，项目的需求不同，进而依赖不同版本的 Node.js 运行环境。<a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">nvm</a> 版本管理工具能够很方便的切换，而不用每次全局修改。</p><h2 id="1.-%E5%AE%89%E8%A3%85-%26-%E6%9B%B4%E6%96%B0">1. 安装 &amp; 更新</h2><p>建议先删除系统安装的 node 和 npm，完全使用 nvm 来管理。<br>以 MacOS 为例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">brew uninstall node; </span><br><span class="line">// or `brew uninstall --force node` <span class="built_in">which</span> removes all versions</span><br><span class="line">brew prune;</span><br><span class="line">rm -rf /opt/<span class="built_in">local</span>/bin/node /opt/<span class="built_in">local</span>/include/node /opt/<span class="built_in">local</span>/lib/node_modules</span><br><span class="line">rm -rf /usr/<span class="built_in">local</span>/bin/npm /usr/<span class="built_in">local</span>/share/man/man1/node.1 /usr/<span class="built_in">local</span>/lib/dtrace/node.d</span><br><span class="line">rm -rf ~/.npm ~/.npmrc ~/.node-gyp</span><br></pre></td></tr></table></figure><p>安装 &amp; 升级 nvm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br><span class="line">// or</span><br><span class="line">wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2.-%E4%BD%BF%E7%94%A8">2. 使用</h2><h4 id="2.1.-%E4%B8%8B%E8%BD%BD-%26-%E5%AE%89%E8%A3%85">2.1. 下载 &amp; 安装</h4><p>注：写文章时最新版本是 v10.7.0，最新稳定版本是 v8.11.3。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">// 安装最新版 node</span><br><span class="line">nvm install node</span><br><span class="line"></span><br><span class="line">// 安装稳定（LTS）版本</span><br><span class="line">nvm install --lts</span><br><span class="line"></span><br><span class="line">// nvm 遵守语义化版本命名规则。例如，你想安装 v10.7.0，可以运行：</span><br><span class="line">nvm install 10</span><br><span class="line"></span><br><span class="line">// 安装 v8.11.3 并同时安装 v10.7.0 下已安装的包</span><br><span class="line">nvm install 8 --reinstall-packages-from=10</span><br><span class="line"></span><br><span class="line">// 如果已经安装过 v8.11.3 则下面两行实现同样的效果</span><br><span class="line">nvm use 8</span><br><span class="line">nvm reinstall-packages 10</span><br><span class="line"></span><br><span class="line">// 安装 v8.11.3 后同时升级到最新的 npm</span><br><span class="line">nvm install 8 --latest-npm</span><br><span class="line"></span><br><span class="line">// 如果已经安装过 v8.11.3 则下面两行实现同样的效果</span><br><span class="line">nvm use 8</span><br><span class="line">nvm install-latest-npm</span><br><span class="line"></span><br><span class="line">// 下面两行实现同样的效果</span><br><span class="line">nvm use 8</span><br><span class="line">npm install -g npm</span><br></pre></td></tr></table></figure><h4 id="2.2.-%E6%9F%A5%E7%9C%8B%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E8%B7%AF%E5%BE%84">2.2. 查看指定版本路径</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nvm which current</span><br><span class="line"><span class="comment">// ~/.nvm/versions/node/v10.7.0/bin/node</span></span><br><span class="line"></span><br><span class="line">nvm which <span class="number">10</span></span><br><span class="line"><span class="comment">// ~/.nvm/versions/node/v10.7.0/bin/node</span></span><br><span class="line"></span><br><span class="line">nvm which <span class="number">8</span></span><br><span class="line"><span class="comment">// ~/.nvm/versions/node/v8.11.3/bin/node</span></span><br></pre></td></tr></table></figure><h4 id="2.3.-%E6%9F%A5%E7%9C%8B%E5%B7%B2%E7%BB%8F%E5%AE%89%E8%A3%85%E7%9A%84%E7%89%88%E6%9C%AC">2.3. 查看已经安装的版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">        v8.11.3</span><br><span class="line">-&gt;      v10.7.0   // -&gt; 表示当前使用的版本</span><br><span class="line">default -&gt; 10 (-&gt; v10.7.0)  // `default` 表示默认使用的版本</span><br><span class="line">node -&gt; stable (-&gt; v10.7.0) (default)</span><br><span class="line">stable -&gt; 10.7 (-&gt; v10.7.0) (default)</span><br><span class="line">iojs -&gt; N/A (default)</span><br><span class="line">lts/* -&gt; lts/carbon (-&gt; v8.11.3)</span><br><span class="line">lts/argon -&gt; v4.9.1 (-&gt; N/A)</span><br><span class="line">lts/boron -&gt; v6.14.3 (-&gt; N/A)</span><br><span class="line">lts/carbon -&gt; v8.11.3</span><br></pre></td></tr></table></figure><h4 id="2.4.-%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E5%8F%AF%E7%94%A8%E7%89%88%E6%9C%AC">2.4. 查看远程可用版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 所有可用版本</span><br><span class="line">nvm ls-remote</span><br><span class="line"></span><br><span class="line">// 只列出稳定（LTS）版本</span><br><span class="line">nvm ls-remote --lts</span><br></pre></td></tr></table></figure><h4 id="2.5.-%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC">2.5. 切换版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 切换到 v8.11.3</span><br><span class="line">nvm use 8</span><br><span class="line"></span><br><span class="line">// 切换到 v10.7.0</span><br><span class="line">nvm use 10</span><br><span class="line"></span><br><span class="line">// 切换到稳定版（LTS）</span><br><span class="line">nvm use --lts</span><br></pre></td></tr></table></figure><h4 id="2.6.-%E4%BB%A5%E6%8C%87%E5%AE%9A%E7%89%88%E6%9C%AC%E4%B8%B4%E6%97%B6%E8%BF%90%E8%A1%8C">2.6. 以指定版本临时运行</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 临时使用 v8.11.3 运行</span></span><br><span class="line">nvm run <span class="number">8</span> -v</span><br><span class="line">nvm run <span class="number">8</span> app.js</span><br><span class="line"></span><br><span class="line"><span class="comment">// 临时使用 v8.11.3 运行，并使用 v8.11.3 的路径</span></span><br><span class="line">nvm exec <span class="number">8</span> node -v</span><br><span class="line">nvm exec <span class="number">8</span> node app.js</span><br><span class="line">nvm exec <span class="number">8</span> npm install -g lodash</span><br></pre></td></tr></table></figure><h4 id="2.7.-%E5%88%AB%E5%90%8D">2.7. 别名</h4><p>如果安装的版本过多为了方便记住，可以使用别名代替每次输入版本号。<br><code>default</code> 别名指向默认的版本。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// nvm alias &lt;name&gt; &lt;version&gt;</span></span><br><span class="line">nvm alias <span class="keyword">default</span> <span class="number">8</span></span><br><span class="line">nvm alias n8 <span class="number">8</span></span><br><span class="line">nvm alias n10 <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// nvm unalias &lt;name&gt;</span></span><br><span class="line">nvm unalias n8</span><br><span class="line">nvm unalias n10</span><br></pre></td></tr></table></figure><h2 id="3.-%E9%A1%B9%E7%9B%AE-.nvmrc">3. 项目 <code>.nvmrc</code></h2><p>可以通过创建项目目录中的 <code>.nvmrc</code> 文件来指定要使用的 Node 版本。<br>之后在项目目录中执行 <code>nvm use</code>, <code>nvm install</code>, <code>nvm exec</code>, <code>nvm run</code>, <code>nvm which</code> 即可。<br><code>.nvmrc</code> 文件内容只需要遵守上文提到的语义化版本规则即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">"8"</span> &gt; .nvmrc</span><br><span class="line">echo <span class="string">"lts/*"</span> &gt; .nvmrc</span><br><span class="line">echo <span class="string">"node"</span> &gt; .nvmrc</span><br></pre></td></tr></table></figure><h2 id="4.-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">4. 常见问题</h2><h4 id="4.1.-%E4%BD%BF%E7%94%A8-nvm-%E5%90%8E%E5%8A%A0%E8%BD%BD%E4%B8%8D%E5%88%B0%E5%85%A8%E5%B1%80%E5%8C%85">4.1. 使用 nvm 后加载不到全局包</h4><p>有时候明明全局安装一个包，但是项目里就是引用不到，是因为 <code>NODE_PATH</code> 环境变量没有设置。修改 <code>~/.bash_profile</code> 如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// npm root -g 返回当前版本下 npm 包的路径</span><br><span class="line">// ~/.nvm/versions/node/v8.11.3/lib/node_modules</span><br><span class="line"><span class="built_in">export</span> NODE_PATH=`npm root -g`</span><br></pre></td></tr></table></figure><h2 id="5.-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">5. 参考链接</h2><p>· <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">Node Version Manager</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;同时开发多个项目，项目的需求不同，进而依赖不同版本的 Node.js 运行环境。&lt;a href=&quot;https://github.com/creationix/nvm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;nvm&lt;/a&gt; 版本管理工具能够很方便的切换，而不用每次全局修改。&lt;/p&gt;
&lt;h2 id=&quot;1.-%E5%AE%89%E8%A3%85-%26-%E6%9B%B4%E6%96%B0&quot;&gt;1. 安装 &amp;amp; 更新&lt;/h2&gt;
&lt;p&gt;建议先删除系统安装的 node 和 npm，完全使用 nvm 来管理。&lt;br&gt;
以 MacOS 为例：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew uninstall node; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// or `brew uninstall --force node` &lt;span class=&quot;built_in&quot;&gt;which&lt;/span&gt; removes all versions&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew prune;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm -rf /opt/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin/node /opt/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/include/node /opt/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/lib/node_modules&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm -rf /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin/npm /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/share/man/man1/node.1 /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/lib/dtrace/node.d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rm -rf ~/.npm ~/.npmrc ~/.node-gyp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装 &amp;amp; 升级 nvm&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Node.Js" scheme="http://garryshield.github.com/categories/Node-Js/"/>
    
    
      <category term="Nvm" scheme="http://garryshield.github.com/tags/Nvm/"/>
    
  </entry>
  
</feed>
